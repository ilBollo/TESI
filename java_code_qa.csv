id,question,answer,context
17,Create a function in Java for computing the factorial of a positive integer number.,"public static long factorial(int n) {
    if (n == 0) {
        return 1;
    }
    long result = 1;
    for (int i = 1; i <= n; i++) {
        result *= i;
    }
    return result;
}","### Instruction: 
 Create a function in Java for computing the factorial of a positive integer number. 
 ### Response:
 public static long factorial(int n) {
    if (n == 0) {
        return 1;
    }
    long result = 1;
    for (int i = 1; i <= n; i++) {
        result *= i;
    }
    return result;
}"
29,"Create a Java program that prints out the sum of the numbers in the array.
Input: int[] numbers = {1, 2, 3 , 4, 5};","public class SumOfArray {
    public static void main(String[] args) {
        int[] numbers = {1, 2, 3 , 4, 5};
        int sum = 0;
        for(int i=0; i < numbers.length;i++) {
            sum = sum + numbers[i];
        }
        System.out.println(""The sum of numbers in the given array is: "" + sum);
    }
}","### Instruction: 
 Create a Java program that prints out the sum of the numbers in the array. 
 ### Input: int[] numbers = {1, 2, 3 , 4, 5}; 
 ### Response:
 public class SumOfArray {
    public static void main(String[] args) {
        int[] numbers = {1, 2, 3 , 4, 5};
        int sum = 0;
        for(int i=0; i < numbers.length;i++) {
            sum = sum + numbers[i];
        }
        System.out.println(""The sum of numbers in the given array is: "" + sum);
    }
}"
36,"Create a Java program that prints out the contents of a given two-dimensional array.
Input: int[][] arr = {{1,2},{3,4},{5,6}}","public class TwoDArray {

    public static void main(String[] args) {
        int[][] arr = {{1,2},{3,4},{5,6}};

        for(int i=0;i<arr.length;i++){
            for(int j=0;j<arr[i].length;j++){
                System.out.print(arr[i][j]+"" "");
            }
            System.out.println();
        }
    }
}","### Instruction: 
 Create a Java program that prints out the contents of a given two-dimensional array. 
 ### Input: int[][] arr = {{1,2},{3,4},{5,6}} 
 ### Response:
 public class TwoDArray {

    public static void main(String[] args) {
        int[][] arr = {{1,2},{3,4},{5,6}};

        for(int i=0;i<arr.length;i++){
            for(int j=0;j<arr[i].length;j++){
                System.out.print(arr[i][j]+"" "");
            }
            System.out.println();
        }
    }
}"
65,Describe the basic syntax of a Java function?,"A Java function consists of a function name, return type, parameters (arguments), and body. The syntax of a Java function is as follows: 
public <return type> <function name>(<list of parameters>) { 
    // function body 
    <statements> 
}","### Instruction: 
 Describe the basic syntax of a Java function? 
 ### Response:
 A Java function consists of a function name, return type, parameters (arguments), and body. The syntax of a Java function is as follows: 
public <return type> <function name>(<list of parameters>) { 
    // function body 
    <statements> 
}"
83,"Create a class in Java named Puppy that has two instance variables, age and name and two methods, bark and sleep.","public class Puppy { 
   // Instance Variables 
   String name; 
   int age; 
  
   // Constructor 
   public Puppy(String name, int age){ 
      this.name = name; 
      this.age = age; 
   } 
  
   // Methods 
   public void bark(){ 
      System.out.println(""Woof Woof!""); 
   } 
  
   public void sleep(){ 
      System.out.println(""Zzzzzz...""); 
   } 
}","### Instruction: 
 Create a class in Java named Puppy that has two instance variables, age and name and two methods, bark and sleep. 
 ### Response:
 public class Puppy { 
   // Instance Variables 
   String name; 
   int age; 
  
   // Constructor 
   public Puppy(String name, int age){ 
      this.name = name; 
      this.age = age; 
   } 
  
   // Methods 
   public void bark(){ 
      System.out.println(""Woof Woof!""); 
   } 
  
   public void sleep(){ 
      System.out.println(""Zzzzzz...""); 
   } 
}"
116,Write a Java program to reverse a given string.,"public class ReverseString
{ 

    public static void main(String[] args) 
    { 
        String input = ""Hello""; 
        StringBuilder input1 = new StringBuilder(); 
  
        // append a string into StringBuilder input1 
        input1.append(input); 
  
        // reverse StringBuilder input1 
        input1 = input1.reverse(); 
  
        // print reversed String 
        System.out.println(input1); 
    } 
}","### Instruction: 
 Write a Java program to reverse a given string. 
 ### Response:
 public class ReverseString
{ 

    public static void main(String[] args) 
    { 
        String input = ""Hello""; 
        StringBuilder input1 = new StringBuilder(); 
  
        // append a string into StringBuilder input1 
        input1.append(input); 
  
        // reverse StringBuilder input1 
        input1 = input1.reverse(); 
  
        // print reversed String 
        System.out.println(input1); 
    } 
}"
120,Write a Java program to generate random numbers,"import java.util.Random; 
  
public class GenerateRandom { 
  
    public static void main(String[] args) 
    { 
  
        Random rand = new Random(); 
  
        // Generate random integers in range 0 to 999 
        int x = rand.nextInt(1000); 
        System.out.println(""Random Integers: "" + x); 
  
        // Generate Random doubles 
        double y = rand.nextDouble(); 
        System.out.println(""Random Doubles: "" + y); 
  
        // Generate Random Boolean 
        boolean z = rand.nextBoolean(); 
        System.out.println(""Random Boolean: "" + z); 
    } 
}","### Instruction: 
 Write a Java program to generate random numbers 
 ### Response:
 import java.util.Random; 
  
public class GenerateRandom { 
  
    public static void main(String[] args) 
    { 
  
        Random rand = new Random(); 
  
        // Generate random integers in range 0 to 999 
        int x = rand.nextInt(1000); 
        System.out.println(""Random Integers: "" + x); 
  
        // Generate Random doubles 
        double y = rand.nextDouble(); 
        System.out.println(""Random Doubles: "" + y); 
  
        // Generate Random Boolean 
        boolean z = rand.nextBoolean(); 
        System.out.println(""Random Boolean: "" + z); 
    } 
}"
128,Create a function in Java that takes a string and prints the reversed version.,"public static void reverseString(String str) { 
    StringBuilder sb = new StringBuilder(); 
  
    for (int i = str.length() - 1; i >= 0; i--) { 
        sb.append(str.charAt(i)); 
    } 
  
    System.out.print(sb.toString()); 
}","### Instruction: 
 Create a function in Java that takes a string and prints the reversed version. 
 ### Response:
 public static void reverseString(String str) { 
    StringBuilder sb = new StringBuilder(); 
  
    for (int i = str.length() - 1; i >= 0; i--) { 
        sb.append(str.charAt(i)); 
    } 
  
    System.out.print(sb.toString()); 
}"
135,"Create a function in Java to convert a list of strings to a 2D array.
Input: list: [""aa"", ""bb"", ""cc""]","public static String[][] convertTo2DArray(List<String> strings) {
    int n = strings.size();
    String[][] array = new String[n][1];
    for (int i = 0; i < n; i++) {
        array[i][0] = strings.get(i);
    }
    return array;
    
}","### Instruction: 
 Create a function in Java to convert a list of strings to a 2D array. 
 ### Input: list: [""aa"", ""bb"", ""cc""] 
 ### Response:
 public static String[][] convertTo2DArray(List<String> strings) {
    int n = strings.size();
    String[][] array = new String[n][1];
    for (int i = 0; i < n; i++) {
        array[i][0] = strings.get(i);
    }
    return array;
    
}"
145,"Create a Java program which takes an integer array as a parameter, sorts the array in ascending order, and returns the sorted array.
Input: [3, 5, 9, 1, 6]","public int[] SortIntegerArray(int[] nums)
{
    Arrays.sort(nums);
    return nums;
}","### Instruction: 
 Create a Java program which takes an integer array as a parameter, sorts the array in ascending order, and returns the sorted array. 
 ### Input: [3, 5, 9, 1, 6] 
 ### Response:
 public int[] SortIntegerArray(int[] nums)
{
    Arrays.sort(nums);
    return nums;
}"
148,"Create a Java program to take a given string and replace all occurrences of a given letter with another given letter
Input: 'bbac', 'b', 'a'","public String ReplaceLetters(String str, char oldChar, char newChar) {
    return str.replace(oldChar, newChar);
}","### Instruction: 
 Create a Java program to take a given string and replace all occurrences of a given letter with another given letter 
 ### Input: 'bbac', 'b', 'a' 
 ### Response:
 public String ReplaceLetters(String str, char oldChar, char newChar) {
    return str.replace(oldChar, newChar);
}"
169,"Write code in Java to generate the Fibonacci sequence up to N numbers.
Input: N = 10","public class Fibonacci { 
  
    public static void FibonacciN(int n) { 
        int i, f=0, s=1; 
  
        if (n == 1) 
            System.out.print(f+ "" ""); 
  
        else { 
            System.out.print(f+"" ""+s+"" ""); 
  
            for (i = 2; i < n; i++) { 
                int next = f + s; 
                System.out.print(next+"" ""); 
                f= s; 
                s = next; 
            } 
        } 
    } 
}","### Instruction: 
 Write code in Java to generate the Fibonacci sequence up to N numbers. 
 ### Input: N = 10 
 ### Response:
 public class Fibonacci { 
  
    public static void FibonacciN(int n) { 
        int i, f=0, s=1; 
  
        if (n == 1) 
            System.out.print(f+ "" ""); 
  
        else { 
            System.out.print(f+"" ""+s+"" ""); 
  
            for (i = 2; i < n; i++) { 
                int next = f + s; 
                System.out.print(next+"" ""); 
                f= s; 
                s = next; 
            } 
        } 
    } 
}"
171,"Write code in Java to sort an array of integers in ascending order.
Input: [5, 2, 8, 10, 4, 9]","public static void sortAscending(int[] arr) {
    for(int i = 0; i < arr.length - 1; i++) {
        int min = i;
        for (int j = i + 1; j < arr.length; j++) {
            if (arr[j] < arr[min]) {
                min = j;
            }
        }
        int tmp = arr[i];
        arr[i] = arr[min];
        arr[min] = tmp;
    }
}","### Instruction: 
 Write code in Java to sort an array of integers in ascending order. 
 ### Input: [5, 2, 8, 10, 4, 9] 
 ### Response:
 public static void sortAscending(int[] arr) {
    for(int i = 0; i < arr.length - 1; i++) {
        int min = i;
        for (int j = i + 1; j < arr.length; j++) {
            if (arr[j] < arr[min]) {
                min = j;
            }
        }
        int tmp = arr[i];
        arr[i] = arr[min];
        arr[min] = tmp;
    }
}"
186,"Write a Java program to calculate the sum of the two given integers.
Input: Integers: 4 and 9","public static int addIntegers(int a, int b) {
    int sum = a + b;
    return sum;
}

public static void main(String[] args) {
    int x = 4, y = 9;
    int sum = addIntegers(x, y);
    System.out.println(""Sum is: ""+sum);
}","### Instruction: 
 Write a Java program to calculate the sum of the two given integers. 
 ### Input: Integers: 4 and 9 
 ### Response:
 public static int addIntegers(int a, int b) {
    int sum = a + b;
    return sum;
}

public static void main(String[] args) {
    int x = 4, y = 9;
    int sum = addIntegers(x, y);
    System.out.println(""Sum is: ""+sum);
}"
191,Write a function in Java that takes two strings as parameters and returns true if the first string is a substring of the second.,"public boolean isSubstring(String s1, String s2) 
{ 
    int M = s1.length(); 
    int N = s2.length(); 
  
    for (int i = 0; i <= N - M; i++) { 
        int j; 
  
        for (j = 0; j < M; j++) 
            if (s2.charAt(i + j) != s1.charAt(j)) 
                break; 
  
        if (j == M) 
            return true; 
    } 
  
    return false; 
}","### Instruction: 
 Write a function in Java that takes two strings as parameters and returns true if the first string is a substring of the second. 
 ### Response:
 public boolean isSubstring(String s1, String s2) 
{ 
    int M = s1.length(); 
    int N = s2.length(); 
  
    for (int i = 0; i <= N - M; i++) { 
        int j; 
  
        for (j = 0; j < M; j++) 
            if (s2.charAt(i + j) != s1.charAt(j)) 
                break; 
  
        if (j == M) 
            return true; 
    } 
  
    return false; 
}"
243,Write a Java program to print out the first n prime numbers,"public static void printPrimeNumbers(int n) 
    { 
        int num; 
        int count=0;
        for (int i = 2; i <= n;) 
        { 
            num=0; 
            for (int j = 2; j <= i / 2; j++)  
            { 
                if (i % j == 0) 
                { 
                    num++; 
                    break; 
                } 
            } 
            if (num == 0) 
            { 
                System.out.print(i+"" ""); 
                count++; 
            } 
            i++; 
        } 
    }","### Instruction: 
 Write a Java program to print out the first n prime numbers 
 ### Response:
 public static void printPrimeNumbers(int n) 
    { 
        int num; 
        int count=0;
        for (int i = 2; i <= n;) 
        { 
            num=0; 
            for (int j = 2; j <= i / 2; j++)  
            { 
                if (i % j == 0) 
                { 
                    num++; 
                    break; 
                } 
            } 
            if (num == 0) 
            { 
                System.out.print(i+"" ""); 
                count++; 
            } 
            i++; 
        } 
    }"
345,Write a Java program to find the largest element in a given array.,"public class Largest { 
  
    static int getLargest(int[] inputArray){ 
        int largest = inputArray[0]; 
        for(int i = 1; i < inputArray.length; i++){ 
            if(inputArray[i] > largest){ 
                largest = inputArray[i]; 
            } 
        } 
        return largest; 
    } 
      
    public static void main(String[] args){ 
        int[] arr = {10,4,20,5,89}; 
        System.out.println(""Largest element in the array is: ""+getLargest(arr)); 
    } 
}","### Instruction: 
 Write a Java program to find the largest element in a given array. 
 ### Response:
 public class Largest { 
  
    static int getLargest(int[] inputArray){ 
        int largest = inputArray[0]; 
        for(int i = 1; i < inputArray.length; i++){ 
            if(inputArray[i] > largest){ 
                largest = inputArray[i]; 
            } 
        } 
        return largest; 
    } 
      
    public static void main(String[] args){ 
        int[] arr = {10,4,20,5,89}; 
        System.out.println(""Largest element in the array is: ""+getLargest(arr)); 
    } 
}"
348,Create a method in Java to return the largest of three numbers.,"public static int max(int num1, int num2, int num3) {
int max = num1;
if (num2 > max) {
 max = num2;
}
if (num3 > max) {
 max = num3;
}
return max;
}","### Instruction: 
 Create a method in Java to return the largest of three numbers. 
 ### Response:
 public static int max(int num1, int num2, int num3) {
int max = num1;
if (num2 > max) {
 max = num2;
}
if (num3 > max) {
 max = num3;
}
return max;
}"
360,"Edit the Java code to filter out the persons whose age is less than 18.
Input: List<Person> persons = new ArrayList<>();

for (Person person : persons) {
    System.out.println(person.getName());
}","List<Person> persons = new ArrayList<>();

for (Person person : persons) {
    if (person.getAge() >= 18) {
        System.out.println(person.getName());
    }
}","### Instruction: 
 Edit the Java code to filter out the persons whose age is less than 18. 
 ### Input: List<Person> persons = new ArrayList<>();

for (Person person : persons) {
    System.out.println(person.getName());
} 
 ### Response:
 List<Person> persons = new ArrayList<>();

for (Person person : persons) {
    if (person.getAge() >= 18) {
        System.out.println(person.getName());
    }
}"
407,Write code in Java to create a linked list.,"class Node{
    int data; 
    Node next; 
        
    Node(int d){
        data = d; 
        next = null; 
    } 
} 

class LinkedList{ 
    Node head; 
        
    public void insert(int data){ 
        Node node = new Node(data); 
        if (head == null) { 
            head = node; 
        } 
        else { 
            Node n = head; 
            while (n.next != null) { 
                n = n.next; 
            } 
            n.next = node; 
        } 
    } 
}","### Instruction: 
 Write code in Java to create a linked list. 
 ### Response:
 class Node{
    int data; 
    Node next; 
        
    Node(int d){
        data = d; 
        next = null; 
    } 
} 

class LinkedList{ 
    Node head; 
        
    public void insert(int data){ 
        Node node = new Node(data); 
        if (head == null) { 
            head = node; 
        } 
        else { 
            Node n = head; 
            while (n.next != null) { 
                n = n.next; 
            } 
            n.next = node; 
        } 
    } 
}"
409,Construct a Java program for sorting a given array in ascending order.,"public class ArraySort { 
    public static int[] sortArray(int[] arr) { 
        int n = arr.length; 
        for (int i = 0; i < n - 1; i++) { 
            int min_idx = i; 
            for (int j = i + 1; j < n; j++) 
                if (arr[j] < arr[min_idx]) 
                    min_idx = j; 
            int temp = arr[min_idx]; 
            arr[min_idx] = arr[i]; 
            arr[i] = temp; 
        } 
        return arr; 
    } 
}","### Instruction: 
 Construct a Java program for sorting a given array in ascending order. 
 ### Response:
 public class ArraySort { 
    public static int[] sortArray(int[] arr) { 
        int n = arr.length; 
        for (int i = 0; i < n - 1; i++) { 
            int min_idx = i; 
            for (int j = i + 1; j < n; j++) 
                if (arr[j] < arr[min_idx]) 
                    min_idx = j; 
            int temp = arr[min_idx]; 
            arr[min_idx] = arr[i]; 
            arr[i] = temp; 
        } 
        return arr; 
    } 
}"
442,Implement a Java program for finding the index of an element in a sorted array.,"public int binarySearch(int[] arr, int val){
    int left = 0;
    int right = arr.length - 1;
    while (left <= right) {
        int mid = left + (right - left) /2 ;
        if (arr[mid] == val) 
            return mid;
        else if (arr[mid] < val) 
            left = mid + 1;
        else 
            right = mid - 1;
    }  
    return -1;
}","### Instruction: 
 Implement a Java program for finding the index of an element in a sorted array. 
 ### Response:
 public int binarySearch(int[] arr, int val){
    int left = 0;
    int right = arr.length - 1;
    while (left <= right) {
        int mid = left + (right - left) /2 ;
        if (arr[mid] == val) 
            return mid;
        else if (arr[mid] < val) 
            left = mid + 1;
        else 
            right = mid - 1;
    }  
    return -1;
}"
450,Create a Java program to check for a palindrome.,"public class Palindrome {  
    public static boolean isPalindrome(String str){ 
        // Pointers pointing to the beginning 
        // and the end of the string 
        int i = 0, j = str.length() - 1; 
  
        // While there are characters toc compare 
        while (i < j) { 
  
            // If there is a mismatch 
            if (str.charAt(i) != str.charAt(j)) 
                return false; 
  
            // Increment first pointer and 
            // decrement the other 
            i++; 
            j--; 
        } 
  
        // Given string is a palindrome 
        return true; 
    } 
}","### Instruction: 
 Create a Java program to check for a palindrome. 
 ### Response:
 public class Palindrome {  
    public static boolean isPalindrome(String str){ 
        // Pointers pointing to the beginning 
        // and the end of the string 
        int i = 0, j = str.length() - 1; 
  
        // While there are characters toc compare 
        while (i < j) { 
  
            // If there is a mismatch 
            if (str.charAt(i) != str.charAt(j)) 
                return false; 
  
            // Increment first pointer and 
            // decrement the other 
            i++; 
            j--; 
        } 
  
        // Given string is a palindrome 
        return true; 
    } 
}"
486,"Create a for loop in Java that iterates over the given array and prints the values.
Input: Array: int[] arr = {1, 2, 3, 4, 5};","for (int i = 0; i < arr.length; i++) { 
  System.out.println(arr[i]); 
}","### Instruction: 
 Create a for loop in Java that iterates over the given array and prints the values. 
 ### Input: Array: int[] arr = {1, 2, 3, 4, 5}; 
 ### Response:
 for (int i = 0; i < arr.length; i++) { 
  System.out.println(arr[i]); 
}"
491,Create a program in Java to print out the Fibonacci sequence of numbers up to 10.,"public class Fibonacci {

  public static void main(String[] args) {
    int n1=0,n2=1,n3,i,count=10;
    System.out.print(n1+"" ""+n2);
    
    for(i=2;i<count;++i) {
      n3=n1+n2;
      System.out.print("" ""+n3);
      n1=n2;
      n2=n3;
    }   
  }
}","### Instruction: 
 Create a program in Java to print out the Fibonacci sequence of numbers up to 10. 
 ### Response:
 public class Fibonacci {

  public static void main(String[] args) {
    int n1=0,n2=1,n3,i,count=10;
    System.out.print(n1+"" ""+n2);
    
    for(i=2;i<count;++i) {
      n3=n1+n2;
      System.out.print("" ""+n3);
      n1=n2;
      n2=n3;
    }   
  }
}"
493,Create a function in Java to find the larger of two integers.,"public static int max(int x, int y) {
    if (x > y)
      return x;
    else 
      return y;
}","### Instruction: 
 Create a function in Java to find the larger of two integers. 
 ### Response:
 public static int max(int x, int y) {
    if (x > y)
      return x;
    else 
      return y;
}"
523,Write a Java program that takes two strings as inputs and checks if one string is a rotation of the other.,"import java.util.Arrays;
 
class GFG {
 
    // Function to check if two strings are 
    // rotations of each other or not
    static boolean areRotations(String str1, String str2)
    {
        // There lengths must be same and str2 should 
        // be a substring of str1 concatenated with 
        // str1.
        return (str1.length() == str2.length())
            && ((str1 + str1).indexOf(str2) != -1);
    }
 
    // Driver program 
    public static void main(String[] args) 
    {
        String str1 = ""ABACD"";
        String str2 = ""CDABA"";
 
        if (areRotations(str1, str2))
            System.out.println(""Strings are rotations of each other"");
        else
            System.out.println(""Strings are not rotations of each other"");
    }
}","### Instruction: 
 Write a Java program that takes two strings as inputs and checks if one string is a rotation of the other. 
 ### Response:
 import java.util.Arrays;
 
class GFG {
 
    // Function to check if two strings are 
    // rotations of each other or not
    static boolean areRotations(String str1, String str2)
    {
        // There lengths must be same and str2 should 
        // be a substring of str1 concatenated with 
        // str1.
        return (str1.length() == str2.length())
            && ((str1 + str1).indexOf(str2) != -1);
    }
 
    // Driver program 
    public static void main(String[] args) 
    {
        String str1 = ""ABACD"";
        String str2 = ""CDABA"";
 
        if (areRotations(str1, str2))
            System.out.println(""Strings are rotations of each other"");
        else
            System.out.println(""Strings are not rotations of each other"");
    }
}"
525,"Write a function in Java that takes a string consisting of brackets and output true if the brackets are properly nested, else output false.","public static boolean isBalanced(String str) 
{ 
    if(str.length() == 0) 
        return true; 
      
    Stack<Character> stack  = new Stack<Character>(); 
  
    for(int i = 0; i < str.length(); i++) 
    { 
        char current = str.charAt(i); 
          
        if(current == '{' || current == '(' || current == '[') 
        { 
        stack.push(current); 
        } 
  
        if(current == '}' || current == ')' || current == ']') 
        { 
            if(stack.isEmpty()) 
                return false; 
  
            char last = stack.peek(); 
            if(current == '}' && last == '{' || current == ')' && last == '(' || current == ']' && last == '[') 
                stack.pop(); 
            else 
                return false; 
        }
    } 
 
    return stack.isEmpty(); 
}","### Instruction: 
 Write a function in Java that takes a string consisting of brackets and output true if the brackets are properly nested, else output false. 
 ### Response:
 public static boolean isBalanced(String str) 
{ 
    if(str.length() == 0) 
        return true; 
      
    Stack<Character> stack  = new Stack<Character>(); 
  
    for(int i = 0; i < str.length(); i++) 
    { 
        char current = str.charAt(i); 
          
        if(current == '{' || current == '(' || current == '[') 
        { 
        stack.push(current); 
        } 
  
        if(current == '}' || current == ')' || current == ']') 
        { 
            if(stack.isEmpty()) 
                return false; 
  
            char last = stack.peek(); 
            if(current == '}' && last == '{' || current == ')' && last == '(' || current == ']' && last == '[') 
                stack.pop(); 
            else 
                return false; 
        }
    } 
 
    return stack.isEmpty(); 
}"
527,Create an array in Java with 10 floating-point values and output the average of these values.,"// Create an array 
float arr[] = {1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 10.1};

// Calculate average 
float sum = 0;
for (int i = 0; i < 10; i++) {
    sum += arr[i];
}

float average = sum / 10;
System.out.println(""Average of the array values: "" + average);","### Instruction: 
 Create an array in Java with 10 floating-point values and output the average of these values. 
 ### Response:
 // Create an array 
float arr[] = {1.1, 2.2, 3.3, 4.4, 5.5, 6.6, 7.7, 8.8, 9.9, 10.1};

// Calculate average 
float sum = 0;
for (int i = 0; i < 10; i++) {
    sum += arr[i];
}

float average = sum / 10;
System.out.println(""Average of the array values: "" + average);"
553,"Suppose there is an array of numbers. Write a Java program to sort the array in ascending order.
Input: [3,8,5,1,2,6,4]","public class SortAscending { 
    public static void main(String[] args) 
    {
        int[] numbers = {3,8,5,1,2,6,4};
        int temp = 0;
        for (int i = 0; i < numbers.length; i++) {
            for (int j = i+1; j < numbers.length; j++) {
                if (numbers[i] > numbers[j]) {
                    //swap elements
                    temp = numbers[i]; // assign value of i to temp
                    numbers[i] = numbers[j];  // assign value of j to i
                    numbers[j] = temp;  // assign value of temp to j
                }
            }
        }
        System.out.println(""Array elements in ascending order:"");
        for (int i = 0; i < numbers.length; i++) { 
            System.out.print(numbers[i]+"" ""); 
        } 
    }
}","### Instruction: 
 Suppose there is an array of numbers. Write a Java program to sort the array in ascending order. 
 ### Input: [3,8,5,1,2,6,4] 
 ### Response:
 public class SortAscending { 
    public static void main(String[] args) 
    {
        int[] numbers = {3,8,5,1,2,6,4};
        int temp = 0;
        for (int i = 0; i < numbers.length; i++) {
            for (int j = i+1; j < numbers.length; j++) {
                if (numbers[i] > numbers[j]) {
                    //swap elements
                    temp = numbers[i]; // assign value of i to temp
                    numbers[i] = numbers[j];  // assign value of j to i
                    numbers[j] = temp;  // assign value of temp to j
                }
            }
        }
        System.out.println(""Array elements in ascending order:"");
        for (int i = 0; i < numbers.length; i++) { 
            System.out.print(numbers[i]+"" ""); 
        } 
    }
}"
608,"Write a Java program to print the sum of all integers from 1 to given integer.
Input: integer = 5","public class SumIntegers {
 
    public static void main(String[] args) {
        int n = 5;
        int sum = 0;
        for (int i = 1; i <= n; i++) {
            sum += i;
        }
        System.out.println(""Sum of integers from 1 to ""+n+"": ""+sum);
    }
 
}
// Output: Sum of integers from 1 to 5: 15","### Instruction: 
 Write a Java program to print the sum of all integers from 1 to given integer. 
 ### Input: integer = 5 
 ### Response:
 public class SumIntegers {
 
    public static void main(String[] args) {
        int n = 5;
        int sum = 0;
        for (int i = 1; i <= n; i++) {
            sum += i;
        }
        System.out.println(""Sum of integers from 1 to ""+n+"": ""+sum);
    }
 
}
// Output: Sum of integers from 1 to 5: 15"
647,Write a Java program to find the sum of elements in a 3x3 matrix.,"// Java program to find sum of elements in a matrix 
public class Matrix 
{ 
	public static void main(String[] args) 
	{ 
		// Initialize matrix 
		int[][] matrix = {{1, 2, 3}, 
						{4, 5, 6}, 
						{7, 8, 9}}; 

		// Initialize sum 
		int sum = 0; 

		// Compute sum of elements 
		for (int i = 0; i < 3; i++) 
			for (int j = 0; j < 3; j++) 
				sum = sum + matrix[i][j]; 

		// Print Sum 
		System.out.println(""Sum of elements is: "" + sum); 
	} 
}","### Instruction: 
 Write a Java program to find the sum of elements in a 3x3 matrix. 
 ### Response:
 // Java program to find sum of elements in a matrix 
public class Matrix 
{ 
	public static void main(String[] args) 
	{ 
		// Initialize matrix 
		int[][] matrix = {{1, 2, 3}, 
						{4, 5, 6}, 
						{7, 8, 9}}; 

		// Initialize sum 
		int sum = 0; 

		// Compute sum of elements 
		for (int i = 0; i < 3; i++) 
			for (int j = 0; j < 3; j++) 
				sum = sum + matrix[i][j]; 

		// Print Sum 
		System.out.println(""Sum of elements is: "" + sum); 
	} 
}"
648,"Describe in one sentence what is wrong with the following Java code.
Input: public class Main {
    public static void main(String[] args) {
        int y;
        y = 10 + 5;
        y -= 30;
    }
}","The code does not do anything with the value of y, meaning that it is not being used.","### Instruction: 
 Describe in one sentence what is wrong with the following Java code. 
 ### Input: public class Main {
    public static void main(String[] args) {
        int y;
        y = 10 + 5;
        y -= 30;
    }
} 
 ### Response:
 The code does not do anything with the value of y, meaning that it is not being used."
683,Create a Java class that prints the Fibonacci sequence between 0 and 10.,"public class Fibonacci {

  public static void main(String[] args) {
    printFibonacci();
  }

  public static void printFibonacci() {
    int n1 = 0;
    int n2 = 1;
    int n3;

    System.out.print(n1 + "" "" + n2);

    for (int i = 0; i < 8; i++) {
      n3 = n1 + n2;
      System.out.print("" "" + n3);
      n1 = n2;
      n2 = n3;
    }
  }

}","### Instruction: 
 Create a Java class that prints the Fibonacci sequence between 0 and 10. 
 ### Response:
 public class Fibonacci {

  public static void main(String[] args) {
    printFibonacci();
  }

  public static void printFibonacci() {
    int n1 = 0;
    int n2 = 1;
    int n3;

    System.out.print(n1 + "" "" + n2);

    for (int i = 0; i < 8; i++) {
      n3 = n1 + n2;
      System.out.print("" "" + n3);
      n1 = n2;
      n2 = n3;
    }
  }

}"
696,Create an integer array using Java and sort it using the bubble sort algorithm.,"// Create an integer array
int[] array = {4, 2, 6, 1, 3};

// Sort the array using the bubbleSort function
bubbleSort(array);

// Write a function to implement the bubbleSort algorithm
public static int[] bubbleSort(int[] array) {
    int len = array.length;
    for (int i = 0; i < len; i++) {
        for (int j = 0; j < len; j++) {
            if (array[j] > array[j+1]) {
                int temp = array[j];
                array[j] = array[j+1];
                array[j+1] = temp;
            }
        }
    }
    return array;
}
// The sorted array is [1, 2, 3, 4, 6]","### Instruction: 
 Create an integer array using Java and sort it using the bubble sort algorithm. 
 ### Response:
 // Create an integer array
int[] array = {4, 2, 6, 1, 3};

// Sort the array using the bubbleSort function
bubbleSort(array);

// Write a function to implement the bubbleSort algorithm
public static int[] bubbleSort(int[] array) {
    int len = array.length;
    for (int i = 0; i < len; i++) {
        for (int j = 0; j < len; j++) {
            if (array[j] > array[j+1]) {
                int temp = array[j];
                array[j] = array[j+1];
                array[j+1] = temp;
            }
        }
    }
    return array;
}
// The sorted array is [1, 2, 3, 4, 6]"
719,Create a Java program that reads two numbers from the user and prints the sum.,"import java.util.Scanner;

public class Sum {

public static void main(String[] args) {
 
Scanner sc = new Scanner(System.in);
 
System.out.println(""Enter first number:"");
int num1 = sc.nextInt();
 
System.out.println(""Enter second number:"");
int num2 = sc.nextInt();
 
int sum = num1 + num2;
 
System.out.println(""The sum is: ""+sum);
 
 }
}","### Instruction: 
 Create a Java program that reads two numbers from the user and prints the sum. 
 ### Response:
 import java.util.Scanner;

public class Sum {

public static void main(String[] args) {
 
Scanner sc = new Scanner(System.in);
 
System.out.println(""Enter first number:"");
int num1 = sc.nextInt();
 
System.out.println(""Enter second number:"");
int num2 = sc.nextInt();
 
int sum = num1 + num2;
 
System.out.println(""The sum is: ""+sum);
 
 }
}"
725,"Write a for loop in Java to print all the numbers in a given list.
Input: int[] list = {21, 34, 54, 77, 92};","for (int i = 0; i < list.length; i++) {
 System.out.println(list[i]);
}","### Instruction: 
 Write a for loop in Java to print all the numbers in a given list. 
 ### Input: int[] list = {21, 34, 54, 77, 92}; 
 ### Response:
 for (int i = 0; i < list.length; i++) {
 System.out.println(list[i]);
}"
729,"Write a function in Java to sort a given array of numbers into ascending order.
Input: int[] array = {11, 7, 18, 2, 5, 8};","public static void sortAscending(int[] array) 
{ 
    // Sort the array in ascending order 
    Arrays.sort(array); 
  
    System.out.println(""Array in Ascending Order: ""); 
    for (int i = 0; i < array.length; i++)  
    { 
        System.out.print(array[i] + "" ""); 
    } 
}","### Instruction: 
 Write a function in Java to sort a given array of numbers into ascending order. 
 ### Input: int[] array = {11, 7, 18, 2, 5, 8}; 
 ### Response:
 public static void sortAscending(int[] array) 
{ 
    // Sort the array in ascending order 
    Arrays.sort(array); 
  
    System.out.println(""Array in Ascending Order: ""); 
    for (int i = 0; i < array.length; i++)  
    { 
        System.out.print(array[i] + "" ""); 
    } 
}"
736,"Modify the following Java program to find the area of a rectangle.
Input: public class Area
{
 public static void main(String[] args)
 {
 double radius = 10;
 double area = 3.14 * radius * radius;

 System.out.println(""The area of the circle = ""+area);
 }
}","public class Area
{
 public static void main(String[] args)
 {
 double length = 10;
 double width = 5;
 double area = length * width;

 System.out.println(""The area of the rectangle = ""+area);
 }
}","### Instruction: 
 Modify the following Java program to find the area of a rectangle. 
 ### Input: public class Area
{
 public static void main(String[] args)
 {
 double radius = 10;
 double area = 3.14 * radius * radius;

 System.out.println(""The area of the circle = ""+area);
 }
} 
 ### Response:
 public class Area
{
 public static void main(String[] args)
 {
 double length = 10;
 double width = 5;
 double area = length * width;

 System.out.println(""The area of the rectangle = ""+area);
 }
}"
761,"Analyze the given Java code and identify the errors.
Input: public class TestClass {
   public static void main (String[] args) {
      int x = 10;
      int y = 20
      int z = x + y;
      system.out.println(""The sum is: "" + z);
   }
}","The errors are:
1. The semicolon at the end of line 2 is missing.
2. The line 4 should be `System.out.println(""The sum is: "" + z);` (the capital S is missing).
3. The line 5 is an extra line which should be removed.","### Instruction: 
 Analyze the given Java code and identify the errors. 
 ### Input: public class TestClass {
   public static void main (String[] args) {
      int x = 10;
      int y = 20
      int z = x + y;
      system.out.println(""The sum is: "" + z);
   }
} 
 ### Response:
 The errors are:
1. The semicolon at the end of line 2 is missing.
2. The line 4 should be `System.out.println(""The sum is: "" + z);` (the capital S is missing).
3. The line 5 is an extra line which should be removed."
783,"Create a Java 8 Stream to filter a list of objects by a given field.
Input: [
    {'name': 'John', 'age': 20},
    {'name': 'Smith', 'age': 30},
    {'name': 'Bill', 'age': 40}
]","List<Object> list = Arrays.asList({
    {'name': 'John', 'age': 20},
    {'name': 'Smith', 'age': 30},
    {'name': 'Bill', 'age': 40}
});

Stream<Object> stream = list.stream();

// Filter records whose age greater than 25
stream.filter(record -> (int) record.get(""age"") > 25).forEach(System.out::println);","### Instruction: 
 Create a Java 8 Stream to filter a list of objects by a given field. 
 ### Input: [
    {'name': 'John', 'age': 20},
    {'name': 'Smith', 'age': 30},
    {'name': 'Bill', 'age': 40}
] 
 ### Response:
 List<Object> list = Arrays.asList({
    {'name': 'John', 'age': 20},
    {'name': 'Smith', 'age': 30},
    {'name': 'Bill', 'age': 40}
});

Stream<Object> stream = list.stream();

// Filter records whose age greater than 25
stream.filter(record -> (int) record.get(""age"") > 25).forEach(System.out::println);"
790,Design a class in Java that can store student information.,"public class Student {
  private String name;
  private int age;
  private String course;

  public Student(String name, int age, String course) {
    this.name = name;
    this.age = age;
    this.course = course;
  }

  public void setName(String name) {
    this.name = name;
  }
  public String getName(){
    return name;
  }
  
  public void setAge(int age){
    this.age = age;
  }

  public int getAge(){
    return age;
  }
  
  public void setCourse(String course){
    this.course = course;
  }

  public String getCourse(){
    return course;
  }
}","### Instruction: 
 Design a class in Java that can store student information. 
 ### Response:
 public class Student {
  private String name;
  private int age;
  private String course;

  public Student(String name, int age, String course) {
    this.name = name;
    this.age = age;
    this.course = course;
  }

  public void setName(String name) {
    this.name = name;
  }
  public String getName(){
    return name;
  }
  
  public void setAge(int age){
    this.age = age;
  }

  public int getAge(){
    return age;
  }
  
  public void setCourse(String course){
    this.course = course;
  }

  public String getCourse(){
    return course;
  }
}"
791,Create a class in Java that can store a list of students and the courses they are enrolled in.,"public class StudentList {
  private ArrayList<Student> students;
  private ArrayList<String> courses;

  public StudentList() {
    this.students = new ArrayList<Student>();
    this.courses = new ArrayList<String>();
  }

  public void addStudent(Student student) {
    this.students.add(student);
  }
  
  public void addCourse(String course) {
    this.courses.add(course);
  }
  
  public ArrayList<Student> getStudents() {
    return this.students;
  }
  
  public ArrayList<String> getCourses() {
    return this.courses;
  }
}","### Instruction: 
 Create a class in Java that can store a list of students and the courses they are enrolled in. 
 ### Response:
 public class StudentList {
  private ArrayList<Student> students;
  private ArrayList<String> courses;

  public StudentList() {
    this.students = new ArrayList<Student>();
    this.courses = new ArrayList<String>();
  }

  public void addStudent(Student student) {
    this.students.add(student);
  }
  
  public void addCourse(String course) {
    this.courses.add(course);
  }
  
  public ArrayList<Student> getStudents() {
    return this.students;
  }
  
  public ArrayList<String> getCourses() {
    return this.courses;
  }
}"
794,Design a class in Java that can store a list of books and their associated authors.,"public class BookCollection {
  private ArrayList<Book> books;
  private ArrayList<String> authors;

  public BookCollection() {
    this.books = new ArrayList<Book>();
    this.authors = new ArrayList<String>();
  }

  public void addBook(Book book) {
    this.books.add(book);
  }
  
  public void addAuthor(String author) {
    this.authors.add(author);
  }
  
  public ArrayList<Book> getBooks() {
    return this.books;
  }
  
  public ArrayList<String> getAuthors() {
    return this.authors;
  }
}","### Instruction: 
 Design a class in Java that can store a list of books and their associated authors. 
 ### Response:
 public class BookCollection {
  private ArrayList<Book> books;
  private ArrayList<String> authors;

  public BookCollection() {
    this.books = new ArrayList<Book>();
    this.authors = new ArrayList<String>();
  }

  public void addBook(Book book) {
    this.books.add(book);
  }
  
  public void addAuthor(String author) {
    this.authors.add(author);
  }
  
  public ArrayList<Book> getBooks() {
    return this.books;
  }
  
  public ArrayList<String> getAuthors() {
    return this.authors;
  }
}"
812,"Change this existing Java code to generate the ""Jesus Christ"" string.
Input: String str = ""Holy"";","String str = ""Holy"";
String jesusChrist = str + "" "" + ""Jesus Christ"";
System.out.println(jesusChrist);","### Instruction: 
 Change this existing Java code to generate the ""Jesus Christ"" string. 
 ### Input: String str = ""Holy""; 
 ### Response:
 String str = ""Holy"";
String jesusChrist = str + "" "" + ""Jesus Christ"";
System.out.println(jesusChrist);"
814,"Write a Java Method that takes an array of integers and returns true if the array is sorted in ascending order.
Input: array = [7, 18, 24, 55, 98]","public static boolean isSorted(int[] array) { 
    int n = array.length; 
    int temp = array[0]; 
  
    for (int i = 1; i < n; i++) { 
        if (temp > array[i]) 
            return false; 
        temp = array[i]; 
    } 
  
    return true; 
}","### Instruction: 
 Write a Java Method that takes an array of integers and returns true if the array is sorted in ascending order. 
 ### Input: array = [7, 18, 24, 55, 98] 
 ### Response:
 public static boolean isSorted(int[] array) { 
    int n = array.length; 
    int temp = array[0]; 
  
    for (int i = 1; i < n; i++) { 
        if (temp > array[i]) 
            return false; 
        temp = array[i]; 
    } 
  
    return true; 
}"
821,"Write a Java method that takes a string and prints out the number of occurrences of each letter in the string.
Input: String = ""adda123de3f""","public static void printLetterOccurrences(String str) {
    int[] alphabet = new int[26];
    for (int i = 0; i < str.length(); i++) {
        if (str.charAt(i) >= 'a' && str.charAt(i) <= 'z')
            alphabet[str.charAt(i) - 'a']++;
    }
    for (int i = 0; i < 26; i++) {
        if (alphabet[i] > 0) {
            System.out.println(""Number of Occurrences of "" + (char)(i + 'a') 
                    + "" is "" + alphabet[i]); 
        }
    }
}

// Output
// Number of Occurrences of a is 2 
// Number of Occurrences of d is 2 
// Number of Occurrences of e is 1 
// Number of Occurrences of f is 1","### Instruction: 
 Write a Java method that takes a string and prints out the number of occurrences of each letter in the string. 
 ### Input: String = ""adda123de3f"" 
 ### Response:
 public static void printLetterOccurrences(String str) {
    int[] alphabet = new int[26];
    for (int i = 0; i < str.length(); i++) {
        if (str.charAt(i) >= 'a' && str.charAt(i) <= 'z')
            alphabet[str.charAt(i) - 'a']++;
    }
    for (int i = 0; i < 26; i++) {
        if (alphabet[i] > 0) {
            System.out.println(""Number of Occurrences of "" + (char)(i + 'a') 
                    + "" is "" + alphabet[i]); 
        }
    }
}

// Output
// Number of Occurrences of a is 2 
// Number of Occurrences of d is 2 
// Number of Occurrences of e is 1 
// Number of Occurrences of f is 1"
831,Create a Java class to represent a TV show.,"public class TVShow {
  private String title; 
  private String network;
  private String genre;
  private int episodes;
  
  public TVShow(String t, String n, String g, int e) {
    title = t;
    network = n;
    genre = g;
    episodes = e;
  }
  
  public String getTitle() {
    return title;
  }
  
  public String getNetwork() {
    return network;
  }
  
  public String getGenre() {
    return genre;
  }
  
  public int getEpisodes() {
    return episodes;
  }
}","### Instruction: 
 Create a Java class to represent a TV show. 
 ### Response:
 public class TVShow {
  private String title; 
  private String network;
  private String genre;
  private int episodes;
  
  public TVShow(String t, String n, String g, int e) {
    title = t;
    network = n;
    genre = g;
    episodes = e;
  }
  
  public String getTitle() {
    return title;
  }
  
  public String getNetwork() {
    return network;
  }
  
  public String getGenre() {
    return genre;
  }
  
  public int getEpisodes() {
    return episodes;
  }
}"
835,Develop a code in Java to calculate the BMI given the height and weight of a person.,"public double calculateBMI(double height, double weight){
   double bmi;
   height = height/100;
   bmi = weight / Math.pow(height, 2);
   return bmi;
}","### Instruction: 
 Develop a code in Java to calculate the BMI given the height and weight of a person. 
 ### Response:
 public double calculateBMI(double height, double weight){
   double bmi;
   height = height/100;
   bmi = weight / Math.pow(height, 2);
   return bmi;
}"
841,"Fill in the blanks at the end of the Java code to find the sum of an array.
Input: public int sumArray(int[] arr){
    int sum = 0;
    ______________
    ______________
    return sum;
}","public int sumArray(int[] arr){
    int sum = 0;
    for(int i=0; i<arr.length;i++){
        sum+=arr[i];
    }
    return sum;
}","### Instruction: 
 Fill in the blanks at the end of the Java code to find the sum of an array. 
 ### Input: public int sumArray(int[] arr){
    int sum = 0;
    ______________
    ______________
    return sum;
} 
 ### Response:
 public int sumArray(int[] arr){
    int sum = 0;
    for(int i=0; i<arr.length;i++){
        sum+=arr[i];
    }
    return sum;
}"
877,You should create a Java program to implement a binary search.,"public class BinarySearch 
{ 
    // Returns index of x if it is present in arr[l.. 
    // r], else return -1 
    public int binarySearch(int arr[], int l, int r, int x) 
    { 
        if (r >= l) { 
            int mid = l + (r - l) / 2; 
  
            // If the element is present at the 
            // middle itself 
            if (arr[mid] == x) 
                return mid; 
  
            // If element is smaller than mid, then 
            // it can only be present in left subarray 
            if (arr[mid] > x) 
                return binarySearch(arr, l, mid - 1, x); 
  
            // Else the element can only be present 
            // in right subarray 
            return binarySearch(arr, mid + 1, r, x); 
        } 
  
        // We reach here when element is not present 
        // in array 
        return -1; 
    } 
  
}","### Instruction: 
 You should create a Java program to implement a binary search. 
 ### Response:
 public class BinarySearch 
{ 
    // Returns index of x if it is present in arr[l.. 
    // r], else return -1 
    public int binarySearch(int arr[], int l, int r, int x) 
    { 
        if (r >= l) { 
            int mid = l + (r - l) / 2; 
  
            // If the element is present at the 
            // middle itself 
            if (arr[mid] == x) 
                return mid; 
  
            // If element is smaller than mid, then 
            // it can only be present in left subarray 
            if (arr[mid] > x) 
                return binarySearch(arr, l, mid - 1, x); 
  
            // Else the element can only be present 
            // in right subarray 
            return binarySearch(arr, mid + 1, r, x); 
        } 
  
        // We reach here when element is not present 
        // in array 
        return -1; 
    } 
  
}"
920,Construct an if-else statement in Java for printing the square root of a given number.,"if (x >= 0) {
  System.out.println(Math.sqrt(x));
} else {
System.out.println(""The number is negative"");
}","### Instruction: 
 Construct an if-else statement in Java for printing the square root of a given number. 
 ### Response:
 if (x >= 0) {
  System.out.println(Math.sqrt(x));
} else {
System.out.println(""The number is negative"");
}"
988,Write a Java code to calculate the maximum value in an array.,"public static int getMax(int[] array) {
  int max = array[0];
  for (int i=1; i < array.length; i++) {
    if (array[i] > max) {
        max = array[i];
    }
  }
  return max;
}","### Instruction: 
 Write a Java code to calculate the maximum value in an array. 
 ### Response:
 public static int getMax(int[] array) {
  int max = array[0];
  for (int i=1; i < array.length; i++) {
    if (array[i] > max) {
        max = array[i];
    }
  }
  return max;
}"
1040,"Write a code in Java to replace all the occurrences of a given value (5) in an array with a new value (10).
Input: arr = [2, 5, 1, 5, 8]","for (int i = 0; i < arr.length; i++) { 
    if (arr[i] == 5) 
        arr[i] = 10; 
}","### Instruction: 
 Write a code in Java to replace all the occurrences of a given value (5) in an array with a new value (10). 
 ### Input: arr = [2, 5, 1, 5, 8] 
 ### Response:
 for (int i = 0; i < arr.length; i++) { 
    if (arr[i] == 5) 
        arr[i] = 10; 
}"
1080,"Compile this Java program to determine any compile-time errors.
Input: public class HelloWorld {
  public static void main(String[] args) {
    System.out.println(""Hello , World"");
  }
}",No compile-time error.,"### Instruction: 
 Compile this Java program to determine any compile-time errors. 
 ### Input: public class HelloWorld {
  public static void main(String[] args) {
    System.out.println(""Hello , World"");
  }
} 
 ### Response:
 No compile-time error."
1091,Generate Java code to display a message on a GUI.,"import javax.swing.JOptionPane;
 
public class DisplayMessage {
 
    public static void main(String[] args) {
        JOptionPane.showMessageDialog(null, ""Hello world!"", ""Message"", JOptionPane.INFORMATION_MESSAGE);
    }
 
}","### Instruction: 
 Generate Java code to display a message on a GUI. 
 ### Response:
 import javax.swing.JOptionPane;
 
public class DisplayMessage {
 
    public static void main(String[] args) {
        JOptionPane.showMessageDialog(null, ""Hello world!"", ""Message"", JOptionPane.INFORMATION_MESSAGE);
    }
 
}"
1129,"Write a function in Java to calculate the sum of the even numbers in a given range of integers.
Input: Start: 10 
End: 20","// Java Program to calculate the sum of all even 
// numbers in a given range 

public static int sumOfEvenInRange(int n1, int n2) { 
    int sum = 0; 
      
    // calculating the sum of all even numbers in given range 
    for (int i = n1; i <= n2; i++) { 
        // if num is even then add it 
        if (i % 2 == 0) { 
            sum += i; 
        } 
    } 
    return sum; 
}","### Instruction: 
 Write a function in Java to calculate the sum of the even numbers in a given range of integers. 
 ### Input: Start: 10 
End: 20 
 ### Response:
 // Java Program to calculate the sum of all even 
// numbers in a given range 

public static int sumOfEvenInRange(int n1, int n2) { 
    int sum = 0; 
      
    // calculating the sum of all even numbers in given range 
    for (int i = n1; i <= n2; i++) { 
        // if num is even then add it 
        if (i % 2 == 0) { 
            sum += i; 
        } 
    } 
    return sum; 
}"
1152,Generate a for loop in Java to display all the numbers between 1 and 10.,"for (int i = 1; i <= 10; i++) {
	System.out.println(i);
}","### Instruction: 
 Generate a for loop in Java to display all the numbers between 1 and 10. 
 ### Response:
 for (int i = 1; i <= 10; i++) {
	System.out.println(i);
}"
1180,"In a Java program, write a method to find the longest common subsequence of two strings.","public static String longestCommonSubsequence(String s1,String s2) {
   int l1 = s1.length();
   int l2 = s2.length();

   int[][] aux = new int[l1+1][l2+1];
   for (int i = 0; i < l1; i++) {
      for (int j = 0; j < l2; j++) {
         if (s1.charAt(i) == s2.charAt(j))
            aux[i+1][j+1] = aux[i][j] + 1;
         else
            aux[i+1][j+1] = Math.max(aux[i+1][j], aux[i][j+1]);
      }
   }
   StringBuilder sb = new StringBuilder();
   for (int i = l1, j = l2; i != 0 && j != 0; ) {
      if (aux[i][j] == aux[i-1][j])
         i--;
      else if (aux[i][j] == aux[i][j-1])
         j--;
      else {
         sb.append(s1.charAt(i-1));
         i--;
         j--;
      }
   }
   return sb.reverse().toString();
}","### Instruction: 
 In a Java program, write a method to find the longest common subsequence of two strings. 
 ### Response:
 public static String longestCommonSubsequence(String s1,String s2) {
   int l1 = s1.length();
   int l2 = s2.length();

   int[][] aux = new int[l1+1][l2+1];
   for (int i = 0; i < l1; i++) {
      for (int j = 0; j < l2; j++) {
         if (s1.charAt(i) == s2.charAt(j))
            aux[i+1][j+1] = aux[i][j] + 1;
         else
            aux[i+1][j+1] = Math.max(aux[i+1][j], aux[i][j+1]);
      }
   }
   StringBuilder sb = new StringBuilder();
   for (int i = l1, j = l2; i != 0 && j != 0; ) {
      if (aux[i][j] == aux[i-1][j])
         i--;
      else if (aux[i][j] == aux[i][j-1])
         j--;
      else {
         sb.append(s1.charAt(i-1));
         i--;
         j--;
      }
   }
   return sb.reverse().toString();
}"
1200,"Construct a function in Java to validate whether an input integer is a prime number.
Input: int n = 7","public static boolean isPrime(int n) 
{ 
    // Corner case 
    if (n <= 1) 
        return false; 
  
    // Check from 2 to n-1 
    for (int i = 2; i < n; i++) 
        if (n % i == 0) 
            return false; 
  
    return true; 
}","### Instruction: 
 Construct a function in Java to validate whether an input integer is a prime number. 
 ### Input: int n = 7 
 ### Response:
 public static boolean isPrime(int n) 
{ 
    // Corner case 
    if (n <= 1) 
        return false; 
  
    // Check from 2 to n-1 
    for (int i = 2; i < n; i++) 
        if (n % i == 0) 
            return false; 
  
    return true; 
}"
1214,"Identify the correct output of this Java program given the input.
Input: Input: Hello",Hello,"### Instruction: 
 Identify the correct output of this Java program given the input. 
 ### Input: Input: Hello 
 ### Response:
 Hello"
1218,"What is the output of this Java program?
Input: public class Main {
    public static void main(String [] args) {
        String name = ""John"";
        int age = 34;
        System.out.println(""My name is "" + name + "" and I am "" + age + "" years old."");
    }
}",My name is John and I am 34 years old.,"### Instruction: 
 What is the output of this Java program? 
 ### Input: public class Main {
    public static void main(String [] args) {
        String name = ""John"";
        int age = 34;
        System.out.println(""My name is "" + name + "" and I am "" + age + "" years old."");
    }
} 
 ### Response:
 My name is John and I am 34 years old."
1240,"Write a Java program to read and print out the characters of a given string one by one.
Input: Hello World","class Test 
{ 
  public static void main(String[] args) 
  { 
    String str = ""Hello World""; 
    for (int i = 0; i < str.length(); i++) { 
        System.out.print(str.charAt(i)); 
    } 
  } 
}","### Instruction: 
 Write a Java program to read and print out the characters of a given string one by one. 
 ### Input: Hello World 
 ### Response:
 class Test 
{ 
  public static void main(String[] args) 
  { 
    String str = ""Hello World""; 
    for (int i = 0; i < str.length(); i++) { 
        System.out.print(str.charAt(i)); 
    } 
  } 
}"
1286,Write a Java program to generate a random number between 25 and 75.,"public class RandomNumber {
    public static void main(String[] args) {
        // Generate a random number between 25 and 75
        int max = 75;
        int min = 25;
        int range = max - min + 1;

        int randomNumber = (int) (Math.random() * range) + min;

        System.out.println(randomNumber);
     }
 }","### Instruction: 
 Write a Java program to generate a random number between 25 and 75. 
 ### Response:
 public class RandomNumber {
    public static void main(String[] args) {
        // Generate a random number between 25 and 75
        int max = 75;
        int min = 25;
        int range = max - min + 1;

        int randomNumber = (int) (Math.random() * range) + min;

        System.out.println(randomNumber);
     }
 }"
1300,Create a program in Java that validates an input string for containing only numbers.,"public class NumberValidation {

    public boolean isNumeric(String str) {
        try {
            Double.parseDouble(str);
            return true;
        } catch(NumberFormatException e){
            return false;
        }
    }
}","### Instruction: 
 Create a program in Java that validates an input string for containing only numbers. 
 ### Response:
 public class NumberValidation {

    public boolean isNumeric(String str) {
        try {
            Double.parseDouble(str);
            return true;
        } catch(NumberFormatException e){
            return false;
        }
    }
}"
1356,Create a class in Java to represent a circle with two fields for its radius and color.,"public class Circle { 
    private double radius; 
    private String color; 
  
    public Circle(double r, String c) 
    { 
        this.radius = r; 
        this.color = c; 
    } 
  
    public double getRadius() 
    { 
        return this.radius; 
    } 
  
    public String getColor() 
    { 
        return this.color; 
    } 
  
    public double getArea() 
    { 
        return Math.PI * this.radius * this.radius; 
    } 
}","### Instruction: 
 Create a class in Java to represent a circle with two fields for its radius and color. 
 ### Response:
 public class Circle { 
    private double radius; 
    private String color; 
  
    public Circle(double r, String c) 
    { 
        this.radius = r; 
        this.color = c; 
    } 
  
    public double getRadius() 
    { 
        return this.radius; 
    } 
  
    public String getColor() 
    { 
        return this.color; 
    } 
  
    public double getArea() 
    { 
        return Math.PI * this.radius * this.radius; 
    } 
}"
1386,"Write a Java program to check if a given number is prime.
Input: int n = 17;","public class PrimeNumber {
    public static void main(String[] args) {
        int n = 17; 
        boolean flag = false;
        for(int i = 2; i <= n/2; ++i) {
            if(n % i == 0) {
                flag = true;
                break;
            }
        }
        if (!flag)
            System.out.println(n + "" is a prime number."");
        else
            System.out.println(n + "" is not a prime number."");
    }
}","### Instruction: 
 Write a Java program to check if a given number is prime. 
 ### Input: int n = 17; 
 ### Response:
 public class PrimeNumber {
    public static void main(String[] args) {
        int n = 17; 
        boolean flag = false;
        for(int i = 2; i <= n/2; ++i) {
            if(n % i == 0) {
                flag = true;
                break;
            }
        }
        if (!flag)
            System.out.println(n + "" is a prime number."");
        else
            System.out.println(n + "" is not a prime number."");
    }
}"
1393,Design a Java function to convert a string to uppercase.,"public String toUpperCase(String str){ 
    char[] charArr = str.toCharArray(); 

    for(int i=0; i<str.length(); i++){ 
        if(charArr[i] >= 'a' && charArr[i] <= 'z'){ 
            charArr[i] = (char)(charArr[i] - 32); 
        } 
    } 

    return new String(charArr); 
}","### Instruction: 
 Design a Java function to convert a string to uppercase. 
 ### Response:
 public String toUpperCase(String str){ 
    char[] charArr = str.toCharArray(); 

    for(int i=0; i<str.length(); i++){ 
        if(charArr[i] >= 'a' && charArr[i] <= 'z'){ 
            charArr[i] = (char)(charArr[i] - 32); 
        } 
    } 

    return new String(charArr); 
}"
1420,Write a function in Java that takes an integer and returns its square.,"public static int calculateSquare(int num) {
    return num * num;
}","### Instruction: 
 Write a function in Java that takes an integer and returns its square. 
 ### Response:
 public static int calculateSquare(int num) {
    return num * num;
}"
1421,Write a Java method to check if a numerical value is within a specified range.,"public static boolean isWithinRange(int val, int min, int max) {
    return (val >= min && val <= max);
}","### Instruction: 
 Write a Java method to check if a numerical value is within a specified range. 
 ### Response:
 public static boolean isWithinRange(int val, int min, int max) {
    return (val >= min && val <= max);
}"
1437,"Write a function in Java to find the element that appears most frequently in the array.
Input: [9, 5, 1, 0, 4, 5, 9, 2, 8]","public static int mostFrequentElement(int[] arr) { 
  int count = 0; 
  int maxCount = 0; 
  int mostFrequent = arr[0]; 
  
  for (int i = 0; i < arr.length; i++) { 
    count = 0; 
    for (int j = 0; j < arr.length; j++) { 
      if(arr[i] == arr[j]) { 
        count++; 
      } 
      if (count > maxCount) { 
        maxCount = count; 
        mostFrequent = arr[i]; 
      } 
    } 
  } 
  return mostFrequent; 
}","### Instruction: 
 Write a function in Java to find the element that appears most frequently in the array. 
 ### Input: [9, 5, 1, 0, 4, 5, 9, 2, 8] 
 ### Response:
 public static int mostFrequentElement(int[] arr) { 
  int count = 0; 
  int maxCount = 0; 
  int mostFrequent = arr[0]; 
  
  for (int i = 0; i < arr.length; i++) { 
    count = 0; 
    for (int j = 0; j < arr.length; j++) { 
      if(arr[i] == arr[j]) { 
        count++; 
      } 
      if (count > maxCount) { 
        maxCount = count; 
        mostFrequent = arr[i]; 
      } 
    } 
  } 
  return mostFrequent; 
}"
1456,"Create a for loop in Java using the given array.
Input: int[] nums = {2, 4, 8, 16, 32};","for (int i = 0; i < nums.length; i++) {
    int num = nums[i];
    System.out.println(num);
}","### Instruction: 
 Create a for loop in Java using the given array. 
 ### Input: int[] nums = {2, 4, 8, 16, 32}; 
 ### Response:
 for (int i = 0; i < nums.length; i++) {
    int num = nums[i];
    System.out.println(num);
}"
1529,Write a Java function to classify a given set of numbers into even and odd.,"public static void classifyNumber(int[] numbers) {
  for (int num : numbers) {
      if (num % 2 == 0) {
          System.out.println(num + "" is even"");
      } else {
          System.out.println(num + "" is odd"");
      }
  }
}","### Instruction: 
 Write a Java function to classify a given set of numbers into even and odd. 
 ### Response:
 public static void classifyNumber(int[] numbers) {
  for (int num : numbers) {
      if (num % 2 == 0) {
          System.out.println(num + "" is even"");
      } else {
          System.out.println(num + "" is odd"");
      }
  }
}"
1591,Create a function in Java that returns the number of days between two given dates.,"public int getDaysDifference(LocalDate startDate, LocalDate endDate) {
    return (int) ChronoUnit.DAYS.between(startDate, endDate);
}","### Instruction: 
 Create a function in Java that returns the number of days between two given dates. 
 ### Response:
 public int getDaysDifference(LocalDate startDate, LocalDate endDate) {
    return (int) ChronoUnit.DAYS.between(startDate, endDate);
}"
1620,"Write a Java program that displays the area of a triangle, given the three sides.
Input: 3, 4, 5","public class TriangleArea {
 
 public static void main(String[] args) {
 
  int a = 3;
  int b = 4;
  int c = 5;
 
  // calculate the semi-perimeter
  double s = (a + b + c) / 2;
 
  // calculate the area
  double area = Math.sqrt(s * (s - a) * (s - b) * (s - c));
 
  // display the result
  System.out.println(""The area of the triangle: "" + area);
 }
 
}","### Instruction: 
 Write a Java program that displays the area of a triangle, given the three sides. 
 ### Input: 3, 4, 5 
 ### Response:
 public class TriangleArea {
 
 public static void main(String[] args) {
 
  int a = 3;
  int b = 4;
  int c = 5;
 
  // calculate the semi-perimeter
  double s = (a + b + c) / 2;
 
  // calculate the area
  double area = Math.sqrt(s * (s - a) * (s - b) * (s - c));
 
  // display the result
  System.out.println(""The area of the triangle: "" + area);
 }
 
}"
1622,"Rewrite the following JavaScript code in the Java language.
Input: const numList = [1, 2, 3, 4];

numList.map((num) => {
  return num * 2;
});","int[] numList = {1, 2, 3, 4};

for (int i = 0; i < numList.length; i++) {
  numList[i] = numList[i] * 2;
}","### Instruction: 
 Rewrite the following JavaScript code in the Java language. 
 ### Input: const numList = [1, 2, 3, 4];

numList.map((num) => {
  return num * 2;
}); 
 ### Response:
 int[] numList = {1, 2, 3, 4};

for (int i = 0; i < numList.length; i++) {
  numList[i] = numList[i] * 2;
}"
1627,Create a Java program that reads an array of integers from the console and prints out the largest number.,"import java.util.Scanner;

public class LargestNum {
    public static void main(String[] args){
        Scanner scanner = new Scanner(System.in);

        System.out.print(""Input the size of array: "");
        int n = scanner.nextInt();

        int[] arr = new int[n];
        System.out.println(""Input ""+n+"" elements in the array:"");
        for(int i = 0; i < n; i++){
            arr[i] = scanner.nextInt();
        }

        int max = arr[0];

        for (int anArr : arr) {
            if (anArr > max)
                max = anArr;
        }

        System.out.println(""Largest number in the array is "" + max);
    }
}","### Instruction: 
 Create a Java program that reads an array of integers from the console and prints out the largest number. 
 ### Response:
 import java.util.Scanner;

public class LargestNum {
    public static void main(String[] args){
        Scanner scanner = new Scanner(System.in);

        System.out.print(""Input the size of array: "");
        int n = scanner.nextInt();

        int[] arr = new int[n];
        System.out.println(""Input ""+n+"" elements in the array:"");
        for(int i = 0; i < n; i++){
            arr[i] = scanner.nextInt();
        }

        int max = arr[0];

        for (int anArr : arr) {
            if (anArr > max)
                max = anArr;
        }

        System.out.println(""Largest number in the array is "" + max);
    }
}"
1656,"Create an algorithm in Java to sort an array in descending order.
Input: array = [10, 15, 7, 2, 13, 18]","public static void sortDesc(int[] array) {
    for(int i = 0; i < array.length; i++) {
        for(int j = 1; j < array.length; j++) {
            if(array[j-1] < array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }
        }
    }
}","### Instruction: 
 Create an algorithm in Java to sort an array in descending order. 
 ### Input: array = [10, 15, 7, 2, 13, 18] 
 ### Response:
 public static void sortDesc(int[] array) {
    for(int i = 0; i < array.length; i++) {
        for(int j = 1; j < array.length; j++) {
            if(array[j-1] < array[j]) {
                int temp = array[j-1];
                array[j-1] = array[j];
                array[j] = temp;
            }
        }
    }
}"
1679,Create a class in Java for a circle.,"class Circle{
    double radius; 
 
    public Circle(double r){
        this.radius = r; 
    } 
       
    public double getArea(){ 
        return Math.PI*radius*radius; 
    } 
}","### Instruction: 
 Create a class in Java for a circle. 
 ### Response:
 class Circle{
    double radius; 
 
    public Circle(double r){
        this.radius = r; 
    } 
       
    public double getArea(){ 
        return Math.PI*radius*radius; 
    } 
}"
1705,Develop a Java method to calculate the square root of a given number n.,"public static double sqrt(double n) { 
  if (n <= 0); 
  return 0; 
  double g = n; 
  while (Math.abs(g*g - n) > 0.01) {
    g = (g + n / g) / 2.0; 
  }
  return g;
}","### Instruction: 
 Develop a Java method to calculate the square root of a given number n. 
 ### Response:
 public static double sqrt(double n) { 
  if (n <= 0); 
  return 0; 
  double g = n; 
  while (Math.abs(g*g - n) > 0.01) {
    g = (g + n / g) / 2.0; 
  }
  return g;
}"
1766,"Edit the givenjava program to print the count of a specified character.
Input: public class Main
{
public static void main(String[] args)
{
    String str = ""codersarts"";
    System.out.println(""Number of s in the given string: "" + str);
}
}","public class Main
{
public static void main(String[] args)
{
    String str = ""codersarts"";
    int count = 0;
    for (int i=0; i<str.length(); i++) 
    {
        if (str.charAt(i) == 's') 
        {
            count++;
        }
    }
    System.out.println(""Number of s in the given string: "" + count);
}
}","### Instruction: 
 Edit the givenjava program to print the count of a specified character. 
 ### Input: public class Main
{
public static void main(String[] args)
{
    String str = ""codersarts"";
    System.out.println(""Number of s in the given string: "" + str);
}
} 
 ### Response:
 public class Main
{
public static void main(String[] args)
{
    String str = ""codersarts"";
    int count = 0;
    for (int i=0; i<str.length(); i++) 
    {
        if (str.charAt(i) == 's') 
        {
            count++;
        }
    }
    System.out.println(""Number of s in the given string: "" + count);
}
}"
1856,"Create a Java program to convert an array of integers into an integer.
Input: [1,2,3,4]","public static int convertToInt(int[] arr) {
    int result = 0;
    for (int i=0; i<arr.length; i++) {
        result += arr[i]*Math.pow(10, arr.length-1-i);
    }
    return result;
}","### Instruction: 
 Create a Java program to convert an array of integers into an integer. 
 ### Input: [1,2,3,4] 
 ### Response:
 public static int convertToInt(int[] arr) {
    int result = 0;
    for (int i=0; i<arr.length; i++) {
        result += arr[i]*Math.pow(10, arr.length-1-i);
    }
    return result;
}"
1934,"Write a Java program to find the 10 numbers closest to the given number.
Input: 50","import java.util.Arrays; 

class CloseNumber { 
    
    // function to find 10 numbers closest to x 
    static void closeNums(int x, int arr[], int n) 
    { 
        // array which stores 10 numbers 
        // closest to x 
        int result[] = new int[10]; 
        int index = 0; 
  
        // initialize difference between 
        // x and arr[i] 
        int dif = Integer.MAX_VALUE; 
  
        // traverse in the array and 
        // find the 10 closest numbers 
        for (int i = 0; i < n; i++) { 
            if (x == arr[i]) 
                continue; 
            if (Math.abs(x - arr[i]) < dif) { 
                result[index++] = arr[i]; 
                if (index == 10) { 
                    Arrays.sort(result); 
                    index--; 
                } 
  
                // update dif 
                if (index > 0) 
                    dif = Math.abs(x - result[index - 1]); 
            } 
        } 
  
        // print the 10 closest numbers 
        for (int i = 0; i < 10; i++) 
            System.out.print(result[i] + "" ""); 
    } 
  
    // Driver Code 
    public static void main(String[] args) 
    { 
        int arr[] = { 43, 3, 11, 15, 78, 
                    88, 24, 50, 36, 44 }; 
        int x = 50; 
  
        int n = arr.length; 
        closeNums(x, arr, n); 
    } 
}","### Instruction: 
 Write a Java program to find the 10 numbers closest to the given number. 
 ### Input: 50 
 ### Response:
 import java.util.Arrays; 

class CloseNumber { 
    
    // function to find 10 numbers closest to x 
    static void closeNums(int x, int arr[], int n) 
    { 
        // array which stores 10 numbers 
        // closest to x 
        int result[] = new int[10]; 
        int index = 0; 
  
        // initialize difference between 
        // x and arr[i] 
        int dif = Integer.MAX_VALUE; 
  
        // traverse in the array and 
        // find the 10 closest numbers 
        for (int i = 0; i < n; i++) { 
            if (x == arr[i]) 
                continue; 
            if (Math.abs(x - arr[i]) < dif) { 
                result[index++] = arr[i]; 
                if (index == 10) { 
                    Arrays.sort(result); 
                    index--; 
                } 
  
                // update dif 
                if (index > 0) 
                    dif = Math.abs(x - result[index - 1]); 
            } 
        } 
  
        // print the 10 closest numbers 
        for (int i = 0; i < 10; i++) 
            System.out.print(result[i] + "" ""); 
    } 
  
    // Driver Code 
    public static void main(String[] args) 
    { 
        int arr[] = { 43, 3, 11, 15, 78, 
                    88, 24, 50, 36, 44 }; 
        int x = 50; 
  
        int n = arr.length; 
        closeNums(x, arr, n); 
    } 
}"
1945,"Write a Java program to find the common elements between two arrays.
Input: int[] arr1 = {1, 2, 3, 4, 5}
int[] arr2 = {2, 5, 6, 7}","import java.util.Arrays;

public class CommonElements {
    
    public static void main(String[] args) {
        int[] arr1 = {1, 2, 3, 4, 5};
        int[] arr2 = {2, 5, 6, 7};
        
        for(int i=0; i < arr1.length; i++){
            for(int j = 0; j < arr2.length; j++) 
                if(arr1[i] == arr2[j]) 
                    System.out.println(arr1[i]);
        }
    }
}","### Instruction: 
 Write a Java program to find the common elements between two arrays. 
 ### Input: int[] arr1 = {1, 2, 3, 4, 5}
int[] arr2 = {2, 5, 6, 7} 
 ### Response:
 import java.util.Arrays;

public class CommonElements {
    
    public static void main(String[] args) {
        int[] arr1 = {1, 2, 3, 4, 5};
        int[] arr2 = {2, 5, 6, 7};
        
        for(int i=0; i < arr1.length; i++){
            for(int j = 0; j < arr2.length; j++) 
                if(arr1[i] == arr2[j]) 
                    System.out.println(arr1[i]);
        }
    }
}"
1946,"Write a Java program to read an array of strings and sort them lexicographically (alphabetically).
Input: String[] arr = {""apple"", ""cat"", ""hello""};","import java.util.Arrays;

public class SortStrings {
    
    public static void main(String[] args) {
        String[] arr = {""apple"", ""cat"", ""hello""};
        Arrays.sort(arr);
        for(String s: arr){
            System.out.println(s);
        }
    }
}

// Output:
apple
cat
hello","### Instruction: 
 Write a Java program to read an array of strings and sort them lexicographically (alphabetically). 
 ### Input: String[] arr = {""apple"", ""cat"", ""hello""}; 
 ### Response:
 import java.util.Arrays;

public class SortStrings {
    
    public static void main(String[] args) {
        String[] arr = {""apple"", ""cat"", ""hello""};
        Arrays.sort(arr);
        for(String s: arr){
            System.out.println(s);
        }
    }
}

// Output:
apple
cat
hello"
1955,"Write a function in Java to check if a given string is a palindrome (a word, phrase, or sequence that reads the same backward as forward).","public static boolean isPalindrome(String str) {
  for(int i=0; i<str.length()/2;i++) {
    if(str.charAt(i) != str.charAt(str.length()-i-1)) 
      return false;
  }
  return true;
}","### Instruction: 
 Write a function in Java to check if a given string is a palindrome (a word, phrase, or sequence that reads the same backward as forward). 
 ### Response:
 public static boolean isPalindrome(String str) {
  for(int i=0; i<str.length()/2;i++) {
    if(str.charAt(i) != str.charAt(str.length()-i-1)) 
      return false;
  }
  return true;
}"
1959,"Create a Java program to find the maximum element of an array.
Input: arr = [2, 3, 1, 4, 5]","public class Maximum {
	public static int findMax(int[] arr) {
		int max = arr[0];
		for(int i = 1; i < arr.length; i++) {
			if(arr[i] > max)
				max = arr[i];
		}
		return max;
	}

	public static void main(String args[]) {
		int arr[] = {2, 3, 1, 4, 5};
		int max = findMax(arr);
		System.out.println(""Maximum Element: "" + max);
	}
}","### Instruction: 
 Create a Java program to find the maximum element of an array. 
 ### Input: arr = [2, 3, 1, 4, 5] 
 ### Response:
 public class Maximum {
	public static int findMax(int[] arr) {
		int max = arr[0];
		for(int i = 1; i < arr.length; i++) {
			if(arr[i] > max)
				max = arr[i];
		}
		return max;
	}

	public static void main(String args[]) {
		int arr[] = {2, 3, 1, 4, 5};
		int max = findMax(arr);
		System.out.println(""Maximum Element: "" + max);
	}
}"
1986,"Create a class in Java and set its variable members.
Input: Class Name: Student
Variables: 
- name: String
- dob: Date
- rollNo: int","public class Student {
    private String name;
    private Date dob;
    private int rollNo;

    public Student(String name, Date dob, int rollNo) {
        this.name = name;
        this.dob = dob;
        this.rollNo = rollNo;
    }
}","### Instruction: 
 Create a class in Java and set its variable members. 
 ### Input: Class Name: Student
Variables: 
- name: String
- dob: Date
- rollNo: int 
 ### Response:
 public class Student {
    private String name;
    private Date dob;
    private int rollNo;

    public Student(String name, Date dob, int rollNo) {
        this.name = name;
        this.dob = dob;
        this.rollNo = rollNo;
    }
}"
2001,"Convert this python code into Java code
Input: my_list = [1, 2, 3, 4, 5]

for i in my_list:
    if i % 2 == 0:
        print(i)","int[] my_list = {1,2,3,4,5};

for(int i : my_list){
   if(i % 2 == 0)
       System.out.println(i);
}","### Instruction: 
 Convert this python code into Java code 
 ### Input: my_list = [1, 2, 3, 4, 5]

for i in my_list:
    if i % 2 == 0:
        print(i) 
 ### Response:
 int[] my_list = {1,2,3,4,5};

for(int i : my_list){
   if(i % 2 == 0)
       System.out.println(i);
}"
2076,"Edit the following line of code in a Java program to calculate the sum of all elements in an array.
Input: int sum = 0;
for int i = 0; i < nums.length; i--","int sum = 0;
for(int i = 0; i < nums.length; i++) {
 sum += nums[i];
}","### Instruction: 
 Edit the following line of code in a Java program to calculate the sum of all elements in an array. 
 ### Input: int sum = 0;
for int i = 0; i < nums.length; i-- 
 ### Response:
 int sum = 0;
for(int i = 0; i < nums.length; i++) {
 sum += nums[i];
}"
2106,"Develop a Java program to rotate a two-dimensional array clockwise by 90 degrees.
Input: [[1, 2], 
 [3, 4]]","public class RotateMatrix 
{  
    public static void rotate(int[][] arr, int n) 
    {  
        for (int x = 0; x < n/2; x++) 
        {     
            for (int y = x; y < n-x-1; y++) 
            { 
                int temp = arr[x][y];  
                arr[x][y] = arr[y][n-1-x];  
                arr[y][n-1-x] = arr[n-1-x][n-1-y];  
                arr[n-1-x][n-1-y] = arr[n-1-y][x];  
                arr[n-1-y][x] = temp;  
            }  
        }  
    }  
}","### Instruction: 
 Develop a Java program to rotate a two-dimensional array clockwise by 90 degrees. 
 ### Input: [[1, 2], 
 [3, 4]] 
 ### Response:
 public class RotateMatrix 
{  
    public static void rotate(int[][] arr, int n) 
    {  
        for (int x = 0; x < n/2; x++) 
        {     
            for (int y = x; y < n-x-1; y++) 
            { 
                int temp = arr[x][y];  
                arr[x][y] = arr[y][n-1-x];  
                arr[y][n-1-x] = arr[n-1-x][n-1-y];  
                arr[n-1-x][n-1-y] = arr[n-1-y][x];  
                arr[n-1-y][x] = temp;  
            }  
        }  
    }  
}"
2107,Write a Java program to convert a binary string to a decimal number.,"public class BinaryToDecimal { 

	public static int binToDecimal(String binaryNumber)  
	{  
		int decimal = 0;  
		int power = 0;  
		for(int i = binaryNumber.length() - 1; i >= 0; i--)  
		{   
			if (binaryNumber.charAt(i) == '1') 
				decimal += Math.pow(2, power); 
			power++; 
		}  
		return decimal;  
	}  
	
}","### Instruction: 
 Write a Java program to convert a binary string to a decimal number. 
 ### Response:
 public class BinaryToDecimal { 

	public static int binToDecimal(String binaryNumber)  
	{  
		int decimal = 0;  
		int power = 0;  
		for(int i = binaryNumber.length() - 1; i >= 0; i--)  
		{   
			if (binaryNumber.charAt(i) == '1') 
				decimal += Math.pow(2, power); 
			power++; 
		}  
		return decimal;  
	}  
	
}"
2115,"Write a Java method that takes a string and returns a copy of the string with all lowercase letters replaced with uppercase letters.
Input: mixed case","public static String toUpperCase(String s) {
    return s.toUpperCase();
}","### Instruction: 
 Write a Java method that takes a string and returns a copy of the string with all lowercase letters replaced with uppercase letters. 
 ### Input: mixed case 
 ### Response:
 public static String toUpperCase(String s) {
    return s.toUpperCase();
}"
2117,"Write a Java program to add two large numbers of any length.
Input: 12345 and 54321","public static String addTwoLargeNumbers(String num1, String num2) { 
    String result= """";
  
    // make sure num1 is negative and num2 is positive 
    if (compareNumSize(num1, num2) < 0) 
        return addTwoLargeNumbers(num2, num1); 
  
    // variables to maintain the carry  
    int carry = 0; 
  
    // traverse from the end of both the strings 
    int num1_len = num1.length(), num2_len = num2.length(); 
    for (int i = num1_len - 1, j = num2_len - 1; i >= 0 || j >= 0;) { 
  
        int n1 = i >= 0 ? num1.charAt(i) - '0' : 0; 
        int n2 = j >= 0 ? num2.charAt(j) - '0' : 0; 
  
        int sum = (n1 + n2 + carry) % 10; 
        carry = (n1 + n2 + carry) / 10; 
  
        result = sum + result; 
  
        if (i >= 0) 
            i--; 
        if (j >= 0) 
            j--; 
    } 
  
    // to add carry if carry exists 
    if (carry > 0) 
        result = carry + result; 
  
    return result; 
}","### Instruction: 
 Write a Java program to add two large numbers of any length. 
 ### Input: 12345 and 54321 
 ### Response:
 public static String addTwoLargeNumbers(String num1, String num2) { 
    String result= """";
  
    // make sure num1 is negative and num2 is positive 
    if (compareNumSize(num1, num2) < 0) 
        return addTwoLargeNumbers(num2, num1); 
  
    // variables to maintain the carry  
    int carry = 0; 
  
    // traverse from the end of both the strings 
    int num1_len = num1.length(), num2_len = num2.length(); 
    for (int i = num1_len - 1, j = num2_len - 1; i >= 0 || j >= 0;) { 
  
        int n1 = i >= 0 ? num1.charAt(i) - '0' : 0; 
        int n2 = j >= 0 ? num2.charAt(j) - '0' : 0; 
  
        int sum = (n1 + n2 + carry) % 10; 
        carry = (n1 + n2 + carry) / 10; 
  
        result = sum + result; 
  
        if (i >= 0) 
            i--; 
        if (j >= 0) 
            j--; 
    } 
  
    // to add carry if carry exists 
    if (carry > 0) 
        result = carry + result; 
  
    return result; 
}"
2129,"Using the Java stream API, create a program that takes a list of integers and returns the number that appears most often in the list.
Input: [1, 3, 3, 3, 4, 5, 5, 5, 6]","import java.util.List;
import java.util.stream.Collectors;

public class Solution {

  public static int getMostFrequentNumber(List<Integer> list) {
    return list.stream()
        .collect(Collectors.groupingBy(Integer::intValue, Collectors.counting()))
        .entrySet().stream()
        .max(Map.Entry.comparingByValue())
        .get().getKey();
  }
}","### Instruction: 
 Using the Java stream API, create a program that takes a list of integers and returns the number that appears most often in the list. 
 ### Input: [1, 3, 3, 3, 4, 5, 5, 5, 6] 
 ### Response:
 import java.util.List;
import java.util.stream.Collectors;

public class Solution {

  public static int getMostFrequentNumber(List<Integer> list) {
    return list.stream()
        .collect(Collectors.groupingBy(Integer::intValue, Collectors.counting()))
        .entrySet().stream()
        .max(Map.Entry.comparingByValue())
        .get().getKey();
  }
}"
2131,"Create a class in Java that takes two arguments, a name of type String and an id of type int.","public class Person {
  private String name;
  private int id;

  public Person(String name, int id) {
    this.name = name;
    this.id = id;
  }

  public String getName() {
    return name;
  }

  public int getId() {
    return id;
  }
}","### Instruction: 
 Create a class in Java that takes two arguments, a name of type String and an id of type int. 
 ### Response:
 public class Person {
  private String name;
  private int id;

  public Person(String name, int id) {
    this.name = name;
    this.id = id;
  }

  public String getName() {
    return name;
  }

  public int getId() {
    return id;
  }
}"
2183,"Edit the following Java program to output the sum of the two numbers.
Input: int firstnum = 5;
int secondnum = 10;","int firstnum = 5;
int secondnum = 10;

int sum = firstnum + secondnum;
System.out.println(""The sum of the two numbers is: "" + sum);","### Instruction: 
 Edit the following Java program to output the sum of the two numbers. 
 ### Input: int firstnum = 5;
int secondnum = 10; 
 ### Response:
 int firstnum = 5;
int secondnum = 10;

int sum = firstnum + secondnum;
System.out.println(""The sum of the two numbers is: "" + sum);"
2199,"Write a Java program that takes the following input parameters and prints their sum to the console.
Input: int a = 2; int b = 4;","public class Sum {
 public static void main(String[] args) {
  int a = 2;
  int b = 4;
  
  int sum = a + b;
  System.out.println(""Sum = "" + sum);
 }
}","### Instruction: 
 Write a Java program that takes the following input parameters and prints their sum to the console. 
 ### Input: int a = 2; int b = 4; 
 ### Response:
 public class Sum {
 public static void main(String[] args) {
  int a = 2;
  int b = 4;
  
  int sum = a + b;
  System.out.println(""Sum = "" + sum);
 }
}"
2202,"Write a Java program to sort the following array of integers using Quick Sort.
Input: int arr[] = {4, 3, 6, 2, 5, 1};","public class QuickSort 
{ 
    // Method to implement quick sort 
    public static void quickSort(int[] arr, int low, int high) 
    { 
        if (low < high) 
        { 
            /* pi is partitioning index, arr[pi] is  
              now at right place */
            int pi = partition(arr, low, high); 
  
            // Recursively sort elements before 
            // partition and after partition 
            quickSort(arr, low, pi-1); 
            quickSort(arr, pi+1, high); 
        } 
    } 
  
    // Method to find partition index 
    public static int partition(int arr[], int low, int high) 
    { 
        int pivot = arr[high];  
        int i = (low-1); // index of smaller element 
        for (int j=low; j<high; j++) 
        { 
            // If current element is smaller than the pivot 
            if (arr[j] < pivot) 
            { 
                i++; 
  
                // swap arr[i] and arr[j] 
                int temp = arr[i]; 
                arr[i] = arr[j]; 
                arr[j] = temp; 
            } 
        } 
  
        // swap arr[i+1] and arr[high] (or pivot) 
        int temp = arr[i+1]; 
        arr[i+1] = arr[high]; 
        arr[high] = temp; 
  
        return i+1; 
    } 
  
    // Main method 
    public static void main(String args[]) 
    { 
        int[] arr = {4, 3, 6, 2, 5, 1}; 
        int n = arr.length; 
          
        quickSort(arr, 0, n-1); 
          
        /* Print the sorted array */
        System.out.println(""Sorted array: ""); 
        for(int i=0; i<n; ++i) 
            System.out.print(arr[i] + "" ""); 
    } 
}","### Instruction: 
 Write a Java program to sort the following array of integers using Quick Sort. 
 ### Input: int arr[] = {4, 3, 6, 2, 5, 1}; 
 ### Response:
 public class QuickSort 
{ 
    // Method to implement quick sort 
    public static void quickSort(int[] arr, int low, int high) 
    { 
        if (low < high) 
        { 
            /* pi is partitioning index, arr[pi] is  
              now at right place */
            int pi = partition(arr, low, high); 
  
            // Recursively sort elements before 
            // partition and after partition 
            quickSort(arr, low, pi-1); 
            quickSort(arr, pi+1, high); 
        } 
    } 
  
    // Method to find partition index 
    public static int partition(int arr[], int low, int high) 
    { 
        int pivot = arr[high];  
        int i = (low-1); // index of smaller element 
        for (int j=low; j<high; j++) 
        { 
            // If current element is smaller than the pivot 
            if (arr[j] < pivot) 
            { 
                i++; 
  
                // swap arr[i] and arr[j] 
                int temp = arr[i]; 
                arr[i] = arr[j]; 
                arr[j] = temp; 
            } 
        } 
  
        // swap arr[i+1] and arr[high] (or pivot) 
        int temp = arr[i+1]; 
        arr[i+1] = arr[high]; 
        arr[high] = temp; 
  
        return i+1; 
    } 
  
    // Main method 
    public static void main(String args[]) 
    { 
        int[] arr = {4, 3, 6, 2, 5, 1}; 
        int n = arr.length; 
          
        quickSort(arr, 0, n-1); 
          
        /* Print the sorted array */
        System.out.println(""Sorted array: ""); 
        for(int i=0; i<n; ++i) 
            System.out.print(arr[i] + "" ""); 
    } 
}"
2232,Describe the role of the constructors in  a Java class.,The role of the constructors in a Java class is to initialize the fields of an object. A constructor is a special method that is called when an object is instantiated. Constructors typically have the same name as the class and take in parameters. The parameters are used to initialize the fields of the object. Constructors are important because they allow us to create uniform objects with a well-defined state. Constructors can also be used to set up desired behaviors on objects and to make sure they are initialized properly.,"### Instruction: 
 Describe the role of the constructors in  a Java class. 
 ### Response:
 The role of the constructors in a Java class is to initialize the fields of an object. A constructor is a special method that is called when an object is instantiated. Constructors typically have the same name as the class and take in parameters. The parameters are used to initialize the fields of the object. Constructors are important because they allow us to create uniform objects with a well-defined state. Constructors can also be used to set up desired behaviors on objects and to make sure they are initialized properly."
2247,"Write a function in Java to compute the standard deviation of an array of real numbers.
Input: float[] data = {3.3, 5.6, 7.8, 5.4, 9.9};","public static double StandardDev(float[] data) 
{ 
    double mean = 0.0, sum_deviation = 0.0; 
    for(double num : data) 
        mean += num; 
    mean = mean / data.length; 
    for(double num: data) 
        sum_deviation += (num - mean)*(num - mean); 
    return Math.sqrt(sum_deviation / data.length); 
}","### Instruction: 
 Write a function in Java to compute the standard deviation of an array of real numbers. 
 ### Input: float[] data = {3.3, 5.6, 7.8, 5.4, 9.9}; 
 ### Response:
 public static double StandardDev(float[] data) 
{ 
    double mean = 0.0, sum_deviation = 0.0; 
    for(double num : data) 
        mean += num; 
    mean = mean / data.length; 
    for(double num: data) 
        sum_deviation += (num - mean)*(num - mean); 
    return Math.sqrt(sum_deviation / data.length); 
}"
2253,"Create a class in Java with two methods, get and set.","public class MyClass { 
    private int x; 
  
    // Getter and setter 
    public int getX() { 
        return x; 
    } 
  
    public void setX(int x) { 
        this.x = x; 
    } 
}","### Instruction: 
 Create a class in Java with two methods, get and set. 
 ### Response:
 public class MyClass { 
    private int x; 
  
    // Getter and setter 
    public int getX() { 
        return x; 
    } 
  
    public void setX(int x) { 
        this.x = x; 
    } 
}"
2264,"Overwrite the existing Java timestamp processing class to produce the desired outputs.
Input: public class TimestampProcessing {
    public static List<String> process(String[] timestamps) {
        List<String> result = new ArrayList<>();
        for (String timestamp : timestamps) {
            String dateFormat = ""dd/MM/yyyy hh:mm:ss"";
            Date date = new SimpleDateFormat(dateFormat).parse(timestamp);
            Calendar cal = Calendar.getInstance();
            cal.setTime(date);
            cal.add(Calendar.HOUR_OF_DAY, -2);
            result.add(cal.getTime().toString());
        }
        return result;
    }
}","public class TimestampProcessing {
    public static List<String> process(String[] timestamps) {
        List<String> result = new ArrayList<>();
        for (String timestamp : timestamps) {
            String dateFormat = ""dd/MM/yyyy hh:mm:ss"";
            Date date = new SimpleDateFormat(dateFormat).parse(timestamp);
            Calendar cal = Calendar.getInstance();
            cal.setTime(date);
            cal.add(Calendar.HOUR_OF_DAY, -2);
            String dateFormatUpdated = ""MM/dd/yyyy hh:mm:ss a"";
            SimpleDateFormat simpleDateFormat = new SimpleDateFormat(dateFormatUpdated);
            result.add(simpleDateFormat.format(cal.getTime()));
        }
        return result;
    }
}","### Instruction: 
 Overwrite the existing Java timestamp processing class to produce the desired outputs. 
 ### Input: public class TimestampProcessing {
    public static List<String> process(String[] timestamps) {
        List<String> result = new ArrayList<>();
        for (String timestamp : timestamps) {
            String dateFormat = ""dd/MM/yyyy hh:mm:ss"";
            Date date = new SimpleDateFormat(dateFormat).parse(timestamp);
            Calendar cal = Calendar.getInstance();
            cal.setTime(date);
            cal.add(Calendar.HOUR_OF_DAY, -2);
            result.add(cal.getTime().toString());
        }
        return result;
    }
} 
 ### Response:
 public class TimestampProcessing {
    public static List<String> process(String[] timestamps) {
        List<String> result = new ArrayList<>();
        for (String timestamp : timestamps) {
            String dateFormat = ""dd/MM/yyyy hh:mm:ss"";
            Date date = new SimpleDateFormat(dateFormat).parse(timestamp);
            Calendar cal = Calendar.getInstance();
            cal.setTime(date);
            cal.add(Calendar.HOUR_OF_DAY, -2);
            String dateFormatUpdated = ""MM/dd/yyyy hh:mm:ss a"";
            SimpleDateFormat simpleDateFormat = new SimpleDateFormat(dateFormatUpdated);
            result.add(simpleDateFormat.format(cal.getTime()));
        }
        return result;
    }
}"
2324,"Modify the Java program below so that it prints the sum of two given numbers.
Input: int num1 = 3;
int num2 = 5;","int num1 = 3;
int num2 = 5;
int sum = num1 + num2;

System.out.println(""Sum is: "" + sum);","### Instruction: 
 Modify the Java program below so that it prints the sum of two given numbers. 
 ### Input: int num1 = 3;
int num2 = 5; 
 ### Response:
 int num1 = 3;
int num2 = 5;
int sum = num1 + num2;

System.out.println(""Sum is: "" + sum);"
2349,Design a class in Java to build a Binary Search Tree.,"public class BST { 
  
    /* Class containing left and right child of current node and key value*/
    class Node { 
        int key; 
        Node left, right; 
  
        public Node(int item) { 
            key = item; 
            left = right = null; 
        } 
    } 
  
    // Root of BST 
    Node root; 
  
    // Constructor 
    BST() {  
        root = null;  
    } 
  
    // This method mainly calls insertRec() 
    void insert(int key) { 
       root = insertRec(root, key); 
    } 
  
    // A recursive function to insert a new key in BST 
    Node insertRec(Node root, int key) { 
  
        // If the tree is empty, return a new node 
        if (root == null) { 
            root = new Node(key); 
            return root; 
        } 
  
        // Otherwise, recur down the tree 
        if (key < root.key) 
            root.left = insertRec(root.left, key); 
        else if (key > root.key) 
            root.right = insertRec(root.right, key); 
  
        // return the (unchanged) node pointer 
        return root; 
    } 
  
}","### Instruction: 
 Design a class in Java to build a Binary Search Tree. 
 ### Response:
 public class BST { 
  
    /* Class containing left and right child of current node and key value*/
    class Node { 
        int key; 
        Node left, right; 
  
        public Node(int item) { 
            key = item; 
            left = right = null; 
        } 
    } 
  
    // Root of BST 
    Node root; 
  
    // Constructor 
    BST() {  
        root = null;  
    } 
  
    // This method mainly calls insertRec() 
    void insert(int key) { 
       root = insertRec(root, key); 
    } 
  
    // A recursive function to insert a new key in BST 
    Node insertRec(Node root, int key) { 
  
        // If the tree is empty, return a new node 
        if (root == null) { 
            root = new Node(key); 
            return root; 
        } 
  
        // Otherwise, recur down the tree 
        if (key < root.key) 
            root.left = insertRec(root.left, key); 
        else if (key > root.key) 
            root.right = insertRec(root.right, key); 
  
        // return the (unchanged) node pointer 
        return root; 
    } 
  
}"
2410,"Create a Java method to print a two-dimensional array.
Input: int array[3][3] = { {1, 2, 3}, 
                    {4, 5, 6}, 
                    {7, 8, 9}}","public class TwoDimensionalArray { 
    public static void main(String args[]) 
    { 
        int[][] arr = { {1, 2, 3}, 
                        {4, 5, 6}, 
                        {7, 8, 9} }; 
        int m = 3;
        int n = 3;
		
        printArray(arr, m, n); 
    } 
    
    public static void printArray(int[][] arr, int m, int n) 
    { 
        for (int i = 0; i < m; i++) { 
            for (int j = 0; j < n; j++) 
                System.out.print(arr[i][j] + "" ""); 
    
            System.out.println(); 
        } 
    } 
}","### Instruction: 
 Create a Java method to print a two-dimensional array. 
 ### Input: int array[3][3] = { {1, 2, 3}, 
                    {4, 5, 6}, 
                    {7, 8, 9}} 
 ### Response:
 public class TwoDimensionalArray { 
    public static void main(String args[]) 
    { 
        int[][] arr = { {1, 2, 3}, 
                        {4, 5, 6}, 
                        {7, 8, 9} }; 
        int m = 3;
        int n = 3;
		
        printArray(arr, m, n); 
    } 
    
    public static void printArray(int[][] arr, int m, int n) 
    { 
        for (int i = 0; i < m; i++) { 
            for (int j = 0; j < n; j++) 
                System.out.print(arr[i][j] + "" ""); 
    
            System.out.println(); 
        } 
    } 
}"
2430,Generate a Java code to display the multiplication table from 1 to 10.,"public static void main(String args[])
{
    for (int i=1; i<=10; i++)
    {
        for (int j=1; j<=10; j++)             
            System.out.print(i+""*""+j+""=""+(i*j)+""  "");
 
        System.out.println();
    }
}","### Instruction: 
 Generate a Java code to display the multiplication table from 1 to 10. 
 ### Response:
 public static void main(String args[])
{
    for (int i=1; i<=10; i++)
    {
        for (int j=1; j<=10; j++)             
            System.out.print(i+""*""+j+""=""+(i*j)+""  "");
 
        System.out.println();
    }
}"
2433,"Create a loop in Java for printing all elements of an array of strings.
Input: [""String1"", ""String2"", ""String3"", ""String4""]","String[] strArr = {""String1"", ""String2"", ""String3"", ""String4""};
 
for (String str : strArr) {
    System.out.println(str);
}","### Instruction: 
 Create a loop in Java for printing all elements of an array of strings. 
 ### Input: [""String1"", ""String2"", ""String3"", ""String4""] 
 ### Response:
 String[] strArr = {""String1"", ""String2"", ""String3"", ""String4""};
 
for (String str : strArr) {
    System.out.println(str);
}"
2437,"Write a code in Java for finding the factorial of a number.
Input: 5","public class Factorial {
 
  public static int calcFactorial(int number){
    int factorial;
 
    if(number == 0 || number == 1){
      factorial = 1;
    } else {
      factorial = number * calcFactorial(number-1);
    }
    return factorial;
  }
 
  public static void main(String[] args){
    System.out.println(calcFactorial(5));
  }
}","### Instruction: 
 Write a code in Java for finding the factorial of a number. 
 ### Input: 5 
 ### Response:
 public class Factorial {
 
  public static int calcFactorial(int number){
    int factorial;
 
    if(number == 0 || number == 1){
      factorial = 1;
    } else {
      factorial = number * calcFactorial(number-1);
    }
    return factorial;
  }
 
  public static void main(String[] args){
    System.out.println(calcFactorial(5));
  }
}"
2439,How would you check for syntax errors in a given Java code?,"Syntax errors in Java code can be checked by using the Java compiler. The compiler will identify the location and reason for any syntax errors, which can then be corrected. Additionally, IDEs often have built-in syntax checkers that can highlight errors before compilation.","### Instruction: 
 How would you check for syntax errors in a given Java code? 
 ### Response:
 Syntax errors in Java code can be checked by using the Java compiler. The compiler will identify the location and reason for any syntax errors, which can then be corrected. Additionally, IDEs often have built-in syntax checkers that can highlight errors before compilation."
2498,Create a Java object for a student with the fields 'Name' and 'Marks'.,"public class Student { 
 
  // fields 
  String name; 
  int marks; 
 
  // constructor 
  public Student(String name, int marks) { 
    this.name = name; 
    this.marks = marks; 
  } 
 
  // other methods 
}","### Instruction: 
 Create a Java object for a student with the fields 'Name' and 'Marks'. 
 ### Response:
 public class Student { 
 
  // fields 
  String name; 
  int marks; 
 
  // constructor 
  public Student(String name, int marks) { 
    this.name = name; 
    this.marks = marks; 
  } 
 
  // other methods 
}"
2512,Create a function in Java that takes two strings as input and output boolean true if they are the same and false if they are different.,"public boolean is_same(String str1, String str2) { 
 
    if (str1 == null || str2 == null) { 
        return false; 
    } 
    return str1.equals(str2); 
}","### Instruction: 
 Create a function in Java that takes two strings as input and output boolean true if they are the same and false if they are different. 
 ### Response:
 public boolean is_same(String str1, String str2) { 
 
    if (str1 == null || str2 == null) { 
        return false; 
    } 
    return str1.equals(str2); 
}"
2523,"Implement a function in Java to determine if a given number is perfect or not.
Input: number = 28","public class PerfectNumber {
 
    public static boolean isPerfectNumber(int number) {
        int sum = 0;
        // loop to add all the divisors
        for (int i = 1; i < number; i++) 
        { 
            if (number % i == 0) 
            {
                sum += i; 
            }
        } 
        // check to determine if the number is perfect
        if(sum == number) { 
            return true; 
        }
        else {
            return false; 
        }
    }
 
    // Driver code
    public static void main(String[] args) {
        int number = 28;
        if(isPerfectNumber(number)) {
            System.out.println(number + "" is a perfect number."");
        } else {
            System.out.println(number + "" is not a perfect number."");
        }
    }
}","### Instruction: 
 Implement a function in Java to determine if a given number is perfect or not. 
 ### Input: number = 28 
 ### Response:
 public class PerfectNumber {
 
    public static boolean isPerfectNumber(int number) {
        int sum = 0;
        // loop to add all the divisors
        for (int i = 1; i < number; i++) 
        { 
            if (number % i == 0) 
            {
                sum += i; 
            }
        } 
        // check to determine if the number is perfect
        if(sum == number) { 
            return true; 
        }
        else {
            return false; 
        }
    }
 
    // Driver code
    public static void main(String[] args) {
        int number = 28;
        if(isPerfectNumber(number)) {
            System.out.println(number + "" is a perfect number."");
        } else {
            System.out.println(number + "" is not a perfect number."");
        }
    }
}"
2569,Develop a Java program that prints a given string.,"public class Main {
    public static void main(String[] args) {
        String str = ""Hello, World!"";
        System.out.println(str);
    }
}","### Instruction: 
 Develop a Java program that prints a given string. 
 ### Response:
 public class Main {
    public static void main(String[] args) {
        String str = ""Hello, World!"";
        System.out.println(str);
    }
}"
2576,Develop a program in Java to calculate the product of two numbers.,"public static int product(int a, int b) 
{ 
    return (a*b); 
}","### Instruction: 
 Develop a program in Java to calculate the product of two numbers. 
 ### Response:
 public static int product(int a, int b) 
{ 
    return (a*b); 
}"
2588,"Translate the following code from Java to Python.
Input: public static void main (String[] args) {
    int x = 5;
    while (x > 0) {
        System.out.println(x);
        x--;
    }
}","x = 5
while x > 0:
    print(x)
    x -= 1","### Instruction: 
 Translate the following code from Java to Python. 
 ### Input: public static void main (String[] args) {
    int x = 5;
    while (x > 0) {
        System.out.println(x);
        x--;
    }
} 
 ### Response:
 x = 5
while x > 0:
    print(x)
    x -= 1"
2611,Create a function in Java that toggles a boolean value.,"public boolean toggleBoolean (boolean value) {
 return !value;
}","### Instruction: 
 Create a function in Java that toggles a boolean value. 
 ### Response:
 public boolean toggleBoolean (boolean value) {
 return !value;
}"
2696,"Create a Java program to generate and print Fibonacci series of a given size.
Input: Size: 8","public class FibonacciSeries 
{ 
    public static void main(String[] args) 
    { 
        int n = 8; 
        int f1 = 0, f2 = 1; 
  
        System.out.print(""The Fibonacci series of size ""+n+"" is : ""); 
        for (int i = 1; i <= n; i++) 
        { 
            System.out.print(f1 + "" ""); 
            int next = f1 + f2; 
            f1 = f2; 
            f2 = next; 
        } 
    } 
}","### Instruction: 
 Create a Java program to generate and print Fibonacci series of a given size. 
 ### Input: Size: 8 
 ### Response:
 public class FibonacciSeries 
{ 
    public static void main(String[] args) 
    { 
        int n = 8; 
        int f1 = 0, f2 = 1; 
  
        System.out.print(""The Fibonacci series of size ""+n+"" is : ""); 
        for (int i = 1; i <= n; i++) 
        { 
            System.out.print(f1 + "" ""); 
            int next = f1 + f2; 
            f1 = f2; 
            f2 = next; 
        } 
    } 
}"
2707,"Create a class in Java to store student information such as name, age, and course.","public class Student {
    private String name;
    private int age;
    private String course;

    public Student(String name, int age, String course) {
        this.name = name;
        this.age = age;
        this.course = course;
    }

    public String getName() {
        return name;
    }

    public int getAge() {
        return age;
    }

    public String getCourse() {
        return course;
    }
}","### Instruction: 
 Create a class in Java to store student information such as name, age, and course. 
 ### Response:
 public class Student {
    private String name;
    private int age;
    private String course;

    public Student(String name, int age, String course) {
        this.name = name;
        this.age = age;
        this.course = course;
    }

    public String getName() {
        return name;
    }

    public int getAge() {
        return age;
    }

    public String getCourse() {
        return course;
    }
}"
2757,"Create a function in Java that inputs two strings and prints out the shorter one.
Input: String a = ""Hello"";
String b = ""World"";","public static void printShortString(String a, String b) {
    if (a.length() > b.length()) {
        System.out.println(b);
    } else {
        System.out.println(a);
    }
}","### Instruction: 
 Create a function in Java that inputs two strings and prints out the shorter one. 
 ### Input: String a = ""Hello"";
String b = ""World""; 
 ### Response:
 public static void printShortString(String a, String b) {
    if (a.length() > b.length()) {
        System.out.println(b);
    } else {
        System.out.println(a);
    }
}"
2840,"Edit the following Java code to print the elements of an array in the form of a matrix.
Input: public class Matrix 
{ 
    public static void main(String[] args) 
    { 
        int[][] myArray = {{1,2,3}, 
                            {4,5,6}, 
                            {7,8,9}}; 
    } 
}","public class Matrix 
{ 
    public static void main(String[] args) 
    { 
        int[][] myArray = {{1,2,3}, 
                            {4,5,6}, 
                            {7,8,9}}; 
        for (int i = 0; i < myArray.length; i++) 
        { 
            for (int j = 0; j < myArray[i].length; j++) 
            { 
                System.out.print(myArray[i][j] + "" ""); 
            } 
            System.out.println();
        } 
    } 
}","### Instruction: 
 Edit the following Java code to print the elements of an array in the form of a matrix. 
 ### Input: public class Matrix 
{ 
    public static void main(String[] args) 
    { 
        int[][] myArray = {{1,2,3}, 
                            {4,5,6}, 
                            {7,8,9}}; 
    } 
} 
 ### Response:
 public class Matrix 
{ 
    public static void main(String[] args) 
    { 
        int[][] myArray = {{1,2,3}, 
                            {4,5,6}, 
                            {7,8,9}}; 
        for (int i = 0; i < myArray.length; i++) 
        { 
            for (int j = 0; j < myArray[i].length; j++) 
            { 
                System.out.print(myArray[i][j] + "" ""); 
            } 
            System.out.println();
        } 
    } 
}"
2878,Use a loop in Java to print out the squares of numbers from 1 to 10.,"for (int i = 1; i <= 10; i++) {
    System.out.println(i * i);
}","### Instruction: 
 Use a loop in Java to print out the squares of numbers from 1 to 10. 
 ### Response:
 for (int i = 1; i <= 10; i++) {
    System.out.println(i * i);
}"
2881,Create a Java program to print a square diamond pattern with '*' characters.,"public class DiamondPattern {
  public static void main(String[] args) {
    int n = 5;
    for (int i = 1; i <= n; i++) {
      for (int j = 1; j <= n - i; j++) {
        System.out.print("" "");
      }
      for (int j = 1; j <= i; j++) {
        System.out.print(""* "");
      }
      System.out.println();
    }
    for (int i = 1; i < n; i++) {
      for (int j = 1; j <= i; j++) {
        System.out.print("" "");
      }
      for (int j = 1; j <= n - i; j++) {
        System.out.print(""* "");
      }
      System.out.println();
    }
  }
}","### Instruction: 
 Create a Java program to print a square diamond pattern with '*' characters. 
 ### Response:
 public class DiamondPattern {
  public static void main(String[] args) {
    int n = 5;
    for (int i = 1; i <= n; i++) {
      for (int j = 1; j <= n - i; j++) {
        System.out.print("" "");
      }
      for (int j = 1; j <= i; j++) {
        System.out.print(""* "");
      }
      System.out.println();
    }
    for (int i = 1; i < n; i++) {
      for (int j = 1; j <= i; j++) {
        System.out.print("" "");
      }
      for (int j = 1; j <= n - i; j++) {
        System.out.print(""* "");
      }
      System.out.println();
    }
  }
}"
2942,Write a function in Java to find the length of the longest common subsequence of two strings.,"public static int longestCommonSubsequence(String s1, String s2) {
    int[][] dp = new int[s1.length() + 1][s2.length() + 1];

    for (int i = 0; i <= s1.length(); i++) {
        for (int j = 0; j <= s2.length(); j++) {
            if (i == 0 || j == 0) {
                dp[i][j] = 0;
            } else if (s1.charAt(i - 1) == s2.charAt(j - 1)) {
                dp[i][j] = dp[i - 1][j - 1] + 1;
            } else {
                dp[i][j] = Math.max(dp[i][j - 1], dp[i - 1][j]);
            }
        }
    }
    return dp[s1.length()][s2.length()];
}","### Instruction: 
 Write a function in Java to find the length of the longest common subsequence of two strings. 
 ### Response:
 public static int longestCommonSubsequence(String s1, String s2) {
    int[][] dp = new int[s1.length() + 1][s2.length() + 1];

    for (int i = 0; i <= s1.length(); i++) {
        for (int j = 0; j <= s2.length(); j++) {
            if (i == 0 || j == 0) {
                dp[i][j] = 0;
            } else if (s1.charAt(i - 1) == s2.charAt(j - 1)) {
                dp[i][j] = dp[i - 1][j - 1] + 1;
            } else {
                dp[i][j] = Math.max(dp[i][j - 1], dp[i - 1][j]);
            }
        }
    }
    return dp[s1.length()][s2.length()];
}"
2955,"Generate a Java program that prints the longest word in a sentence
Input: Hello my name is John","public class longestWord{
  public static void main(String[] args) {
 
    String inputStr = ""Hello my name is John"";
    String[] words = inputStr.split("" "");
 
    String longestWord = """";
    int maxLength = 0;
 
    for (String w : words){
      if (w.length() > maxLength) {
        maxLength = w.length();
        longestWord = w;
      }
  }
      System.out.println(""Longest Word: ""+ longestWord);
  }
}","### Instruction: 
 Generate a Java program that prints the longest word in a sentence 
 ### Input: Hello my name is John 
 ### Response:
 public class longestWord{
  public static void main(String[] args) {
 
    String inputStr = ""Hello my name is John"";
    String[] words = inputStr.split("" "");
 
    String longestWord = """";
    int maxLength = 0;
 
    for (String w : words){
      if (w.length() > maxLength) {
        maxLength = w.length();
        longestWord = w;
      }
  }
      System.out.println(""Longest Word: ""+ longestWord);
  }
}"
2960,Develop a Java program to calculate the average of three numbers,"public class AverageCalculator { 
  public static void main(String[] args) 
  {  
    float num1 = 10.7f; 
    float num2 =","### Instruction: 
 Develop a Java program to calculate the average of three numbers 
 ### Response:
 public class AverageCalculator { 
  public static void main(String[] args) 
  {  
    float num1 = 10.7f; 
    float num2 ="
2961,Create a for loop in Java to find the sum of the first 20 numbers.,"int sum = 0;
for (int i=1; i <= 20; i++){
   sum = sum + i;
}
System.out.printf(""The sum of the first 20 numbers is %d"", sum);","### Instruction: 
 Create a for loop in Java to find the sum of the first 20 numbers. 
 ### Response:
 int sum = 0;
for (int i=1; i <= 20; i++){
   sum = sum + i;
}
System.out.printf(""The sum of the first 20 numbers is %d"", sum);"
2973,"Write a Java program to print the Fibonacci sequence up to the limit of n.
Input: n = 10","public class Fibonacci { 
    public static void main(String[] args) { 
        int n = 10; 
        int num1=0, num2=1;
        System.out.print(""Fibonacci Series of ""+n+"" numbers:"");
 
        for (int i = 1; i <= n; ++i) {
            System.out.print(num1+"" "");
            int sumOfPrevTwo = num1 + num2;
            num1 = num2;
            num2 = sumOfPrevTwo;
        }
    } 
}

// Output: Fibonacci Series of 10 numbers: 0 1 1 2 3 5 8 13 21 34","### Instruction: 
 Write a Java program to print the Fibonacci sequence up to the limit of n. 
 ### Input: n = 10 
 ### Response:
 public class Fibonacci { 
    public static void main(String[] args) { 
        int n = 10; 
        int num1=0, num2=1;
        System.out.print(""Fibonacci Series of ""+n+"" numbers:"");
 
        for (int i = 1; i <= n; ++i) {
            System.out.print(num1+"" "");
            int sumOfPrevTwo = num1 + num2;
            num1 = num2;
            num2 = sumOfPrevTwo;
        }
    } 
}

// Output: Fibonacci Series of 10 numbers: 0 1 1 2 3 5 8 13 21 34"
2998,"Write a Java method to insert a given string at the beginning of every word in a given sentence.
Input: String sentence = ""The quick brown fox jumps over the lazy dog"";","String addPrefix(String sentence, String prefix) { 
  String[] words = sentence.split("" ""); 
  StringBuilder sb = new StringBuilder(); 

  for (String word: words) { 
    sb.append(prefix + word + "" ""); 
  } 
  return sb.toString(); 
}

addPrefix(sentence, ""The""); // Output: ""TheThe quick Thebrown Thefox Thejumps Theover Thethe Thelazy Thedog""","### Instruction: 
 Write a Java method to insert a given string at the beginning of every word in a given sentence. 
 ### Input: String sentence = ""The quick brown fox jumps over the lazy dog""; 
 ### Response:
 String addPrefix(String sentence, String prefix) { 
  String[] words = sentence.split("" ""); 
  StringBuilder sb = new StringBuilder(); 

  for (String word: words) { 
    sb.append(prefix + word + "" ""); 
  } 
  return sb.toString(); 
}

addPrefix(sentence, ""The""); // Output: ""TheThe quick Thebrown Thefox Thejumps Theover Thethe Thelazy Thedog"""
3008,"Create a class called ""BankAccount"" in Java with instance variables for the account number, name, and balance.","public class BankAccount {
    private int accountNumber;
    private String name;
    private double balance;
    
    // Getter and setter methods
    public int getAccountNumber() {
        return accountNumber;
    }
 
    public void setAccountNumber(int accountNumber) {
        this.accountNumber = accountNumber;
    }
 
    public String getName() {
        return name;
    }
 
    public void setName(String name) {
        this.name = name;
    }
 
    public double getBalance() {
        return balance;
    }
 
    public void setBalance(double balance) {
        this.balance = balance;
    }
 }","### Instruction: 
 Create a class called ""BankAccount"" in Java with instance variables for the account number, name, and balance. 
 ### Response:
 public class BankAccount {
    private int accountNumber;
    private String name;
    private double balance;
    
    // Getter and setter methods
    public int getAccountNumber() {
        return accountNumber;
    }
 
    public void setAccountNumber(int accountNumber) {
        this.accountNumber = accountNumber;
    }
 
    public String getName() {
        return name;
    }
 
    public void setName(String name) {
        this.name = name;
    }
 
    public double getBalance() {
        return balance;
    }
 
    public void setBalance(double balance) {
        this.balance = balance;
    }
 }"
3070,"Construct a loop in Java to traverse over all elements of an array
Input: int[] numbers = {5, 7, 9, 22};","for(int i = 0; i < numbers.length; i++){
    int element = numbers[i];
    // execute code here
}","### Instruction: 
 Construct a loop in Java to traverse over all elements of an array 
 ### Input: int[] numbers = {5, 7, 9, 22}; 
 ### Response:
 for(int i = 0; i < numbers.length; i++){
    int element = numbers[i];
    // execute code here
}"
3105,Write a Java method that takes two numbers and returns the sum of them.,"public static int addNumbers(int a, int b) {
 return a + b;
}","### Instruction: 
 Write a Java method that takes two numbers and returns the sum of them. 
 ### Response:
 public static int addNumbers(int a, int b) {
 return a + b;
}"
3119,"You need to write a script in Java to reverse a given list of Strings.
Input: list = [""John"", ""Alice"", ""Bob""]","public class ReverseList {
    public static void reverseList(List<String> list) 
    {
        if (list.size() > 1) {
            String temp = list.get(0);
            list.remove(0);
            reverseList(list);
            list.add(temp);
        }
    }

    public static void main(String[] args) 
    { 
        List<String> list = new ArrayList<String>(Arrays.asList(""John"", ""Alice"", ""Bob""));
        reverseList(list);
        System.out.println(list); 
    } 
}","### Instruction: 
 You need to write a script in Java to reverse a given list of Strings. 
 ### Input: list = [""John"", ""Alice"", ""Bob""] 
 ### Response:
 public class ReverseList {
    public static void reverseList(List<String> list) 
    {
        if (list.size() > 1) {
            String temp = list.get(0);
            list.remove(0);
            reverseList(list);
            list.add(temp);
        }
    }

    public static void main(String[] args) 
    { 
        List<String> list = new ArrayList<String>(Arrays.asList(""John"", ""Alice"", ""Bob""));
        reverseList(list);
        System.out.println(list); 
    } 
}"
3188,"Write Java code for converting a string to an array.
Input: String: ""Hello""","String[] strArray = {""H"", ""e"", ""l"", ""l"", ""o""};","### Instruction: 
 Write Java code for converting a string to an array. 
 ### Input: String: ""Hello"" 
 ### Response:
 String[] strArray = {""H"", ""e"", ""l"", ""l"", ""o""};"
3199,Write a Java program to create a thread which prints the numbers from 10 to 0 after every 2 seconds.,"public class MyThread extends Thread {
    public void run() {
        for(int i = 10; i >= 0; i--) {
            System.out.println(i);
            try {
                Thread.sleep(2000); 
            } 
            catch (InterruptedException e) {
                //Do nothing
            }
        }
    }
}","### Instruction: 
 Write a Java program to create a thread which prints the numbers from 10 to 0 after every 2 seconds. 
 ### Response:
 public class MyThread extends Thread {
    public void run() {
        for(int i = 10; i >= 0; i--) {
            System.out.println(i);
            try {
                Thread.sleep(2000); 
            } 
            catch (InterruptedException e) {
                //Do nothing
            }
        }
    }
}"
3219,"Write a Java program to compare two strings lexicographically.
Input: Two strings: string1=""GeeksforGeeks"" and string2=""GeeksQuiz""","public class CompareStringLexicographically { 
    public static void main(String[] args) 
    { 
        String str1 = ""GeeksforGeeks""; 
        String str2 = ""GeeksQuiz""; 
  
        // Comparing both strings lexicographically 
        int result = str1.compareTo(str2); 
  
        // checking for the comparison output 
        if (result > 0) 
            System.out.println(""str1 is greater than str2""); 
        else if (result < 0) 
            System.out.println(""str1 is smaller than str2""); 
        else
            System.out.println(""str1 is equal to str2""); 
    } 
}","### Instruction: 
 Write a Java program to compare two strings lexicographically. 
 ### Input: Two strings: string1=""GeeksforGeeks"" and string2=""GeeksQuiz"" 
 ### Response:
 public class CompareStringLexicographically { 
    public static void main(String[] args) 
    { 
        String str1 = ""GeeksforGeeks""; 
        String str2 = ""GeeksQuiz""; 
  
        // Comparing both strings lexicographically 
        int result = str1.compareTo(str2); 
  
        // checking for the comparison output 
        if (result > 0) 
            System.out.println(""str1 is greater than str2""); 
        else if (result < 0) 
            System.out.println(""str1 is smaller than str2""); 
        else
            System.out.println(""str1 is equal to str2""); 
    } 
}"
3230,Write a Java function to find out if a string contains any vowels.,"public static boolean containsVowels(String input) {
        for (int i = 0; i < input.length(); i++) {
            char ch = input.charAt(i);
            if (ch == 'a' || ch == 'e' || ch == 'i'
                    || ch == 'o' || ch == 'u') {
                return true;
            }
        }
        return false;
    }","### Instruction: 
 Write a Java function to find out if a string contains any vowels. 
 ### Response:
 public static boolean containsVowels(String input) {
        for (int i = 0; i < input.length(); i++) {
            char ch = input.charAt(i);
            if (ch == 'a' || ch == 'e' || ch == 'i'
                    || ch == 'o' || ch == 'u') {
                return true;
            }
        }
        return false;
    }"
3259,Write a code in Java to find all the prime numbers between 0 and n.,"public static List<Integer> findPrimes(int n) {
    List<Integer> primes = new ArrayList<>();
    for (int i = 2; i <= n; i++) {
        boolean isPrime = true;
        for (int j = 2; j < i; j++) {
            if (i % j == 0) {
                isPrime = false;
                break;
            }
        }
        if (isPrime) {
            primes.add(i);
        }
    }
    return primes;
}","### Instruction: 
 Write a code in Java to find all the prime numbers between 0 and n. 
 ### Response:
 public static List<Integer> findPrimes(int n) {
    List<Integer> primes = new ArrayList<>();
    for (int i = 2; i <= n; i++) {
        boolean isPrime = true;
        for (int j = 2; j < i; j++) {
            if (i % j == 0) {
                isPrime = false;
                break;
            }
        }
        if (isPrime) {
            primes.add(i);
        }
    }
    return primes;
}"
3342,Create an array in Java that contains five elements each of type String.,"String[] arr = {""String 1"", ""String 2"", ""String 3"", ""String 4"", ""String 5""};","### Instruction: 
 Create an array in Java that contains five elements each of type String. 
 ### Response:
 String[] arr = {""String 1"", ""String 2"", ""String 3"", ""String 4"", ""String 5""};"
3346,Design a function in Java that rotates a N x N matrix 90 degrees.,"public static int[][] rotateMatrix(int[][] matrix, int n) { 
  int[][] rotated = new int[n][n];
  for (int row = 0; row < n; row++) {
      for (int col = 0; col < n; col++) {
          rotated[col][n-1-row] = matrix[row][col];
      }
  } 
  return rotated;
}","### Instruction: 
 Design a function in Java that rotates a N x N matrix 90 degrees. 
 ### Response:
 public static int[][] rotateMatrix(int[][] matrix, int n) { 
  int[][] rotated = new int[n][n];
  for (int row = 0; row < n; row++) {
      for (int col = 0; col < n; col++) {
          rotated[col][n-1-row] = matrix[row][col];
      }
  } 
  return rotated;
}"
3351,"Could you suggest a method written in Java for finding the average of a set of numbers?
Input: Numbers = [10, 20, 5, 15]","public static double getAverage(int[] Numbers){
	double sum = 0;
	for(int num : Numbers){
		sum += num;
	}
	double average = sum / Numbers.length;
	return average;
}","### Instruction: 
 Could you suggest a method written in Java for finding the average of a set of numbers? 
 ### Input: Numbers = [10, 20, 5, 15] 
 ### Response:
 public static double getAverage(int[] Numbers){
	double sum = 0;
	for(int num : Numbers){
		sum += num;
	}
	double average = sum / Numbers.length;
	return average;
}"
3401,How can you let a user input a character in a Java program?,"You can let a user input a character in a Java program using the Scanner class. For example, you can use the next().charAt(0) method to let a user input a character.","### Instruction: 
 How can you let a user input a character in a Java program? 
 ### Response:
 You can let a user input a character in a Java program using the Scanner class. For example, you can use the next().charAt(0) method to let a user input a character."
3436,"Create a Java program that takes two numbers and prints out the larger number.
Input: Number 1: 6
Number 2: 8","public class Program {
  public static void main(String[] args) {
    int num1 = 6;
    int num2 = 8;
    if (num1 > num2) {
        System.out.println(num1);
    } else {
        System.out.println(num2);
    }
  }
}","### Instruction: 
 Create a Java program that takes two numbers and prints out the larger number. 
 ### Input: Number 1: 6
Number 2: 8 
 ### Response:
 public class Program {
  public static void main(String[] args) {
    int num1 = 6;
    int num2 = 8;
    if (num1 > num2) {
        System.out.println(num1);
    } else {
        System.out.println(num2);
    }
  }
}"
3440,"Create a function in Java that takes an array and multiplies each element by the given number.
Input: int[] array = {1, 2, 3, 4, 5};
Number to multiply by: 10","public static void multiplyArray(int[] array, int num) {
  for(int i=0; i<array.length; i++) {
      array[i] *= num;
  }
}","### Instruction: 
 Create a function in Java that takes an array and multiplies each element by the given number. 
 ### Input: int[] array = {1, 2, 3, 4, 5};
Number to multiply by: 10 
 ### Response:
 public static void multiplyArray(int[] array, int num) {
  for(int i=0; i<array.length; i++) {
      array[i] *= num;
  }
}"
3456,"Edit the following Java program and make it compile without any errors.
Input: public class Main { 
    public static void main(String[] args) { 
        System.print(""Hello, World!""); 
    } 
}","public class Main { 
    public static void main(String[] args) { 
        System.out.println(""Hello, World!""); 
    } 
}","### Instruction: 
 Edit the following Java program and make it compile without any errors. 
 ### Input: public class Main { 
    public static void main(String[] args) { 
        System.print(""Hello, World!""); 
    } 
} 
 ### Response:
 public class Main { 
    public static void main(String[] args) { 
        System.out.println(""Hello, World!""); 
    } 
}"
3473,Write a Java code to perform linear search on the given array.,"public class LinearSearch 
{ 
    /**
     * Linear search implementation
     * 
     * @param arr the array of elements to search
     * @param target the element to search for
     * @return the index of the element if found, -1 otherwise
     */
    public static int linearSearch(int[] arr, int target) 
    { 
        for (int i = 0; i < arr.length; i++) 
        { 
            if (arr[i] == target) 
            { 
                return i; 
            } 
        } 
        return -1;
    } 
    public static void main(String[] args) 
    { 
        int[] arr = {7, 9, 15, 11};
        int target = 15; 
        int index = linearSearch(arr, target); 
        if (index == -1) 
            System.out.println(""Element not found""); 
        else
            System.out.println(""Element found at index: "" + index); 
    } 
}","### Instruction: 
 Write a Java code to perform linear search on the given array. 
 ### Response:
 public class LinearSearch 
{ 
    /**
     * Linear search implementation
     * 
     * @param arr the array of elements to search
     * @param target the element to search for
     * @return the index of the element if found, -1 otherwise
     */
    public static int linearSearch(int[] arr, int target) 
    { 
        for (int i = 0; i < arr.length; i++) 
        { 
            if (arr[i] == target) 
            { 
                return i; 
            } 
        } 
        return -1;
    } 
    public static void main(String[] args) 
    { 
        int[] arr = {7, 9, 15, 11};
        int target = 15; 
        int index = linearSearch(arr, target); 
        if (index == -1) 
            System.out.println(""Element not found""); 
        else
            System.out.println(""Element found at index: "" + index); 
    } 
}"
3513,"Create a class in Java to store student details
Input: Attributes: id (int), name (String), grade (int)","public class Student{
    // Attributes 
    private int id;
    private String name;
    private int grade;
    
    // Constructor 
    public Student(int id, String name, int grade){
        this.id = id;
        this.name = name;
        this.grade = grade;
    }
    
    // Getters and setters 
    public int getId(){
        return this.id;
    }
    
    public void setId(int id){
        this.id = id;
    }
    
    public String getName(){
        return this.name;
    }
    
    public void setName(String name){
        this.name = name;
    }
    
    public int getGrade(){
        return this.grade;
    }
    
    public void setGrade(int grade){
        this.grade = grade;
    }
}","### Instruction: 
 Create a class in Java to store student details 
 ### Input: Attributes: id (int), name (String), grade (int) 
 ### Response:
 public class Student{
    // Attributes 
    private int id;
    private String name;
    private int grade;
    
    // Constructor 
    public Student(int id, String name, int grade){
        this.id = id;
        this.name = name;
        this.grade = grade;
    }
    
    // Getters and setters 
    public int getId(){
        return this.id;
    }
    
    public void setId(int id){
        this.id = id;
    }
    
    public String getName(){
        return this.name;
    }
    
    public void setName(String name){
        this.name = name;
    }
    
    public int getGrade(){
        return this.grade;
    }
    
    public void setGrade(int grade){
        this.grade = grade;
    }
}"
3576,Create a function in Java that will take an integer as a parameter and return its square root.,"public static double getSquareRoot(int number){
    return Math.sqrt(number);
}","### Instruction: 
 Create a function in Java that will take an integer as a parameter and return its square root. 
 ### Response:
 public static double getSquareRoot(int number){
    return Math.sqrt(number);
}"
3632,"Write Java code to check if two strings are anagrams, e.g. god, dog are anagrams.
Input: String str1 = ""abc"";
String str2 = ""cba"";","public static boolean isAnagram(String str1, String str2) 
{ 
    char arr1[] = str1.toCharArray(); 
    char arr2[] = str2.toCharArray(); 
    Arrays.sort(arr1); 
    Arrays.sort(arr2); 

    return Arrays.equals(arr1, arr2); 
}","### Instruction: 
 Write Java code to check if two strings are anagrams, e.g. god, dog are anagrams. 
 ### Input: String str1 = ""abc"";
String str2 = ""cba""; 
 ### Response:
 public static boolean isAnagram(String str1, String str2) 
{ 
    char arr1[] = str1.toCharArray(); 
    char arr2[] = str2.toCharArray(); 
    Arrays.sort(arr1); 
    Arrays.sort(arr2); 

    return Arrays.equals(arr1, arr2); 
}"
3656,Design a Java class to store the details of a customer.,"public class Customer {
    private String name;
    private String address;
    private String email;
    private String phone;

    public Customer() {
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getAddress() {
        return address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getPhone() {
        return phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }
}","### Instruction: 
 Design a Java class to store the details of a customer. 
 ### Response:
 public class Customer {
    private String name;
    private String address;
    private String email;
    private String phone;

    public Customer() {
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getAddress() {
        return address;
    }

    public void setAddress(String address) {
        this.address = address;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getPhone() {
        return phone;
    }

    public void setPhone(String phone) {
        this.phone = phone;
    }
}"
3663,Create a class called “Car” in Java with the following attributes and methods.,"public class Car {
  private String make;
  private String model;
  private int year;
 
  public Car(String make, String model, int year) {
    this.make = make;
    this.model = model;
    this.year = year;
  }
 
  public String getMake() {
    return make;
  }
 
  public void setMake(String make) {
    this.make = make;
  }
 
  public String getModel() {
    return model;
  }
 
  public void setModel(String model) {
    this.model = model;
  }
 
  public int getYear() {
    return year;
  }
 
  public void setYear(int year) {
    this.year = year;
  }
 
  public String toString() {
    return String.format(""Make: %s, Model: %s, Year: %d"", make, model, year);
  }
}","### Instruction: 
 Create a class called “Car” in Java with the following attributes and methods. 
 ### Response:
 public class Car {
  private String make;
  private String model;
  private int year;
 
  public Car(String make, String model, int year) {
    this.make = make;
    this.model = model;
    this.year = year;
  }
 
  public String getMake() {
    return make;
  }
 
  public void setMake(String make) {
    this.make = make;
  }
 
  public String getModel() {
    return model;
  }
 
  public void setModel(String model) {
    this.model = model;
  }
 
  public int getYear() {
    return year;
  }
 
  public void setYear(int year) {
    this.year = year;
  }
 
  public String toString() {
    return String.format(""Make: %s, Model: %s, Year: %d"", make, model, year);
  }
}"
3759,Create a while loop in Java to break at the first even number found.,"int i = 0;
while (i <= 10) {
    if (i % 2 == 0) {
        break;
    }
    i++;
}","### Instruction: 
 Create a while loop in Java to break at the first even number found. 
 ### Response:
 int i = 0;
while (i <= 10) {
    if (i % 2 == 0) {
        break;
    }
    i++;
}"
3806,Write a Java program to display a pattern of numbers.,"class PatternTest
{
    public static void main(String[] args)
    {
        int[][] pattern = {
            {1,2,3},
            {4,5,6},
            {7,8,9}
        };

        for (int i=0; i<pattern.length; i++) 
        {
            for (int j=0; j<pattern[i].length; j++) 
            {
                System.out.print(pattern[i][j] + "" "");
            }
            System.out.println();
        }
    }
}","### Instruction: 
 Write a Java program to display a pattern of numbers. 
 ### Response:
 class PatternTest
{
    public static void main(String[] args)
    {
        int[][] pattern = {
            {1,2,3},
            {4,5,6},
            {7,8,9}
        };

        for (int i=0; i<pattern.length; i++) 
        {
            for (int j=0; j<pattern[i].length; j++) 
            {
                System.out.print(pattern[i][j] + "" "");
            }
            System.out.println();
        }
    }
}"
3843,"Given the following Java code, can you spot the error?
Input: public class MyClass {
  int x = 10;
  int y = 20;

  public static int add(int x, int y) {
    int sum = x + y;
    return sum;
  }
}","The method add() is a static method and cannot directly access the instance variables x and y. The error can be fixed by passing in the two parameters x and y to the add() method: 

public static int add(int x, int y) {
    int sum = x + y;
    return sum;
}","### Instruction: 
 Given the following Java code, can you spot the error? 
 ### Input: public class MyClass {
  int x = 10;
  int y = 20;

  public static int add(int x, int y) {
    int sum = x + y;
    return sum;
  }
} 
 ### Response:
 The method add() is a static method and cannot directly access the instance variables x and y. The error can be fixed by passing in the two parameters x and y to the add() method: 

public static int add(int x, int y) {
    int sum = x + y;
    return sum;
}"
3876,"Write a Java code snippet to print the following line of text: “Hello, World!”","System.out.println(""Hello, World!"");","### Instruction: 
 Write a Java code snippet to print the following line of text: “Hello, World!” 
 ### Response:
 System.out.println(""Hello, World!"");"
3892,Write a Java method that takes in a string and returns an array containing all the possible permutations of this string.,"public static ArrayList<String> allPermutations(String inputString){
    ArrayList<String> permutations = new ArrayList<>();
    if (inputString.length() == 0) {
        permutations.add("""");
        return permutations;
    }

    char first = inputString.charAt(0);
    String remainder = inputString.substring(1);
    ArrayList<String> words = allPermutations(remainder);
    for (String word : words) {
        for (int j = 0; j <= word.length(); j++) {
            permutations.add(insertCharAt(word, first, j));
        }
    }
    return permutations;
}

public static String insertCharAt(String word, char c, int i) {
    String start = word.substring(0, i);
    String end = word.substring(i);
    return start + c + end;
}","### Instruction: 
 Write a Java method that takes in a string and returns an array containing all the possible permutations of this string. 
 ### Response:
 public static ArrayList<String> allPermutations(String inputString){
    ArrayList<String> permutations = new ArrayList<>();
    if (inputString.length() == 0) {
        permutations.add("""");
        return permutations;
    }

    char first = inputString.charAt(0);
    String remainder = inputString.substring(1);
    ArrayList<String> words = allPermutations(remainder);
    for (String word : words) {
        for (int j = 0; j <= word.length(); j++) {
            permutations.add(insertCharAt(word, first, j));
        }
    }
    return permutations;
}

public static String insertCharAt(String word, char c, int i) {
    String start = word.substring(0, i);
    String end = word.substring(i);
    return start + c + end;
}"
3902,"Create a program in Java to reverse a sentence.
Input: This is a sample sentence.","String input = ""This is a sample sentence"";

String reversed = new StringBuffer(input)
             .reverse()
             .toString();
    
System.out.println(reversed);","### Instruction: 
 Create a program in Java to reverse a sentence. 
 ### Input: This is a sample sentence. 
 ### Response:
 String input = ""This is a sample sentence"";

String reversed = new StringBuffer(input)
             .reverse()
             .toString();
    
System.out.println(reversed);"
3905,"Create a function in Java that changes a given string to uppercase.
Input: This is a sample string.","String input = ""This is a sample string"";

String upper = input.toUpperCase();

System.out.println(upper);","### Instruction: 
 Create a function in Java that changes a given string to uppercase. 
 ### Input: This is a sample string. 
 ### Response:
 String input = ""This is a sample string"";

String upper = input.toUpperCase();

System.out.println(upper);"
3908,Create a Java code snippet that takes two integers as parameters and prints the larger one.,"public static void printMax(int a, int b) {  
    if (a > b)
        System.out.println(a);
    else
        System.out.println(b);
}","### Instruction: 
 Create a Java code snippet that takes two integers as parameters and prints the larger one. 
 ### Response:
 public static void printMax(int a, int b) {  
    if (a > b)
        System.out.println(a);
    else
        System.out.println(b);
}"
4012,"Create a program in Java to check whether the given word is a palindrome or not.
Input: ""radar""","public class Palindrome{ 
    public static boolean checkPalindrome(String str){ 
        int i=0,j=str.length()-1; 
        while(i<j){ 
            if(str.charAt(i) != str.charAt(j)) 
                return false; 
            i++;j--; 
        } 
        return true; 
    } 
}","### Instruction: 
 Create a program in Java to check whether the given word is a palindrome or not. 
 ### Input: ""radar"" 
 ### Response:
 public class Palindrome{ 
    public static boolean checkPalindrome(String str){ 
        int i=0,j=str.length()-1; 
        while(i<j){ 
            if(str.charAt(i) != str.charAt(j)) 
                return false; 
            i++;j--; 
        } 
        return true; 
    } 
}"
4014,"Create a conditional statement in Java that prints ""Welcome!"" if the given argument is ""Hi"".
Input: ""Hi""","if (argument.equals(""Hi"")) {
    System.out.println(""Welcome!"");
}","### Instruction: 
 Create a conditional statement in Java that prints ""Welcome!"" if the given argument is ""Hi"". 
 ### Input: ""Hi"" 
 ### Response:
 if (argument.equals(""Hi"")) {
    System.out.println(""Welcome!"");
}"
4018,"Create a function in Java that finds the difference between the largest and the smallest elements in a given array.
Input: [1, 5, 10, 20]","public static int arrayMaxMinDiff(int[] arr) {
	
	// Initialize greatest and smallest
  	int max = arr[0]; 
  	int min = arr[0]; 
  
 	// Iterate the array and find the max & min
  	for (int i = 0; i < arr.length; i++) {
    		if (arr[i] > max) 
      			max = arr[i]; 
    		if (arr[i] < min) 
      			min = arr[i]; 
  	}
  
  	// Calculate & return the difference
  	int diff = max - min; 
  	return diff; 
}
// Driver Code 
int[] arr = {1, 5, 10, 20}; 
int diff = arrayMaxMinDiff(arr); 
System.out.println(""Difference between largest & smallest elements = "" + diff); 
# Output
Difference between largest & smallest elements = 19","### Instruction: 
 Create a function in Java that finds the difference between the largest and the smallest elements in a given array. 
 ### Input: [1, 5, 10, 20] 
 ### Response:
 public static int arrayMaxMinDiff(int[] arr) {
	
	// Initialize greatest and smallest
  	int max = arr[0]; 
  	int min = arr[0]; 
  
 	// Iterate the array and find the max & min
  	for (int i = 0; i < arr.length; i++) {
    		if (arr[i] > max) 
      			max = arr[i]; 
    		if (arr[i] < min) 
      			min = arr[i]; 
  	}
  
  	// Calculate & return the difference
  	int diff = max - min; 
  	return diff; 
}
// Driver Code 
int[] arr = {1, 5, 10, 20}; 
int diff = arrayMaxMinDiff(arr); 
System.out.println(""Difference between largest & smallest elements = "" + diff); 
# Output
Difference between largest & smallest elements = 19"
4037,"Write a class in Java that prints out the nth number of the Fibonacci sequence using recursion.
Input: 6","public class Fibonacci {
 
    static int n1=0,n2=1,n3=0;
    
    static void printFibonacci(int count){    
        if(count>0){    
            n3 = n1 + n2;    
            n1 = n2;    
            n2 = n3;    
            System.out.print("" ""+n3);   
            printFibonacci(count-1);    
        }    
    }
     
    public static void main(String args[]){    
        int count=6;    
        System.out.print(n1+"" ""+n2);    
        printFibonacci(count-2);    
    }
}","### Instruction: 
 Write a class in Java that prints out the nth number of the Fibonacci sequence using recursion. 
 ### Input: 6 
 ### Response:
 public class Fibonacci {
 
    static int n1=0,n2=1,n3=0;
    
    static void printFibonacci(int count){    
        if(count>0){    
            n3 = n1 + n2;    
            n1 = n2;    
            n2 = n3;    
            System.out.print("" ""+n3);   
            printFibonacci(count-1);    
        }    
    }
     
    public static void main(String args[]){    
        int count=6;    
        System.out.print(n1+"" ""+n2);    
        printFibonacci(count-2);    
    }
}"
4052,"Compose a Java program to print a given pattern on the screen.
Input: N = 5","public class Pattern {
    public static void main(String[] args) {
        int N = 5;
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                System.out.print(Math.abs(i-j)+1 + "" "");
            }
            System.out.println();
        }
    }
} 
// Output 
1 2 3 4 5 
2 1 2 3 4 
3 2 1 2 3 
4 3 2 1 2 
5 4 3 2 1","### Instruction: 
 Compose a Java program to print a given pattern on the screen. 
 ### Input: N = 5 
 ### Response:
 public class Pattern {
    public static void main(String[] args) {
        int N = 5;
        for (int i = 0; i < N; i++) {
            for (int j = 0; j < N; j++) {
                System.out.print(Math.abs(i-j)+1 + "" "");
            }
            System.out.println();
        }
    }
} 
// Output 
1 2 3 4 5 
2 1 2 3 4 
3 2 1 2 3 
4 3 2 1 2 
5 4 3 2 1"
4059,"Compose a Java program that finds the factorial of a number.
Input: n = 5","public class Factorial {
	public static void main(String[] args) {
		int n = 5;
		int result = 1;
		
		for (int i = n; i >= 1; i--) {
			result = result * i;
		}
		
		System.out.println(result);
	}
}","### Instruction: 
 Compose a Java program that finds the factorial of a number. 
 ### Input: n = 5 
 ### Response:
 public class Factorial {
	public static void main(String[] args) {
		int n = 5;
		int result = 1;
		
		for (int i = n; i >= 1; i--) {
			result = result * i;
		}
		
		System.out.println(result);
	}
}"
4062,"Create a Java program to list out all prime numbers between 1 and n.
Input: n = 20","public class AllPrimeNumbers 
{ 
    public static void main(String args[]) 
    { 
        int n = 20;

        System.out.print(""All Prime Numbers between 1 and "" + n + "" are: ""); 
          
        for (int i = 2; i <= n; i++)  
        { 
            boolean isPrime = true; 
  
            for (int j = 2; j < i; j++) 
            { 
                if (i % j == 0) 
                { 
                    isPrime = false; 
                    break; 
                } 
            } 
  
            if (isPrime) 
            {
                System.out.print(i + "" ""); 
            } 
        } 
    } 
}","### Instruction: 
 Create a Java program to list out all prime numbers between 1 and n. 
 ### Input: n = 20 
 ### Response:
 public class AllPrimeNumbers 
{ 
    public static void main(String args[]) 
    { 
        int n = 20;

        System.out.print(""All Prime Numbers between 1 and "" + n + "" are: ""); 
          
        for (int i = 2; i <= n; i++)  
        { 
            boolean isPrime = true; 
  
            for (int j = 2; j < i; j++) 
            { 
                if (i % j == 0) 
                { 
                    isPrime = false; 
                    break; 
                } 
            } 
  
            if (isPrime) 
            {
                System.out.print(i + "" ""); 
            } 
        } 
    } 
}"
4073,Design a Java class for representing a stack data structure.,"public class MyStack {
    int top; 
    int[] stackArray; 
  
    // Constructor to initialize 
    public MyStack(int capacity) { 
        stackArray = new int[capacity]; 
        top = -1; 
    } 
  
    // Push an element to the top of the stack
    public void push(int data) { 
        stackArray[++top] = data; 
    } 
  
    // Pop an element from the top of the stack 
    public int pop() { 
        return stackArray[top--]; 
    } 
  
    // peek or peak an element from the top of the stack 
    public int peek() { 
        return stackArray[top]; 
    } 
  
    // Check if the stack is empty 
    public boolean isEmpty() { 
        return (top == -1); 
    } 
  
    // Return the size of the stack 
    public int size() { 
        return top + 1; 
    } 
}","### Instruction: 
 Design a Java class for representing a stack data structure. 
 ### Response:
 public class MyStack {
    int top; 
    int[] stackArray; 
  
    // Constructor to initialize 
    public MyStack(int capacity) { 
        stackArray = new int[capacity]; 
        top = -1; 
    } 
  
    // Push an element to the top of the stack
    public void push(int data) { 
        stackArray[++top] = data; 
    } 
  
    // Pop an element from the top of the stack 
    public int pop() { 
        return stackArray[top--]; 
    } 
  
    // peek or peak an element from the top of the stack 
    public int peek() { 
        return stackArray[top]; 
    } 
  
    // Check if the stack is empty 
    public boolean isEmpty() { 
        return (top == -1); 
    } 
  
    // Return the size of the stack 
    public int size() { 
        return top + 1; 
    } 
}"
4098,Write a Java program to print 'Hello World' five times.,"public class HelloWorld {
 public static void main(String[] args) {
 for(int i = 0; i < 5; i++) {
 System.out.println(""Hello World"");
 }
 }
}","### Instruction: 
 Write a Java program to print 'Hello World' five times. 
 ### Response:
 public class HelloWorld {
 public static void main(String[] args) {
 for(int i = 0; i < 5; i++) {
 System.out.println(""Hello World"");
 }
 }
}"
4129,"Write a Java program that searches an array for a given value and returns the index at which it is found.
Input: int[] arr = {3, 4, 6, 7, 8, 10};
int searchValue = 8;","public static int searchArray(int[] arr, int searchValue) {
    for (int i = 0; i < arr.length; i++) {
        if (arr[i] == searchValue) {
            return i;
        }
    }
    return -1;
}","### Instruction: 
 Write a Java program that searches an array for a given value and returns the index at which it is found. 
 ### Input: int[] arr = {3, 4, 6, 7, 8, 10};
int searchValue = 8; 
 ### Response:
 public static int searchArray(int[] arr, int searchValue) {
    for (int i = 0; i < arr.length; i++) {
        if (arr[i] == searchValue) {
            return i;
        }
    }
    return -1;
}"
4198,"Construct a Java switch statement to check whether a given number is positive, negative, or zero.
Input: Number: -7","int number = -7;

switch (number) {
 case 0: 
  System.out.println(""Zero"");
  break;
 case > 0:
  System.out.println(""Positive"");
  break;
 case < 0:
  System.out.println(""Negative"");
  break;
}","### Instruction: 
 Construct a Java switch statement to check whether a given number is positive, negative, or zero. 
 ### Input: Number: -7 
 ### Response:
 int number = -7;

switch (number) {
 case 0: 
  System.out.println(""Zero"");
  break;
 case > 0:
  System.out.println(""Positive"");
  break;
 case < 0:
  System.out.println(""Negative"");
  break;
}"
4269,"Write a Java program to replace the first occurrence of a given character with '*'.
Input: String = ""Hello World!""
Character = 'o'","String str = ""Hello World!"";

String newStr = str.replaceFirst(""o"", ""*"");

System.out.println(newStr);","### Instruction: 
 Write a Java program to replace the first occurrence of a given character with '*'. 
 ### Input: String = ""Hello World!""
Character = 'o' 
 ### Response:
 String str = ""Hello World!"";

String newStr = str.replaceFirst(""o"", ""*"");

System.out.println(newStr);"
4272,"Write a Java program to print out a triangle of stars.
Input: 3","*
**
***","### Instruction: 
 Write a Java program to print out a triangle of stars. 
 ### Input: 3 
 ### Response:
 *
**
***"
4297,"Write a java program to print the frequencies of all characters in a string.
Input: string = ""mississippi""","public class Frequency { 
	static void characterFrequency(String str) 
	{ 
		// size of the string 'str' 
		int n = str.length(); 

		// 'freq[]' implemented as hash table 
		int freq[] = new int[256]; 

		// accumulate freqeuncy of each character 
		// in 'str' 
		for (int i = 0; i < n; i++) 
			freq[str.charAt(i)]++; 

		// traverse 'str' from left to right 
		for (int i = 0; i < n; i++) { 

			// if frequency of character str.charAt(i) 
			// is not equal to 0 
			if (freq[str.charAt(i)] != 0) { 

				// print the character along with its 
				// frequency 
				System.out.print(str.charAt(i)); 
				System.out.print(freq[str.charAt(i)] + "" ""); 

				// update frequency of str.charAt(i) to 
				// 0 so that the same character is not printed 
				// again 
				freq[str.charAt(i)] = 0; 
			} 
		} 
	} 

	// Driver code 
	public static void main(String args[]) 
	{ 
		String str = ""mississippi""; 
		characterFrequency(str); 
	} 
}","### Instruction: 
 Write a java program to print the frequencies of all characters in a string. 
 ### Input: string = ""mississippi"" 
 ### Response:
 public class Frequency { 
	static void characterFrequency(String str) 
	{ 
		// size of the string 'str' 
		int n = str.length(); 

		// 'freq[]' implemented as hash table 
		int freq[] = new int[256]; 

		// accumulate freqeuncy of each character 
		// in 'str' 
		for (int i = 0; i < n; i++) 
			freq[str.charAt(i)]++; 

		// traverse 'str' from left to right 
		for (int i = 0; i < n; i++) { 

			// if frequency of character str.charAt(i) 
			// is not equal to 0 
			if (freq[str.charAt(i)] != 0) { 

				// print the character along with its 
				// frequency 
				System.out.print(str.charAt(i)); 
				System.out.print(freq[str.charAt(i)] + "" ""); 

				// update frequency of str.charAt(i) to 
				// 0 so that the same character is not printed 
				// again 
				freq[str.charAt(i)] = 0; 
			} 
		} 
	} 

	// Driver code 
	public static void main(String args[]) 
	{ 
		String str = ""mississippi""; 
		characterFrequency(str); 
	} 
}"
4309,Write a function in Java that sorts a given array of integers.,"public static int[] sortArray(int[] arr) { 
    int n = arr.length; 
  
    for (int i = 0; i < n-1; i++) 
        for (int j = 0; j < n-i-1; j++) 
            if (arr[j] > arr[j+1]) 
            { 
                // swap arr[j+1] and arr[i] 
                int temp = arr[j]; 
                arr[j] = arr[j+1]; 
                arr[j+1] = temp; 
            } 
    return arr; 
}","### Instruction: 
 Write a function in Java that sorts a given array of integers. 
 ### Response:
 public static int[] sortArray(int[] arr) { 
    int n = arr.length; 
  
    for (int i = 0; i < n-1; i++) 
        for (int j = 0; j < n-i-1; j++) 
            if (arr[j] > arr[j+1]) 
            { 
                // swap arr[j+1] and arr[i] 
                int temp = arr[j]; 
                arr[j] = arr[j+1]; 
                arr[j+1] = temp; 
            } 
    return arr; 
}"
4344,Write Java code to calculate the sum of first n natural numbers.,"public class SumNatural {
    public static void main(String[] args) {
        int num = 20, sum = 0;
        for(int i = 1; i <= num; ++i)
        {
            sum += i;
        }
        System.out.println(""Sum = "" + sum);
    }
}","### Instruction: 
 Write Java code to calculate the sum of first n natural numbers. 
 ### Response:
 public class SumNatural {
    public static void main(String[] args) {
        int num = 20, sum = 0;
        for(int i = 1; i <= num; ++i)
        {
            sum += i;
        }
        System.out.println(""Sum = "" + sum);
    }
}"
4349,Write code in Java to print all the unique elements in an array.,"public void printUnique(int[] array) {
  Set<Integer> set = new HashSet<>();

  for (int i : array) {
    set.add(i);
  }

  System.out.println(set);

}","### Instruction: 
 Write code in Java to print all the unique elements in an array. 
 ### Response:
 public void printUnique(int[] array) {
  Set<Integer> set = new HashSet<>();

  for (int i : array) {
    set.add(i);
  }

  System.out.println(set);

}"
4352,Write a short Java program to generate a random value from 1 to 10.,"import java.util.Random;

public class genRandom {
   public static void main(String[] args) {
      // create instance of Random class
      Random rand = new Random();

      // Generate random integers in range 0 to 10
      int randomNum = rand.nextInt(11);

      // Print random integers
      System.out.println(""Random Number :"" + randomNum);
   }
}","### Instruction: 
 Write a short Java program to generate a random value from 1 to 10. 
 ### Response:
 import java.util.Random;

public class genRandom {
   public static void main(String[] args) {
      // create instance of Random class
      Random rand = new Random();

      // Generate random integers in range 0 to 10
      int randomNum = rand.nextInt(11);

      // Print random integers
      System.out.println(""Random Number :"" + randomNum);
   }
}"
4360,"Create a Java program that takes two strings s and t as input and checks if t is an anagram of s
Input: s = ""abc"", t = ""bac""","public class Anagram { 
  
    static void isAnagram(String s1, String s2) { 
        // Removing all white spaces from s1 and s2 
        String copyOfs1 = s1.replaceAll(""\\s"", """"); 
        String copyOfs2 = s2.replaceAll(""\\s"", """"); 
  
        // Initially setting status as true 
        boolean status = true; 
  
        if (copyOfs1.length() != copyOfs2.length()) { 
            // Setting status as false if copyOfs1 and copyOfs2 doesn't have same length 
            status = false; 
        }  
        else { 
            // Changing the case of characters of both copyOfs1 and copyOfs2 and 
            // converting them to char array 
            char[] s1Array = copyOfs1.toLowerCase().toCharArray(); 
            char[] s2Array = copyOfs2.toLowerCase().toCharArray(); 
  
            // Sorting both s1Array and s2Array 
            Arrays.sort(s1Array); 
            Arrays.sort(s2Array); 
  
            // Checking whether s1Array and s2Array are equal 
            status = Arrays.equals(s1Array, s2Array); 
        } 
  
        // Output the Message
        if (status) 
            System.out.println(s1 + "" and "" + s2 + "" are anagrams""); 
        else
            System.out.println(s1 + "" and "" + s2 + "" are not anagrams""); 
    } 
  
    public static void main(String[] args) 
    { 
        isAnagram(""abc"", ""bac"");
    } 
}","### Instruction: 
 Create a Java program that takes two strings s and t as input and checks if t is an anagram of s 
 ### Input: s = ""abc"", t = ""bac"" 
 ### Response:
 public class Anagram { 
  
    static void isAnagram(String s1, String s2) { 
        // Removing all white spaces from s1 and s2 
        String copyOfs1 = s1.replaceAll(""\\s"", """"); 
        String copyOfs2 = s2.replaceAll(""\\s"", """"); 
  
        // Initially setting status as true 
        boolean status = true; 
  
        if (copyOfs1.length() != copyOfs2.length()) { 
            // Setting status as false if copyOfs1 and copyOfs2 doesn't have same length 
            status = false; 
        }  
        else { 
            // Changing the case of characters of both copyOfs1 and copyOfs2 and 
            // converting them to char array 
            char[] s1Array = copyOfs1.toLowerCase().toCharArray(); 
            char[] s2Array = copyOfs2.toLowerCase().toCharArray(); 
  
            // Sorting both s1Array and s2Array 
            Arrays.sort(s1Array); 
            Arrays.sort(s2Array); 
  
            // Checking whether s1Array and s2Array are equal 
            status = Arrays.equals(s1Array, s2Array); 
        } 
  
        // Output the Message
        if (status) 
            System.out.println(s1 + "" and "" + s2 + "" are anagrams""); 
        else
            System.out.println(s1 + "" and "" + s2 + "" are not anagrams""); 
    } 
  
    public static void main(String[] args) 
    { 
        isAnagram(""abc"", ""bac"");
    } 
}"
4374,Write a Java program to filter out the common characters in two given strings.,"public static String filterCommonCharacters(String str1, String str2) {
    StringBuilder sb = new StringBuilder();
    // Traverse both strings
    for (int i = 0; i < str1.length(); i++) {
        // Check if str2 contains str1[i]
        boolean found = false;
        for (int j = 0; j < str2.length(); j++) {
            if (str1.charAt(i) == str2.charAt(j)) 
                found = true;
        }
        // Append the character if it is not present in str2
        if (found == false)
            sb.append(str1.charAt(i));  
    }  
    return sb.toString();
}","### Instruction: 
 Write a Java program to filter out the common characters in two given strings. 
 ### Response:
 public static String filterCommonCharacters(String str1, String str2) {
    StringBuilder sb = new StringBuilder();
    // Traverse both strings
    for (int i = 0; i < str1.length(); i++) {
        // Check if str2 contains str1[i]
        boolean found = false;
        for (int j = 0; j < str2.length(); j++) {
            if (str1.charAt(i) == str2.charAt(j)) 
                found = true;
        }
        // Append the character if it is not present in str2
        if (found == false)
            sb.append(str1.charAt(i));  
    }  
    return sb.toString();
}"
4375,"Create a Java method which takes a String and an integer as inputs and concatenates the integer to the beginning of the string.
Input: inputString: ""This is a test""
num: 38","public static String prependIntToString(String inputString, int num) {
    String outputString = num + """" + inputString;
    return outputString;
}","### Instruction: 
 Create a Java method which takes a String and an integer as inputs and concatenates the integer to the beginning of the string. 
 ### Input: inputString: ""This is a test""
num: 38 
 ### Response:
 public static String prependIntToString(String inputString, int num) {
    String outputString = num + """" + inputString;
    return outputString;
}"
4380,"Write a Java method that takes a string and an integer as input, and returns the string in reverse with the integer repeated at the end.
Input: inputString: ""Hello""
num: 3","public static String repeatNumAtEnd(String inputString, int num) {
    String outputString = """";
    for(int i = inputString.length() - 1; i >= 0; i--){ 
        outputString += inputString.charAt(i); 
    } 
    for (int i = 0; i < num; i++){
        outputString += num;
    }
    return outputString;
}","### Instruction: 
 Write a Java method that takes a string and an integer as input, and returns the string in reverse with the integer repeated at the end. 
 ### Input: inputString: ""Hello""
num: 3 
 ### Response:
 public static String repeatNumAtEnd(String inputString, int num) {
    String outputString = """";
    for(int i = inputString.length() - 1; i >= 0; i--){ 
        outputString += inputString.charAt(i); 
    } 
    for (int i = 0; i < num; i++){
        outputString += num;
    }
    return outputString;
}"
4401,"Write a Java method to replace all spaces from a given string with a provided character
Input: Hello World!
Z","public static String replaceCharacter(String str, char c) {
    return str.replaceAll("" "", String.valueOf(c));
}

System.out.println(replaceCharacter(""Hello World!"", 'Z')); // Output: HelloZWorld!","### Instruction: 
 Write a Java method to replace all spaces from a given string with a provided character 
 ### Input: Hello World!
Z 
 ### Response:
 public static String replaceCharacter(String str, char c) {
    return str.replaceAll("" "", String.valueOf(c));
}

System.out.println(replaceCharacter(""Hello World!"", 'Z')); // Output: HelloZWorld!"
4424,Create an object-oriented program in Java to calculate the area of a  rectangle.,"public class Rectangle {
    private int width;
    private int height;

    public Rectangle(int width, int height){
        this.width = width;
        this.height = height;
    }

    public int calculateArea(){
        return this.width * this.height; 
    }
}","### Instruction: 
 Create an object-oriented program in Java to calculate the area of a  rectangle. 
 ### Response:
 public class Rectangle {
    private int width;
    private int height;

    public Rectangle(int width, int height){
        this.width = width;
        this.height = height;
    }

    public int calculateArea(){
        return this.width * this.height; 
    }
}"
4447,Create a Java method to print a binary tree in level order.,"public class BinaryTree { 
  
    // Root of Binary Tree 
    Node root; 
  
    // Function to print binary tree in level order 
    void printLevelOrder() { 
        int h = height(root); 
        int i; 
        for (i = 1; i <= h; i++) 
            levelOrder(root, i); 
    } 
  
    // Print nodes at a given level 
    void levelOrder(Node root, int level) { 
        if (root == null) 
            return; 
        if (level == 1) 
            System.out.print(root.data + "" ""); 
        else if (level > 1) { 
            levelOrder(root.left, level - 1); 
            levelOrder(root.right, level - 1); 
        } 
    } 
  
    // Compute the height of a tree--the number of nodes 
    // along the longest path from the root node down to 
    // the farthest leaf node 
    int height(Node root) { 
        if (root == null) 
            return 0; 
        else { 
            // compute height of each subtree 
            int lheight = height(root.left); 
            int rheight = height(root.right); 
  
            // use the larger one 
            if (lheight > rheight) 
                return (lheight + 1); 
            else
                return (rheight + 1); 
        } 
    } 
}","### Instruction: 
 Create a Java method to print a binary tree in level order. 
 ### Response:
 public class BinaryTree { 
  
    // Root of Binary Tree 
    Node root; 
  
    // Function to print binary tree in level order 
    void printLevelOrder() { 
        int h = height(root); 
        int i; 
        for (i = 1; i <= h; i++) 
            levelOrder(root, i); 
    } 
  
    // Print nodes at a given level 
    void levelOrder(Node root, int level) { 
        if (root == null) 
            return; 
        if (level == 1) 
            System.out.print(root.data + "" ""); 
        else if (level > 1) { 
            levelOrder(root.left, level - 1); 
            levelOrder(root.right, level - 1); 
        } 
    } 
  
    // Compute the height of a tree--the number of nodes 
    // along the longest path from the root node down to 
    // the farthest leaf node 
    int height(Node root) { 
        if (root == null) 
            return 0; 
        else { 
            // compute height of each subtree 
            int lheight = height(root.left); 
            int rheight = height(root.right); 
  
            // use the larger one 
            if (lheight > rheight) 
                return (lheight + 1); 
            else
                return (rheight + 1); 
        } 
    } 
}"
4503,Create a global function in Java to convert an integer number into its String equivalent.,"public static String numberToString(int num) {
    StringBuilder sb = new StringBuilder();
    
    // if num is negative, append '-' to sb
    if (num < 0) {
        sb.append('-');
    }
    
    // obtain absolute value to accommodate for all numbers
    num = Math.abs(num);
    
    // extract each digit and append to sb
    while (num > 0) {
        int digit = num % 10;
        sb.append(digit);
        num /= 10;
    }
    
    return sb.reverse().toString();
}","### Instruction: 
 Create a global function in Java to convert an integer number into its String equivalent. 
 ### Response:
 public static String numberToString(int num) {
    StringBuilder sb = new StringBuilder();
    
    // if num is negative, append '-' to sb
    if (num < 0) {
        sb.append('-');
    }
    
    // obtain absolute value to accommodate for all numbers
    num = Math.abs(num);
    
    // extract each digit and append to sb
    while (num > 0) {
        int digit = num % 10;
        sb.append(digit);
        num /= 10;
    }
    
    return sb.reverse().toString();
}"
4510,"Compile the following Java program.
Input: class HelloWorld 
{ 
    public static void main(String args[]) 
    { 
        System.out.println(""Hello, World""); 
    } 
}",javac HelloWorld.java,"### Instruction: 
 Compile the following Java program. 
 ### Input: class HelloWorld 
{ 
    public static void main(String args[]) 
    { 
        System.out.println(""Hello, World""); 
    } 
} 
 ### Response:
 javac HelloWorld.java"
4519,Generate a Java program that creates a random array of 10 integers ranging from 0 to 9.,"import java.util.Random;

class GenerateRandomArray{
 
    public static void main(String[] args)
    {
        int[] arr = new int[10];
        Random random = new Random();
        for (int i=0; i<arr.length; i++){
            arr[i] = random.nextInt(10);
        }
 
        // print the elements
        for (int i=0; i<arr.length; i++){
            System.out.print(arr[i]+ "" "");
        }
    }
}","### Instruction: 
 Generate a Java program that creates a random array of 10 integers ranging from 0 to 9. 
 ### Response:
 import java.util.Random;

class GenerateRandomArray{
 
    public static void main(String[] args)
    {
        int[] arr = new int[10];
        Random random = new Random();
        for (int i=0; i<arr.length; i++){
            arr[i] = random.nextInt(10);
        }
 
        // print the elements
        for (int i=0; i<arr.length; i++){
            System.out.print(arr[i]+ "" "");
        }
    }
}"
4521,"Given an array of integers, write a Java method to find the largest three numbers.
Input: [3, 5, 9, 4, 8, 6, 1]","public static void largestThreeNumbers(int[] numbers) { 
    Arrays.sort(numbers); 
  
    int size = numbers.length; 
    System.out.println(""Largest three numbers: ""
                        + numbers[size-1] + "" ""
                        + numbers[size-2] + "" ""
                        + numbers[size-3]); 
}","### Instruction: 
 Given an array of integers, write a Java method to find the largest three numbers. 
 ### Input: [3, 5, 9, 4, 8, 6, 1] 
 ### Response:
 public static void largestThreeNumbers(int[] numbers) { 
    Arrays.sort(numbers); 
  
    int size = numbers.length; 
    System.out.println(""Largest three numbers: ""
                        + numbers[size-1] + "" ""
                        + numbers[size-2] + "" ""
                        + numbers[size-3]); 
}"
4540,Create a function in a Java class which can receive a string and remove punctuations.,"public class StringUtils {

    public static String removePunctuation(String input) {
        String output = input.replaceAll(""[^a-zA-Z0-9 ]"", """");
        return output;
    }
}","### Instruction: 
 Create a function in a Java class which can receive a string and remove punctuations. 
 ### Response:
 public class StringUtils {

    public static String removePunctuation(String input) {
        String output = input.replaceAll(""[^a-zA-Z0-9 ]"", """");
        return output;
    }
}"
4561,Write a method in Java that takes a string as input and returns its length.,"public static int getStringLength(String str) 
{ 
    // Return the length of the string
    return str.length(); 
}","### Instruction: 
 Write a method in Java that takes a string as input and returns its length. 
 ### Response:
 public static int getStringLength(String str) 
{ 
    // Return the length of the string
    return str.length(); 
}"
4564,Create a Java program that calculates the probability of rolling a pair of dice and getting the number 8.,"public static double calculateProbability(int target) {
    int numFavorableOutcomes = 0;
    int numTotalOutcomes = 36;
    for (int i = 1; i <=6; i++) {
        for (int j = 1; j <= 6; j++) {
            if (i + j == target) {
                numFavorableOutcomes++;
            }
        }
    }
    return (double) numFavorableOutcomes/numTotalOutcomes;
}","### Instruction: 
 Create a Java program that calculates the probability of rolling a pair of dice and getting the number 8. 
 ### Response:
 public static double calculateProbability(int target) {
    int numFavorableOutcomes = 0;
    int numTotalOutcomes = 36;
    for (int i = 1; i <=6; i++) {
        for (int j = 1; j <= 6; j++) {
            if (i + j == target) {
                numFavorableOutcomes++;
            }
        }
    }
    return (double) numFavorableOutcomes/numTotalOutcomes;
}"
4571,Write a Java Program to print the Fibonacci numbers for a given range.,"public class Fibonacci {

    public static void main(String[] args) {
         
        int range = 10;
        int i = 0;
        int fibo = 0;
        int fibo1 = 1;
        int fibo2 = 1;

        while(i <= range) {
            System.out.print(fibo + "" "");
            fibo = fibo1 + fibo2;
            fibo1 = fibo2;
            fibo2 = fibo;
            i++;
        }
    }
}","### Instruction: 
 Write a Java Program to print the Fibonacci numbers for a given range. 
 ### Response:
 public class Fibonacci {

    public static void main(String[] args) {
         
        int range = 10;
        int i = 0;
        int fibo = 0;
        int fibo1 = 1;
        int fibo2 = 1;

        while(i <= range) {
            System.out.print(fibo + "" "");
            fibo = fibo1 + fibo2;
            fibo1 = fibo2;
            fibo2 = fibo;
            i++;
        }
    }
}"
4591,Construct a regex in Java that matches a valid email address.,"String regex = ""^[\\w-_\\.+]*[\\w-_\\.]\\@([\\w]+\\.)+[\\w]+[\\w]$"";","### Instruction: 
 Construct a regex in Java that matches a valid email address. 
 ### Response:
 String regex = ""^[\\w-_\\.+]*[\\w-_\\.]\\@([\\w]+\\.)+[\\w]+[\\w]$"";"
4597,"Write Java code to generate a matrix of size n.
Input: n = 5","public static int[][] generateMatrix(int n){
    int[][] matrix = new int[n][n];
    
    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++){
            matrix[i][j] = i * n + j;
        }
    }
    
    return matrix;
}","### Instruction: 
 Write Java code to generate a matrix of size n. 
 ### Input: n = 5 
 ### Response:
 public static int[][] generateMatrix(int n){
    int[][] matrix = new int[n][n];
    
    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++){
            matrix[i][j] = i * n + j;
        }
    }
    
    return matrix;
}"
4602,Write a function in Java for calculating the Modified Julian Date for a given date.,"public double calculateModifiedJulianDate(String date) {
    int year = Integer.parseInt(date.substring(0, 4));
    int month = Integer.parseInt(date.substring(5, 7));
    int day = Integer.parseInt(date.substring(8, 10));
    int hour = Integer.parseInt(date.substring(11, 13));
    int minute = Integer.parseInt(date.substring(14, 16));
    int second = Integer.parseInt(date.substring(17));
     
    double julianDayNumber = 367*year - 
    (7.0/4.0) * (year + (month + 9)/12.0) + 
    (275.0/9.0)*(month) + day - 719561.5;
 
    double modifiedJulianDayNumber = julianDayNumber + (hour + (minute + (second/60.0))/60.0)/24.0;
 
    return modifiedJulianDayNumber;
}","### Instruction: 
 Write a function in Java for calculating the Modified Julian Date for a given date. 
 ### Response:
 public double calculateModifiedJulianDate(String date) {
    int year = Integer.parseInt(date.substring(0, 4));
    int month = Integer.parseInt(date.substring(5, 7));
    int day = Integer.parseInt(date.substring(8, 10));
    int hour = Integer.parseInt(date.substring(11, 13));
    int minute = Integer.parseInt(date.substring(14, 16));
    int second = Integer.parseInt(date.substring(17));
     
    double julianDayNumber = 367*year - 
    (7.0/4.0) * (year + (month + 9)/12.0) + 
    (275.0/9.0)*(month) + day - 719561.5;
 
    double modifiedJulianDayNumber = julianDayNumber + (hour + (minute + (second/60.0))/60.0)/24.0;
 
    return modifiedJulianDayNumber;
}"
4639,"Write a java code to calculate the sum of two numbers provided as input.
Input: int num1 = 25;
int num2 = 24;","int result = num1 + num2; 
System.out.println(result);","### Instruction: 
 Write a java code to calculate the sum of two numbers provided as input. 
 ### Input: int num1 = 25;
int num2 = 24; 
 ### Response:
 int result = num1 + num2; 
System.out.println(result);"
4646,"Construct a java method to convert alphabets to uppercase.
Input: String str = ""This is a great day""","public static String convertToUpper(String str){ 
   char ch[]= str.toCharArray(); 
   for (int i=0; i < str.length(); i++){ 
      if (ch[i] >= 'a' && ch[i] <= 'z') { 
         // convert into uppercase 
         ch[i] = (char)(ch[i] - 'a' + 'A'); 
      } 
   } 
   String st = new String(ch); 
   return st; 
}","### Instruction: 
 Construct a java method to convert alphabets to uppercase. 
 ### Input: String str = ""This is a great day"" 
 ### Response:
 public static String convertToUpper(String str){ 
   char ch[]= str.toCharArray(); 
   for (int i=0; i < str.length(); i++){ 
      if (ch[i] >= 'a' && ch[i] <= 'z') { 
         // convert into uppercase 
         ch[i] = (char)(ch[i] - 'a' + 'A'); 
      } 
   } 
   String st = new String(ch); 
   return st; 
}"
4656,"Create a class in Java that takes two parameters, ""name"" and ""age"".","public class User {
  private String name;
  private int age;

  public User(String name, int age) {
    this.name = name;
    this.age = age;
  }

  public String getName() {
    return this.name;
  }

  public int getAge() {
    return this.age;
  }
}","### Instruction: 
 Create a class in Java that takes two parameters, ""name"" and ""age"". 
 ### Response:
 public class User {
  private String name;
  private int age;

  public User(String name, int age) {
    this.name = name;
    this.age = age;
  }

  public String getName() {
    return this.name;
  }

  public int getAge() {
    return this.age;
  }
}"
4678,"Write a Java code to find the longest common prefix in a string array.
Input: String [] arr = {""flower"",""flow"",""flight""}","public static String longestCommonPrefix(String[] arr) 
{ 
    if (arr.length == 0) 
        return """"; 
  
    String prefix = arr[0]; 
  
    for (int i = 1; i < arr.length; i++) 
    { 
        while (arr[i].indexOf(prefix) != 0) 
        {
            prefix = prefix.substring(0, prefix.length() - 1); 
            if (prefix.isEmpty()) 
                return """";  
        } 
    } 
    return prefix; 
}","### Instruction: 
 Write a Java code to find the longest common prefix in a string array. 
 ### Input: String [] arr = {""flower"",""flow"",""flight""} 
 ### Response:
 public static String longestCommonPrefix(String[] arr) 
{ 
    if (arr.length == 0) 
        return """"; 
  
    String prefix = arr[0]; 
  
    for (int i = 1; i < arr.length; i++) 
    { 
        while (arr[i].indexOf(prefix) != 0) 
        {
            prefix = prefix.substring(0, prefix.length() - 1); 
            if (prefix.isEmpty()) 
                return """";  
        } 
    } 
    return prefix; 
}"
4732,"Create a class in Java named 'Person' that has the following fields: name, age, and gender.","public class Person {
  private String name;
  private int age;
  private String gender;

  public Person(String name, int age, String gender) {
    this.name = name;
    this.age = age;
    this.gender = gender;
  }
}","### Instruction: 
 Create a class in Java named 'Person' that has the following fields: name, age, and gender. 
 ### Response:
 public class Person {
  private String name;
  private int age;
  private String gender;

  public Person(String name, int age, String gender) {
    this.name = name;
    this.age = age;
    this.gender = gender;
  }
}"
4759,Edit the following Java program to read 5 integers from the user and display the largest one.,"import java.util.*;

public class LargestOfFive {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int [] numbers = new int [5];

        for(int i=0; i<5; i++) {
            System.out.print(""Enter an integer: "");
            numbers[i] = sc.nextInt();
        }
        sc.close();

        int largest = numbers[0];

        for (int i=1; i<5; i++) {
            if (numbers[i] > largest) 
                largest = numbers[i];
        } 


        System.out.println(""The largest number is "" + largest);
    }

}","### Instruction: 
 Edit the following Java program to read 5 integers from the user and display the largest one. 
 ### Response:
 import java.util.*;

public class LargestOfFive {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int [] numbers = new int [5];

        for(int i=0; i<5; i++) {
            System.out.print(""Enter an integer: "");
            numbers[i] = sc.nextInt();
        }
        sc.close();

        int largest = numbers[0];

        for (int i=1; i<5; i++) {
            if (numbers[i] > largest) 
                largest = numbers[i];
        } 


        System.out.println(""The largest number is "" + largest);
    }

}"
4762,"Write a Java program to print a right triangle star pattern with a given base.
Input: base = 4","public class RightTrianglePattern 
{ 
  
    // Function to demonstrate printing pattern 
    public static void printPattern(int baseSize) 
    { 
        int i, j; 
  
        // outer loop to handle the number of rows 
        for(i=0; i<baseSize; i++) 
        { 
            // inner loop to handle number spaces  
            // values changing according to requirement 
            for(j=2*(baseSize-i); j>=0; j--) 
            { 
                // printing spaces 
                System.out.print("" ""); 
            } 
              
            //  inner loop to handle number of columns 
            //  values changing according to outer loop 
            for(j=0; j<=i; j++) 
            { 
                // printing stars 
                System.out.print(""*"" + "" ""); 
            } 
            
            System.out.println(); 
        }  
    } 
  
    // Driver Function
    public static void main(String args[]) 
    { 
        int baseSize = 4;
        printPattern(baseSize); 
    } 

}","### Instruction: 
 Write a Java program to print a right triangle star pattern with a given base. 
 ### Input: base = 4 
 ### Response:
 public class RightTrianglePattern 
{ 
  
    // Function to demonstrate printing pattern 
    public static void printPattern(int baseSize) 
    { 
        int i, j; 
  
        // outer loop to handle the number of rows 
        for(i=0; i<baseSize; i++) 
        { 
            // inner loop to handle number spaces  
            // values changing according to requirement 
            for(j=2*(baseSize-i); j>=0; j--) 
            { 
                // printing spaces 
                System.out.print("" ""); 
            } 
              
            //  inner loop to handle number of columns 
            //  values changing according to outer loop 
            for(j=0; j<=i; j++) 
            { 
                // printing stars 
                System.out.print(""*"" + "" ""); 
            } 
            
            System.out.println(); 
        }  
    } 
  
    // Driver Function
    public static void main(String args[]) 
    { 
        int baseSize = 4;
        printPattern(baseSize); 
    } 

}"
4767,"Create a two-dimensional array in Java with values corresponding to the given output.
Input: Output: [4, 6, 10]","int[][] arr = {{4, 6, 10}};","### Instruction: 
 Create a two-dimensional array in Java with values corresponding to the given output. 
 ### Input: Output: [4, 6, 10] 
 ### Response:
 int[][] arr = {{4, 6, 10}};"
4816,Develop a script in Java to generate Fibonacci numbers to nth place.,"public class Fibonacci {
 
    public static void main(String[] args) {
       
        int n = 10, t1 = 0, t2 = 1;
        System.out.print(""First "" + n + "" terms: "");
 
        for (int i = 1; i <= n; ++i)
        {
            System.out.print(t1 + "" "");
 
            int sum = t1 + t2;
            t1 = t2;
            t2 = sum;
        }
    }
}","### Instruction: 
 Develop a script in Java to generate Fibonacci numbers to nth place. 
 ### Response:
 public class Fibonacci {
 
    public static void main(String[] args) {
       
        int n = 10, t1 = 0, t2 = 1;
        System.out.print(""First "" + n + "" terms: "");
 
        for (int i = 1; i <= n; ++i)
        {
            System.out.print(t1 + "" "");
 
            int sum = t1 + t2;
            t1 = t2;
            t2 = sum;
        }
    }
}"
4821,"Create a script in Java to find the most repeated element in an array.
Input: Array in string form: “a,b,c,d,a,a,b,d,d”","public class MaxOccurring 
{ 
    static final int ASCII_SIZE = 256; 
    static char getMaxOccuringChar(String str) 
    { 
        int count[] = new int[ASCII_SIZE]; 
   
        int len = str.length(); 
        for (int i=0; i<len; i++) 
            count[str.charAt(i)]++; 
   
        int max = -1;  // Initialize max count 
        char result = ' ';   // Initialize result 
   
        // Traversing through the string and maintaining 
        // the count of each character 
        for (int i = 0; i < len; i++) { 
            if (max < count[str.charAt(i)]) { 
                max = count[str.charAt(i)]; 
                result = str.charAt(i); 
            } 
        } 
   
        return result; 
    } 
  
    // Driver Method 
    public static void main(String[] args) 
    { 
        String str = ""a,b,c,d,a,a,b,d,d""; 
        System.out.println(""Max occurring character is "" + 
                            getMaxOccuringChar(str)); 
    } 
}","### Instruction: 
 Create a script in Java to find the most repeated element in an array. 
 ### Input: Array in string form: “a,b,c,d,a,a,b,d,d” 
 ### Response:
 public class MaxOccurring 
{ 
    static final int ASCII_SIZE = 256; 
    static char getMaxOccuringChar(String str) 
    { 
        int count[] = new int[ASCII_SIZE]; 
   
        int len = str.length(); 
        for (int i=0; i<len; i++) 
            count[str.charAt(i)]++; 
   
        int max = -1;  // Initialize max count 
        char result = ' ';   // Initialize result 
   
        // Traversing through the string and maintaining 
        // the count of each character 
        for (int i = 0; i < len; i++) { 
            if (max < count[str.charAt(i)]) { 
                max = count[str.charAt(i)]; 
                result = str.charAt(i); 
            } 
        } 
   
        return result; 
    } 
  
    // Driver Method 
    public static void main(String[] args) 
    { 
        String str = ""a,b,c,d,a,a,b,d,d""; 
        System.out.println(""Max occurring character is "" + 
                            getMaxOccuringChar(str)); 
    } 
}"
4826,"Write a Java code snippet to calculate the area of a triangle, given three points.
Input: x1, y1 = 0, 0
x2, y2 = 3, 4
x3, y3 = 4, 0","public class TriangleAreaCalculator {

    // Returns the area of the given triangle, given three points
    static double area(int x1, int y1, int x2, int y2, int x3, int y3){
        double side1 = Math.pow(Math.abs(x1-x2),2) + Math.pow(Math.abs(y1-y2),2);
        double side2 = Math.pow(Math.abs(x2-x3),2) + Math.pow(Math.abs(y2-y3),2);
        double side3 = Math.pow(Math.abs(x3-x1),2) + Math.pow(Math.abs(y3-y1),2);
        double sperimeter = (side1 + side2 + side3) / 2;
        double area = Math.sqrt(sperimeter*(sperimeter-side1)*(sperimeter-side2)*(sperimeter-side3));
        return area;
    }
    
    public static void main(String[] args) {
        int x1 = 0;
        int y1 = 0;
        int x2 = 3;
        int y2 = 4;
        int x3 = 4;
        int y3 = 0;
        
        System.out.println(""The area of the triangle is: "" + area(x1, y1, x2, y2, x3, y3));
    }
}","### Instruction: 
 Write a Java code snippet to calculate the area of a triangle, given three points. 
 ### Input: x1, y1 = 0, 0
x2, y2 = 3, 4
x3, y3 = 4, 0 
 ### Response:
 public class TriangleAreaCalculator {

    // Returns the area of the given triangle, given three points
    static double area(int x1, int y1, int x2, int y2, int x3, int y3){
        double side1 = Math.pow(Math.abs(x1-x2),2) + Math.pow(Math.abs(y1-y2),2);
        double side2 = Math.pow(Math.abs(x2-x3),2) + Math.pow(Math.abs(y2-y3),2);
        double side3 = Math.pow(Math.abs(x3-x1),2) + Math.pow(Math.abs(y3-y1),2);
        double sperimeter = (side1 + side2 + side3) / 2;
        double area = Math.sqrt(sperimeter*(sperimeter-side1)*(sperimeter-side2)*(sperimeter-side3));
        return area;
    }
    
    public static void main(String[] args) {
        int x1 = 0;
        int y1 = 0;
        int x2 = 3;
        int y2 = 4;
        int x3 = 4;
        int y3 = 0;
        
        System.out.println(""The area of the triangle is: "" + area(x1, y1, x2, y2, x3, y3));
    }
}"
4828,Define a function in Java that will take any string as argument and returns it in uppercase.,"public static String toUpperCase(String s) {
    return s.toUpperCase();
}","### Instruction: 
 Define a function in Java that will take any string as argument and returns it in uppercase. 
 ### Response:
 public static String toUpperCase(String s) {
    return s.toUpperCase();
}"
4840,You need to write a Java program to check whether a given string is a palindrome or not.,"public class Palindrome { 
  
    public static void main(String[] args) {  
        String a = ""Madam"";  
        String b = """"; 
        int n = a.length(); 
  
        for(int i = n - 1; i >= 0; i--) { 
            b = b + a.charAt(i); 
        }  
        if(a.equalsIgnoreCase(b)) { 
            System.out.println(""The string is a palindrome.""); 
        } 
        else {
            System.out.println(""The string is not a palindrome.""); 
        }
    } 
}","### Instruction: 
 You need to write a Java program to check whether a given string is a palindrome or not. 
 ### Response:
 public class Palindrome { 
  
    public static void main(String[] args) {  
        String a = ""Madam"";  
        String b = """"; 
        int n = a.length(); 
  
        for(int i = n - 1; i >= 0; i--) { 
            b = b + a.charAt(i); 
        }  
        if(a.equalsIgnoreCase(b)) { 
            System.out.println(""The string is a palindrome.""); 
        } 
        else {
            System.out.println(""The string is not a palindrome.""); 
        }
    } 
}"
4876,"Design a function in Java that takes a parameter of type array as an argument and returns its maximum value.
Input: Array = {21, 8, 43, 10, 7}","public int maxElement(int[] array) {
int max = array[0];
 
for (int i = 1; i < array.length; i++)
if (array[i] > max)
max = array[i];
 
return max;
}","### Instruction: 
 Design a function in Java that takes a parameter of type array as an argument and returns its maximum value. 
 ### Input: Array = {21, 8, 43, 10, 7} 
 ### Response:
 public int maxElement(int[] array) {
int max = array[0];
 
for (int i = 1; i < array.length; i++)
if (array[i] > max)
max = array[i];
 
return max;
}"
4878,"Debug this Java code to make it work.
Input: public class test
{
  public static void main(String args[])
  {
    int a = 5;
    int b = 0;
    int c = a + b;
    System.out.println(""Result is: "" + c);
  }
}","public class test
{
  public static void main(String args[])
  {
    int a = 5;
    int b = 0;
    if(b!=0)
    {
      int c = a + b;
      System.out.println(""Result is: "" + c);
    }
    else
    {
      System.out.println(""Error: Cannot divide by 0!"");
    }
  }
}","### Instruction: 
 Debug this Java code to make it work. 
 ### Input: public class test
{
  public static void main(String args[])
  {
    int a = 5;
    int b = 0;
    int c = a + b;
    System.out.println(""Result is: "" + c);
  }
} 
 ### Response:
 public class test
{
  public static void main(String args[])
  {
    int a = 5;
    int b = 0;
    if(b!=0)
    {
      int c = a + b;
      System.out.println(""Result is: "" + c);
    }
    else
    {
      System.out.println(""Error: Cannot divide by 0!"");
    }
  }
}"
4911,Create a Java class called Employee with a constructor taking name and salary as arguments.,"public class Employee
{
    private String name;
    private double salary;
 
    public Employee(String name, double salary)
    {
        this.name = name;
        this.salary = salary;
    }
    
    // Getters and setters
    public String getName()
    {
        return name;
    }
  
    public void setName(String name)
    {
        this.name = name;
    }
  
    public double getSalary()
    {
        return salary;
    }
  
    public void setSalary(double salary)
    {
        this.salary = salary;
    }
}","### Instruction: 
 Create a Java class called Employee with a constructor taking name and salary as arguments. 
 ### Response:
 public class Employee
{
    private String name;
    private double salary;
 
    public Employee(String name, double salary)
    {
        this.name = name;
        this.salary = salary;
    }
    
    // Getters and setters
    public String getName()
    {
        return name;
    }
  
    public void setName(String name)
    {
        this.name = name;
    }
  
    public double getSalary()
    {
        return salary;
    }
  
    public void setSalary(double salary)
    {
        this.salary = salary;
    }
}"
4925,"Fix the syntax error in the following Java code.
Input: String[] x = {""a"", ""b"", ""c""}

for (int i=0; i<x.lenght; i++) {
System.out.println(x[i]);
}","String[] x = {""a"", ""b"", ""c""};

for (int i=0; i<x.length; i++) {
System.out.println(x[i]);
}","### Instruction: 
 Fix the syntax error in the following Java code. 
 ### Input: String[] x = {""a"", ""b"", ""c""}

for (int i=0; i<x.lenght; i++) {
System.out.println(x[i]);
} 
 ### Response:
 String[] x = {""a"", ""b"", ""c""};

for (int i=0; i<x.length; i++) {
System.out.println(x[i]);
}"
4950,"Create a Java program to print out the number of times a string appears in an array.
Input: array = [“Apple”, “Orange”, “Apple”, “Banana”]
String = “Apple”","public class Main {
    public static void main(String[] args) {
        String str = ""Apple"";
        String[] array = {""Apple"", ""Orange"", ""Apple"", ""Banana""};
        int count = 0;
        for(int i=0; i<array.length; i++) {
            if(array[i].equals(str)) {
                count++;
            }
        }
        System.out.println(""Number of times ""+str+"" appears in the array = ""+count);
    }
}","### Instruction: 
 Create a Java program to print out the number of times a string appears in an array. 
 ### Input: array = [“Apple”, “Orange”, “Apple”, “Banana”]
String = “Apple” 
 ### Response:
 public class Main {
    public static void main(String[] args) {
        String str = ""Apple"";
        String[] array = {""Apple"", ""Orange"", ""Apple"", ""Banana""};
        int count = 0;
        for(int i=0; i<array.length; i++) {
            if(array[i].equals(str)) {
                count++;
            }
        }
        System.out.println(""Number of times ""+str+"" appears in the array = ""+count);
    }
}"
4957,"Create a hashmap in Java with the following key-value pairs: ""Car"" -> ""Honda"", ""Flower"" -> ""Rose"".","HashMap<String, String> map = new HashMap<>();
map.put(""Car"", ""Honda"");
map.put(""Flower"", ""Rose"");","### Instruction: 
 Create a hashmap in Java with the following key-value pairs: ""Car"" -> ""Honda"", ""Flower"" -> ""Rose"". 
 ### Response:
 HashMap<String, String> map = new HashMap<>();
map.put(""Car"", ""Honda"");
map.put(""Flower"", ""Rose"");"
4960,"Create an array in Java and add the following elements: 5, 7, 3.","int[] arr = {5, 7, 3};","### Instruction: 
 Create an array in Java and add the following elements: 5, 7, 3. 
 ### Response:
 int[] arr = {5, 7, 3};"
4963,"Fix the following Java code by adding a missing semicolon.
public static void main(String[] args) {
System.out.println(""Hello World"")","public static void main(String[] args) {
System.out.println(""Hello World"");
}","### Instruction: 
 Fix the following Java code by adding a missing semicolon.
public static void main(String[] args) {
System.out.println(""Hello World"") 
 ### Response:
 public static void main(String[] args) {
System.out.println(""Hello World"");
}"
4965,"Compile the following Java code and explain the output.
class Test {
 static int x = 8;
 static int y = 3;
 static int z;
 static void addition() {
 z = x + y;
 System.out.println(""The sum: "" + z);
 }","// Output when compiled:
The sum: 11

// Explanation: The above code assigns 'x' to 8, 'y' to 3 and 'z' to the sum of 'x' and 'y' (11). The program then prints out the value of 'z' which is 11.","### Instruction: 
 Compile the following Java code and explain the output.
class Test {
 static int x = 8;
 static int y = 3;
 static int z;
 static void addition() {
 z = x + y;
 System.out.println(""The sum: "" + z);
 } 
 ### Response:
 // Output when compiled:
The sum: 11

// Explanation: The above code assigns 'x' to 8, 'y' to 3 and 'z' to the sum of 'x' and 'y' (11). The program then prints out the value of 'z' which is 11."
5024,Code an if statement in Java to check if an integer is odd,"if (num % 2 == 1) { 
   // num is odd 
}","### Instruction: 
 Code an if statement in Java to check if an integer is odd 
 ### Response:
 if (num % 2 == 1) { 
   // num is odd 
}"
5030,"Code a for loop in Java to find the maximum value in an array
Input: int[] arr = {2,5,3,7,1};","int max = arr[0];
for (int i = 0; i < arr.length; i++) {
    if (arr[i] > max) {
        max = arr[i];
    }
}","### Instruction: 
 Code a for loop in Java to find the maximum value in an array 
 ### Input: int[] arr = {2,5,3,7,1}; 
 ### Response:
 int max = arr[0];
for (int i = 0; i < arr.length; i++) {
    if (arr[i] > max) {
        max = arr[i];
    }
}"
5061,Write a function in Java to remove duplicates from a list of Strings.,"public List<String> removeDuplicates(List<String> inputList) { 
  
   // Create a new HashSet 
   HashSet<String> hs = new HashSet<>(); 
  
   // Add the contents of inputList to the HashSet hs 
   // HashSet does not allow duplicates 
   hs.addAll(inputList); 
  
   // Clear inputList 
   inputList.clear(); 
  
   // add the elements of hs to inputList 
   inputList.addAll(hs); 
  
   // return the list 
   return inputList; 
}","### Instruction: 
 Write a function in Java to remove duplicates from a list of Strings. 
 ### Response:
 public List<String> removeDuplicates(List<String> inputList) { 
  
   // Create a new HashSet 
   HashSet<String> hs = new HashSet<>(); 
  
   // Add the contents of inputList to the HashSet hs 
   // HashSet does not allow duplicates 
   hs.addAll(inputList); 
  
   // Clear inputList 
   inputList.clear(); 
  
   // add the elements of hs to inputList 
   inputList.addAll(hs); 
  
   // return the list 
   return inputList; 
}"
5080,"Create a function in Java to take a string and print all words of length n and greater in the string.
Input: String: ""Welcome to the programming world!""
n: 5","public static void printLongWords(String str, int n) { 
    // loop through each character of  
    // input string  
    for (int i = 0; i < str.length(); i++) { 
        // variable to store the current word  
        String word = """";  
  
        // condition to look for words  
        while (i < str.length() && str.charAt(i) != ' ') { 
            word = word + str.charAt(i); 
            i++; 
        } 
        // if the length of current word is less them n  
        // it is not printed  
        if (word.length() >= n) 
            System.out.print(word + "" "");  
    } 
}","### Instruction: 
 Create a function in Java to take a string and print all words of length n and greater in the string. 
 ### Input: String: ""Welcome to the programming world!""
n: 5 
 ### Response:
 public static void printLongWords(String str, int n) { 
    // loop through each character of  
    // input string  
    for (int i = 0; i < str.length(); i++) { 
        // variable to store the current word  
        String word = """";  
  
        // condition to look for words  
        while (i < str.length() && str.charAt(i) != ' ') { 
            word = word + str.charAt(i); 
            i++; 
        } 
        // if the length of current word is less them n  
        // it is not printed  
        if (word.length() >= n) 
            System.out.print(word + "" "");  
    } 
}"
5083,Create an algorithm in Java to calculate the sum of all elements of an array.,"public int calculateSum(int[] arr) { 
  int sum = 0; 
  for (int i = 0; i < arr.length; i++) { 
    sum += arr[i]; 
  } 
  return sum; 
}","### Instruction: 
 Create an algorithm in Java to calculate the sum of all elements of an array. 
 ### Response:
 public int calculateSum(int[] arr) { 
  int sum = 0; 
  for (int i = 0; i < arr.length; i++) { 
    sum += arr[i]; 
  } 
  return sum; 
}"
5118,"Design a class in Java that stores information about a person's name, age, and phone number.","public class Person {
  private String name;
  private int age;
  private String phoneNumber;

  public Person(String name, int age, String phoneNumber) {
    this.name = name;
    this.age = age;
    this.phoneNumber = phoneNumber;
  }

  public String getName() {
    return name;
  }

  public int getAge() {
    return age;
  }

  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setName(String name) {
    this.name = name;
  }

  public void setAge(int age) {
    this.age = age;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

} //end class","### Instruction: 
 Design a class in Java that stores information about a person's name, age, and phone number. 
 ### Response:
 public class Person {
  private String name;
  private int age;
  private String phoneNumber;

  public Person(String name, int age, String phoneNumber) {
    this.name = name;
    this.age = age;
    this.phoneNumber = phoneNumber;
  }

  public String getName() {
    return name;
  }

  public int getAge() {
    return age;
  }

  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setName(String name) {
    this.name = name;
  }

  public void setAge(int age) {
    this.age = age;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

} //end class"
5129,Design a class in Java to represent a bank account.,"public class BankAccount {
 
    private double balance;
 
    public BankAccount(double balance) {
        this.balance = balance;
    }
 
    public void deposit(double depositAmount) {
        balance += depositAmount;
    }
 
    public void withdraw(double withdrawAmount) {
        balance -= withdrawAmount;
    }
 
    public double getBalance() {
        return balance;
    }
 
}","### Instruction: 
 Design a class in Java to represent a bank account. 
 ### Response:
 public class BankAccount {
 
    private double balance;
 
    public BankAccount(double balance) {
        this.balance = balance;
    }
 
    public void deposit(double depositAmount) {
        balance += depositAmount;
    }
 
    public void withdraw(double withdrawAmount) {
        balance -= withdrawAmount;
    }
 
    public double getBalance() {
        return balance;
    }
 
}"
5148,Design a class in Java which allows user to set the value of an Attribute.,"public class MyClass { 
  private int attribute; 

  public void setAttribute(int attribute) { 
    this.attribute = attribute; 
  }
}","### Instruction: 
 Design a class in Java which allows user to set the value of an Attribute. 
 ### Response:
 public class MyClass { 
  private int attribute; 

  public void setAttribute(int attribute) { 
    this.attribute = attribute; 
  }
}"
5170,"Create a program in Java that takes in 2 numbers and swaps them.
Input: int a = 5
int b = 3","int a = 5;
int b = 3;

int temp = a;
a = b;
b = temp;

System.out.println(""a is: "" + a); // Outputs 3
System.out.println(""b is: "" + b); // Outputs 5","### Instruction: 
 Create a program in Java that takes in 2 numbers and swaps them. 
 ### Input: int a = 5
int b = 3 
 ### Response:
 int a = 5;
int b = 3;

int temp = a;
a = b;
b = temp;

System.out.println(""a is: "" + a); // Outputs 3
System.out.println(""b is: "" + b); // Outputs 5"
5179,Create a variable in Java for storing a user's first name.,String firstName;,"### Instruction: 
 Create a variable in Java for storing a user's first name. 
 ### Response:
 String firstName;"
5223,"Modify the following Java code snippet to include an ""else if"" statement.
Input: int val=20;
if (val > 15)
    System.out.println(""val is greater than 15"");","int val=20;
if (val > 15)
    System.out.println(""val is greater than 15"");
else if (val == 15)
    System.out.println(""val is equal to 15"");","### Instruction: 
 Modify the following Java code snippet to include an ""else if"" statement. 
 ### Input: int val=20;
if (val > 15)
    System.out.println(""val is greater than 15""); 
 ### Response:
 int val=20;
if (val > 15)
    System.out.println(""val is greater than 15"");
else if (val == 15)
    System.out.println(""val is equal to 15"");"
5227,Design a class in Java to represent a rectangle and include methods to calculate and return its perimeter and area.,"public class Rectangle {
    private int width;
    private int height;

    public Rectangle(int width, int height) {
        this.width = width;
        this.height = height;
    }

    public int getPerimeter() {
        return 2 * (width + height);
    }

    public int getArea() {
        return width * height;
    }
}","### Instruction: 
 Design a class in Java to represent a rectangle and include methods to calculate and return its perimeter and area. 
 ### Response:
 public class Rectangle {
    private int width;
    private int height;

    public Rectangle(int width, int height) {
        this.width = width;
        this.height = height;
    }

    public int getPerimeter() {
        return 2 * (width + height);
    }

    public int getArea() {
        return width * height;
    }
}"
5229,Generate a valid Java code for a for loop to count from 5 to 10.,"for(int i=5; i<=10; i++) {
    System.out.println(i);
}","### Instruction: 
 Generate a valid Java code for a for loop to count from 5 to 10. 
 ### Response:
 for(int i=5; i<=10; i++) {
    System.out.println(i);
}"
5245,Write a code in Java to print the Fibonacci series till a given number.,"public static void FibonacciSeries(int limit) {
    int prevNum = 0, nextNum = 1;
    for (int i = 0; i < limit; i++) {
        System.out.print(prevNum + "" "");
        int sum = prevNum + nextNum;
        prevNum = nextNum;
        nextNum = sum;
    }
}","### Instruction: 
 Write a code in Java to print the Fibonacci series till a given number. 
 ### Response:
 public static void FibonacciSeries(int limit) {
    int prevNum = 0, nextNum = 1;
    for (int i = 0; i < limit; i++) {
        System.out.print(prevNum + "" "");
        int sum = prevNum + nextNum;
        prevNum = nextNum;
        nextNum = sum;
    }
}"
5278,"Create a Java program that takes an array as argument and then prints out the elements of the array in reversed order.
Input: [1,2,3,4,5]","public class ReverseArray { 
  
    /* Prints the array in reverse order */
    public static void printReversedArray(int arr[]) { 
        int n = arr.length; 
        for (int i=n-1; i>=0; i--) { 
            System.out.print(arr[i] + "" ""); 
        } 
    } 
  
    public static void main(String[] args) {
        int[] array = { 1, 2, 3, 4, 5 }; 
        printReversedArray(array); 
    } 
}","### Instruction: 
 Create a Java program that takes an array as argument and then prints out the elements of the array in reversed order. 
 ### Input: [1,2,3,4,5] 
 ### Response:
 public class ReverseArray { 
  
    /* Prints the array in reverse order */
    public static void printReversedArray(int arr[]) { 
        int n = arr.length; 
        for (int i=n-1; i>=0; i--) { 
            System.out.print(arr[i] + "" ""); 
        } 
    } 
  
    public static void main(String[] args) {
        int[] array = { 1, 2, 3, 4, 5 }; 
        printReversedArray(array); 
    } 
}"
5300,Write a Java code to clone a linked list using iteration.,"public class LinkedListCloneExample {

    static Node head;

    static class Node {
        int data;
        Node next;

        Node(int d) {
            this.data = d;
            this.next = null;
        }
    }

    static Node CloneList(Node node) { 
        Node curr = node; 
        Node next = null; 
        Node temp = null; 

        while (curr != null) { 
            next = curr.next; 

            // Cloned node 
            temp = new Node(curr.data); 

            // Inserting the cloned node 
            // just next to the original node. 
            temp.next = next; 
            curr.next = temp; 

            curr = next; 
        } 

        // Adjusting the original list 
        // to get the cloned list. 
        curr = node; 
        while (curr != null) { 
            next = curr.next; 

            // Just adapting the original 
            // list to the cloned list. 
            curr.next = next.next; 

            curr = next.next; 
        } 

        return node; 
    } 
    
    static void printList(Node node) { 
        while (node != null) { 
            System.out.print(node.data + "" ""); 
            node = node.next; 
        } 
    } 

    public static void main(String[] args) { 
        head = new Node(1); 
        head.next = new Node(2); 
        head.next.next = new Node(3); 
        head.next.next.next = new Node(4); 
  
        System.out.println(""Linked List original: ""); 
        printList(head); 
  
        System.out.println(""\nCloned Linked List: ""); 
        Node cloned_list = CloneList(head); 
        printList(cloned_list); 
    }","### Instruction: 
 Write a Java code to clone a linked list using iteration. 
 ### Response:
 public class LinkedListCloneExample {

    static Node head;

    static class Node {
        int data;
        Node next;

        Node(int d) {
            this.data = d;
            this.next = null;
        }
    }

    static Node CloneList(Node node) { 
        Node curr = node; 
        Node next = null; 
        Node temp = null; 

        while (curr != null) { 
            next = curr.next; 

            // Cloned node 
            temp = new Node(curr.data); 

            // Inserting the cloned node 
            // just next to the original node. 
            temp.next = next; 
            curr.next = temp; 

            curr = next; 
        } 

        // Adjusting the original list 
        // to get the cloned list. 
        curr = node; 
        while (curr != null) { 
            next = curr.next; 

            // Just adapting the original 
            // list to the cloned list. 
            curr.next = next.next; 

            curr = next.next; 
        } 

        return node; 
    } 
    
    static void printList(Node node) { 
        while (node != null) { 
            System.out.print(node.data + "" ""); 
            node = node.next; 
        } 
    } 

    public static void main(String[] args) { 
        head = new Node(1); 
        head.next = new Node(2); 
        head.next.next = new Node(3); 
        head.next.next.next = new Node(4); 
  
        System.out.println(""Linked List original: ""); 
        printList(head); 
  
        System.out.println(""\nCloned Linked List: ""); 
        Node cloned_list = CloneList(head); 
        printList(cloned_list); 
    }"
5355,Write a Java code to generate a Fibonacci number at a given index.,"public class Fibonacci {

  public static int getFibonacciNumber(int index) {
    // base cases
    if (index == 0) {
      return 0;
    }
    if (index == 1 || index == 2) {
      return 1;
    }
    // recursive case
    return getFibonacciNumber(index - 1) + getFibonacciNumber(index - 2);
  }
}","### Instruction: 
 Write a Java code to generate a Fibonacci number at a given index. 
 ### Response:
 public class Fibonacci {

  public static int getFibonacciNumber(int index) {
    // base cases
    if (index == 0) {
      return 0;
    }
    if (index == 1 || index == 2) {
      return 1;
    }
    // recursive case
    return getFibonacciNumber(index - 1) + getFibonacciNumber(index - 2);
  }
}"
5378,"Come up with Java code to find the square root of a given number.
Input: 9","public double squareRoot(double x) {
    double start = 0;
    double end = x;
    double precision = 0.00001;

    while (end - start > precision) {
        double mid = (start + end) / 2;
        double midSqr = mid * mid;

        if (midSqr > x) {
            end = mid;
        } else {
            start = mid;
        }
    }
    return (start + end) / 2;
}","### Instruction: 
 Come up with Java code to find the square root of a given number. 
 ### Input: 9 
 ### Response:
 public double squareRoot(double x) {
    double start = 0;
    double end = x;
    double precision = 0.00001;

    while (end - start > precision) {
        double mid = (start + end) / 2;
        double midSqr = mid * mid;

        if (midSqr > x) {
            end = mid;
        } else {
            start = mid;
        }
    }
    return (start + end) / 2;
}"
5385,"Complete the following Java code to sort a list of integers.
Input: List<Integer> list = Arrays.asList(5, 2, 8, 1);

// Code to sort","List<Integer> list = Arrays.asList(5, 2, 8, 1);

Collections.sort(list);","### Instruction: 
 Complete the following Java code to sort a list of integers. 
 ### Input: List<Integer> list = Arrays.asList(5, 2, 8, 1);

// Code to sort 
 ### Response:
 List<Integer> list = Arrays.asList(5, 2, 8, 1);

Collections.sort(list);"
5404,"Write a Java program that finds the first 5 prime numbers, starting from 2.","public class PrimeFinder {
 
    public static void main(String[] args) { 
        int count = 0;
        int num = 1;
 
        while(count < 5) {
            num = num + 1;
            if (isPrime(num)) {
                System.out.println(num);
                count++;
            }
        }
    }
 
    public static boolean isPrime(int n) {
        for (int i = 2; i <= Math.sqrt(n); i++) {
            if (n % i == 0) {
                return false;
            }
        }
        return true;
    }
}","### Instruction: 
 Write a Java program that finds the first 5 prime numbers, starting from 2. 
 ### Response:
 public class PrimeFinder {
 
    public static void main(String[] args) { 
        int count = 0;
        int num = 1;
 
        while(count < 5) {
            num = num + 1;
            if (isPrime(num)) {
                System.out.println(num);
                count++;
            }
        }
    }
 
    public static boolean isPrime(int n) {
        for (int i = 2; i <= Math.sqrt(n); i++) {
            if (n % i == 0) {
                return false;
            }
        }
        return true;
    }
}"
5432,"Create a Java program that takes an array of six elements and prints out the sum of the three largest values.
Input: [3, 8, 4, 16, 1, 7]","public class Main {
  public static void main(String[] args) {
    int[] arr = {3, 8, 4, 16, 1, 7};
    int sum = 0;
    int largest1 = arr[0];
    int largest2 = 0;
    int largest3 = 0;
    for (int i = 1; i < arr.length; i++) {
      if (arr[i] > largest1) {
        largest3 = largest2;
        largest2 = largest1;
        largest1 = arr[i];
      } else if (arr[i] > largest2) {
        largest3 = largest2;
        largest2 = arr[i];
      } else if (arr[i] > largest3) {
[        largest3 = arr[i];
      }
    }
    sum = largest1 + largest2 + largest3;
    System.out.println(""The sum of the three largest values is: "" + sum);
  }
}","### Instruction: 
 Create a Java program that takes an array of six elements and prints out the sum of the three largest values. 
 ### Input: [3, 8, 4, 16, 1, 7] 
 ### Response:
 public class Main {
  public static void main(String[] args) {
    int[] arr = {3, 8, 4, 16, 1, 7};
    int sum = 0;
    int largest1 = arr[0];
    int largest2 = 0;
    int largest3 = 0;
    for (int i = 1; i < arr.length; i++) {
      if (arr[i] > largest1) {
        largest3 = largest2;
        largest2 = largest1;
        largest1 = arr[i];
      } else if (arr[i] > largest2) {
        largest3 = largest2;
        largest2 = arr[i];
      } else if (arr[i] > largest3) {
[        largest3 = arr[i];
      }
    }
    sum = largest1 + largest2 + largest3;
    System.out.println(""The sum of the three largest values is: "" + sum);
  }
}"
5463,"Create a program in Java to print the Fibonacci number at the end of the given range.
Input: 10","public class Fibonacci {
    public static void main(String args[]) {
        int n = 10;
        int a = 0, b = 1, c;
        if (n == 1)
            System.out.println(""Fibonacci of "" + n + "" is "" + a);
        else {
            for (int i = 2; i <= n; i++) {
                c = a + b;
                a = b;
                b = c;
            }
            System.out.println(""Fibonacci of "" + n + "" is "" + b);
        }
    }
}","### Instruction: 
 Create a program in Java to print the Fibonacci number at the end of the given range. 
 ### Input: 10 
 ### Response:
 public class Fibonacci {
    public static void main(String args[]) {
        int n = 10;
        int a = 0, b = 1, c;
        if (n == 1)
            System.out.println(""Fibonacci of "" + n + "" is "" + a);
        else {
            for (int i = 2; i <= n; i++) {
                c = a + b;
                a = b;
                b = c;
            }
            System.out.println(""Fibonacci of "" + n + "" is "" + b);
        }
    }
}"
5512,Write a Java program to print the nth number in the Fibonacci sequence.,"public class FibonacciExample1{
    
    public static void main(String args[]) {
        int n = 18, t1 = 0, t2 = 1;
        System.out.print(""First "" + n + "" terms: "");
        
        for (int i = 1; i <= n; ++i)
        {
            System.out.print(t1 + "" + "");
            
            int sum = t1 + t2;
            t1 = t2;
            t2 = sum;
        }
    }
}","### Instruction: 
 Write a Java program to print the nth number in the Fibonacci sequence. 
 ### Response:
 public class FibonacciExample1{
    
    public static void main(String args[]) {
        int n = 18, t1 = 0, t2 = 1;
        System.out.print(""First "" + n + "" terms: "");
        
        for (int i = 1; i <= n; ++i)
        {
            System.out.print(t1 + "" + "");
            
            int sum = t1 + t2;
            t1 = t2;
            t2 = sum;
        }
    }
}"
5529,"Construct an array in Java containing the elements 3, 5, 7, 9.","int[] arr = {3, 5, 7, 9};","### Instruction: 
 Construct an array in Java containing the elements 3, 5, 7, 9. 
 ### Response:
 int[] arr = {3, 5, 7, 9};"
5540,"Write the equivalent Java code for the following Python code.
Input: x = [1, 2, 3, 4]
for x in x:
   print(x)","int[] x = {1, 2, 3, 4}; 
for (int i = 0; i < x.length; i++) {
    System.out.println(x[i]);
}","### Instruction: 
 Write the equivalent Java code for the following Python code. 
 ### Input: x = [1, 2, 3, 4]
for x in x:
   print(x) 
 ### Response:
 int[] x = {1, 2, 3, 4}; 
for (int i = 0; i < x.length; i++) {
    System.out.println(x[i]);
}"
5549,"Generate a class in Java that validates if a given number is a prime or not.
Input: Number: 13","public class PrimeNumberValidator {

    public static boolean validate(int number) {
        if (number < 2) {
            return false;
        }
        for (int i = 2; i < Math.sqrt(number); i++) {
            if (number % i == 0) {
                return false;
            }
        }
        return true;
    }
}","### Instruction: 
 Generate a class in Java that validates if a given number is a prime or not. 
 ### Input: Number: 13 
 ### Response:
 public class PrimeNumberValidator {

    public static boolean validate(int number) {
        if (number < 2) {
            return false;
        }
        for (int i = 2; i < Math.sqrt(number); i++) {
            if (number % i == 0) {
                return false;
            }
        }
        return true;
    }
}"
5559,"Replace the '?' with the correct Java keyword
Input: public ? myMethod(int a, int b) {
    // ...
}","public static myMethod(int a, int b) {
    // ...
}","### Instruction: 
 Replace the '?' with the correct Java keyword 
 ### Input: public ? myMethod(int a, int b) {
    // ...
} 
 ### Response:
 public static myMethod(int a, int b) {
    // ...
}"
5571,"Generate a Java program to perform the following task.
Input: Add two integers a and b and print the sum","public class Sum {
 
    public static void main(String[] args) {
        int a = 15;
        int b = 10;
        int sum = a + b;
        System.out.println(""Sum of a and b is "" + sum);
    }
}","### Instruction: 
 Generate a Java program to perform the following task. 
 ### Input: Add two integers a and b and print the sum 
 ### Response:
 public class Sum {
 
    public static void main(String[] args) {
        int a = 15;
        int b = 10;
        int sum = a + b;
        System.out.println(""Sum of a and b is "" + sum);
    }
}"
5603,"Write Java code to search for the given element in the list and return its index if it exists.
Input: list = [4, 8, 15, 16, 23, 42], element = 15","public int findElement (int[] list, int element) {
  for (int i = 0; i < list.length; i++) {
    if (list[i] == element)
      return i;
  }
  return -1;
}","### Instruction: 
 Write Java code to search for the given element in the list and return its index if it exists. 
 ### Input: list = [4, 8, 15, 16, 23, 42], element = 15 
 ### Response:
 public int findElement (int[] list, int element) {
  for (int i = 0; i < list.length; i++) {
    if (list[i] == element)
      return i;
  }
  return -1;
}"
5624,Write a Java program to calculate the sum of the series 1^3+2^3+3^3+.....+n^3,"public class SumOfSeries {
  
    static int calculateSum(int lastNumber) { 
        int sum = 0; 
  
        for (int i = 1; i <= lastNumber; i++) {
            sum = sum + (int)Math.pow(i, 3); 
        }
  
        return sum; 
    } 
  
    public static void main(String[] args) { 
        int lastNumber = 4; 
        System.out.println(calculateSum(lastNumber)); 
    } 
} 
// Output: 100","### Instruction: 
 Write a Java program to calculate the sum of the series 1^3+2^3+3^3+.....+n^3 
 ### Response:
 public class SumOfSeries {
  
    static int calculateSum(int lastNumber) { 
        int sum = 0; 
  
        for (int i = 1; i <= lastNumber; i++) {
            sum = sum + (int)Math.pow(i, 3); 
        }
  
        return sum; 
    } 
  
    public static void main(String[] args) { 
        int lastNumber = 4; 
        System.out.println(calculateSum(lastNumber)); 
    } 
} 
// Output: 100"
5634,"Summarize the following Java code.
Input: public class MyClass {
  public static void main(String[] args) {
    int x = 10;
    int y = 20;
    int sum = x + y;
    System.out.println(""The sum of x and y is: "" + sum);
  }
}","The given Java code declares two int variables (x and y), adds them and prints the sum of the two variables to the console.","### Instruction: 
 Summarize the following Java code. 
 ### Input: public class MyClass {
  public static void main(String[] args) {
    int x = 10;
    int y = 20;
    int sum = x + y;
    System.out.println(""The sum of x and y is: "" + sum);
  }
} 
 ### Response:
 The given Java code declares two int variables (x and y), adds them and prints the sum of the two variables to the console."
5646,"Write a Java program to implement a binary search on a sorted array of integers.
Input: [1, 3, 4, 6, 8, 9], element=6","// Java Program for Binary Search 
public class BinarySearchExample { 
    // Returns index of x if it is present in arr[], else return -1 
    int binarySearch(int arr[], int x) 
    { 
        int low = 0, high = arr.length - 1; 
        while (low <= high) { 
            int mid = low + (high - low) / 2; 
              
            // Check if x is present at mid 
            if (arr[mid] == x) 
                return mid; 
  
            // If x greater, ignore left half 
            if (arr[mid] < x) 
                low = mid + 1; 
  
            // If x is smaller, ignore right half 
            else
                high = mid - 1; 
        } 
  
        // if we reach here, then element was not present 
        return -1; 
    } 
  
    public static void main(String args[]) 
    { 
        BinarySearchExample ob = new BinarySearchExample(); 
        int arr[] = {1, 3, 4, 6, 8, 9}; 
        int x = 6; 
        int result = ob.binarySearch(arr, x); 
        if (result == -1) 
            System.out.println(""Element not present""); 
        else
            System.out.println(""Element found at index "" + result); 
    } 
}","### Instruction: 
 Write a Java program to implement a binary search on a sorted array of integers. 
 ### Input: [1, 3, 4, 6, 8, 9], element=6 
 ### Response:
 // Java Program for Binary Search 
public class BinarySearchExample { 
    // Returns index of x if it is present in arr[], else return -1 
    int binarySearch(int arr[], int x) 
    { 
        int low = 0, high = arr.length - 1; 
        while (low <= high) { 
            int mid = low + (high - low) / 2; 
              
            // Check if x is present at mid 
            if (arr[mid] == x) 
                return mid; 
  
            // If x greater, ignore left half 
            if (arr[mid] < x) 
                low = mid + 1; 
  
            // If x is smaller, ignore right half 
            else
                high = mid - 1; 
        } 
  
        // if we reach here, then element was not present 
        return -1; 
    } 
  
    public static void main(String args[]) 
    { 
        BinarySearchExample ob = new BinarySearchExample(); 
        int arr[] = {1, 3, 4, 6, 8, 9}; 
        int x = 6; 
        int result = ob.binarySearch(arr, x); 
        if (result == -1) 
            System.out.println(""Element not present""); 
        else
            System.out.println(""Element found at index "" + result); 
    } 
}"
5672,"Debug a Java program to correct a compile-time error.
Input: public class Debug {
    public static void main(String[] args) {
        ArrayList<String> list = new ArrayList<String>();
        list.add(""Hello"");
        list.add(""World"");
    }
    System.out.println(list);
}","public class Debug {
    public static void main(String[] args) {
        ArrayList<String> list = new ArrayList<String>();
        list.add(""Hello"");
        list.add(""World"");
        for(String str : list){
            System.out.println(str);
        }
    }
}","### Instruction: 
 Debug a Java program to correct a compile-time error. 
 ### Input: public class Debug {
    public static void main(String[] args) {
        ArrayList<String> list = new ArrayList<String>();
        list.add(""Hello"");
        list.add(""World"");
    }
    System.out.println(list);
} 
 ### Response:
 public class Debug {
    public static void main(String[] args) {
        ArrayList<String> list = new ArrayList<String>();
        list.add(""Hello"");
        list.add(""World"");
        for(String str : list){
            System.out.println(str);
        }
    }
}"
5739,"Create an if-else statement in Java that prints ""Yes!"" if an integer is 5 and prints ""No!"" if an integer is not 5.","if (int == 5) {
 System.out.println(""Yes!"");
}
else {
 System.out.println(""No!"");
}","### Instruction: 
 Create an if-else statement in Java that prints ""Yes!"" if an integer is 5 and prints ""No!"" if an integer is not 5. 
 ### Response:
 if (int == 5) {
 System.out.println(""Yes!"");
}
else {
 System.out.println(""No!"");
}"
5744,"Write an if-else statement in Java that checks if a given number is divisible by 3 and prints ""Divisible by 3"" if true, otherwise ""Not divisible"".","if (num % 3 == 0) {
 System.out.println(""Divisible by 3"");
}
else {
 System.out.println(""Not divisible"");
}","### Instruction: 
 Write an if-else statement in Java that checks if a given number is divisible by 3 and prints ""Divisible by 3"" if true, otherwise ""Not divisible"". 
 ### Response:
 if (num % 3 == 0) {
 System.out.println(""Divisible by 3"");
}
else {
 System.out.println(""Not divisible"");
}"
5749,Create a class in Java named 'Circle' that has an attribute named 'radius' and a method named 'getArea' to calculate the area of a circle.,"class Circle {
  double radius;
 
  double getArea() {
    return Math.PI * Math.pow(radius, 2);
  }
}","### Instruction: 
 Create a class in Java named 'Circle' that has an attribute named 'radius' and a method named 'getArea' to calculate the area of a circle. 
 ### Response:
 class Circle {
  double radius;
 
  double getArea() {
    return Math.PI * Math.pow(radius, 2);
  }
}"
5757,"Develop an algorithm in Java for finding all the possible combinations of a given list of numbers.
Input: lst = [1, 2, 3, 4]","public class Combination { 
  
    static void combinationUtil(int arr[], int n, int r, 
                                int index, int data[], int i) 
    { 
        // Current combination is ready 
        // to be printed, print it 
        if (index == r) { 
            for (int j = 0; j < r; j++) 
                System.out.print(data[j] + "" ""); 
            System.out.println(""""); 
            return; 
        } 
  
        // When no more elements are there to put in data[] 
        if (i >= n) 
            return; 
  
        // Current is included, put next at next 
        // location 
        data[index] = arr[i]; 
        combinationUtil(arr, n, r, index + 1, 
                        data, i + 1); 
  
        // Current is excluded, replace it with 
        // next (Note that i+1 is passed, but 
        // index is not changed) 
        combinationUtil(arr, n, r, index, data, i + 1); 
    } 
  
    // Print all combinations of given array 
    static void printCombination(int arr[], int n, int r) 
    { 
        // A temporary array to store all combination 
        // one by one 
        int data[] = new int[r]; 
  
        // Print all combination using temporary 
        // array 'data[]' 
        combinationUtil(arr, n, r, 0, data, 0); 
    } 
  
    // Driver code 
    public static void main(String[] args) 
    { 
        int arr[] = { 1, 2, 3, 4 }; 
        int r = arr.length; 
        int n = arr.length; 
        printCombination(arr, n, r); 
    } 
}","### Instruction: 
 Develop an algorithm in Java for finding all the possible combinations of a given list of numbers. 
 ### Input: lst = [1, 2, 3, 4] 
 ### Response:
 public class Combination { 
  
    static void combinationUtil(int arr[], int n, int r, 
                                int index, int data[], int i) 
    { 
        // Current combination is ready 
        // to be printed, print it 
        if (index == r) { 
            for (int j = 0; j < r; j++) 
                System.out.print(data[j] + "" ""); 
            System.out.println(""""); 
            return; 
        } 
  
        // When no more elements are there to put in data[] 
        if (i >= n) 
            return; 
  
        // Current is included, put next at next 
        // location 
        data[index] = arr[i]; 
        combinationUtil(arr, n, r, index + 1, 
                        data, i + 1); 
  
        // Current is excluded, replace it with 
        // next (Note that i+1 is passed, but 
        // index is not changed) 
        combinationUtil(arr, n, r, index, data, i + 1); 
    } 
  
    // Print all combinations of given array 
    static void printCombination(int arr[], int n, int r) 
    { 
        // A temporary array to store all combination 
        // one by one 
        int data[] = new int[r]; 
  
        // Print all combination using temporary 
        // array 'data[]' 
        combinationUtil(arr, n, r, 0, data, 0); 
    } 
  
    // Driver code 
    public static void main(String[] args) 
    { 
        int arr[] = { 1, 2, 3, 4 }; 
        int r = arr.length; 
        int n = arr.length; 
        printCombination(arr, n, r); 
    } 
}"
5761,"Rewrite the following Java code using a for loop instead of a for-each loop.
Input: List<Integer> someList = new ArrayList<>();
for (Integer i : someList) {
    System.out.println(i);
}","List<Integer> someList = new ArrayList<>();
for (int i=0; i < someList.size(); i++) { 
    System.out.println(someList.get(i));
}","### Instruction: 
 Rewrite the following Java code using a for loop instead of a for-each loop. 
 ### Input: List<Integer> someList = new ArrayList<>();
for (Integer i : someList) {
    System.out.println(i);
} 
 ### Response:
 List<Integer> someList = new ArrayList<>();
for (int i=0; i < someList.size(); i++) { 
    System.out.println(someList.get(i));
}"
5773,Implement a Java class that encapsulates a basic for loop.,"public class loop {
    public void forLoop(int start, int end){
        for(int i=start; i<end; i++){
            System.out.println(i);
        }
    }
}","### Instruction: 
 Implement a Java class that encapsulates a basic for loop. 
 ### Response:
 public class loop {
    public void forLoop(int start, int end){
        for(int i=start; i<end; i++){
            System.out.println(i);
        }
    }
}"
5779,Write Java code to calculate the area of a circle with radius 12 cm.,"public class AreaOfCircle {
   public static void main(String[] args) {
      double radius = 12.0;
      double area = Math.PI * Math.pow(radius, 2);
      System.out.println(""Area of circle is: "" + area + "" cm²"");
   }
}","### Instruction: 
 Write Java code to calculate the area of a circle with radius 12 cm. 
 ### Response:
 public class AreaOfCircle {
   public static void main(String[] args) {
      double radius = 12.0;
      double area = Math.PI * Math.pow(radius, 2);
      System.out.println(""Area of circle is: "" + area + "" cm²"");
   }
}"
5789,Write Java code to generate random numbers between 0 and 10.,"Random rand = new Random(); 
  
// Generate random integers in range 0 to 10 
int rand_int1 = rand.nextInt(11);","### Instruction: 
 Write Java code to generate random numbers between 0 and 10. 
 ### Response:
 Random rand = new Random(); 
  
// Generate random integers in range 0 to 10 
int rand_int1 = rand.nextInt(11);"
5793,Create a Java class for car objects.,"public class Car {

    private String make;
    private String model;
    private int year;

    public Car(String make, String model, int year) {
        this.make = make;
        this.model = model;
        this.year = year;
    }

    public String getMake() {
        return make;
    }

    public String getModel() {
        return model;
    }

    public int getYear() {
        return year; 
    }

    public void setMake(String make) {
        this.make = make;
    }

    public void setModel(String model) {
        this.model = model;
    }

    public void setYear(int year) {
        this.year = year;
    }

}","### Instruction: 
 Create a Java class for car objects. 
 ### Response:
 public class Car {

    private String make;
    private String model;
    private int year;

    public Car(String make, String model, int year) {
        this.make = make;
        this.model = model;
        this.year = year;
    }

    public String getMake() {
        return make;
    }

    public String getModel() {
        return model;
    }

    public int getYear() {
        return year; 
    }

    public void setMake(String make) {
        this.make = make;
    }

    public void setModel(String model) {
        this.model = model;
    }

    public void setYear(int year) {
        this.year = year;
    }

}"
5837,Suggest an API call in Java to generate a random number,"int randomNum = ThreadLocalRandom.current().nextInt(0, MAX_VALUE);","### Instruction: 
 Suggest an API call in Java to generate a random number 
 ### Response:
 int randomNum = ThreadLocalRandom.current().nextInt(0, MAX_VALUE);"
5841,Generate a code in Java to loop through an array.,"for (int i = 0; i < array.length; i++) { 
     //do something 
}","### Instruction: 
 Generate a code in Java to loop through an array. 
 ### Response:
 for (int i = 0; i < array.length; i++) { 
     //do something 
}"
5881,"Create a Java program that prints out the Fibonacci series within a given range
Input: Range = (5, 15)","public class FibonacciRange {
	 
	public static void main(String args[]) {
		// Set the range
		int lowerLimit=5, upperLimit=15;
		
		// Print the fibonacci series
		for (int number = lowerLimit; number <= upperLimit; number++) {
			System.out.print(fibonacciSeries(number) +"" "");
		}
	}
 
	// Generates the fibonacci series
	public static int fibonacciSeries(int fibonacciNumber) {
		if (fibonacciNumber == 1 || fibonacciNumber == 2) {
			return 1;
		}
		return fibonacciSeries(fibonacciNumber - 1) + fibonacciSeries(fibonacciNumber - 2);
	}
}","### Instruction: 
 Create a Java program that prints out the Fibonacci series within a given range 
 ### Input: Range = (5, 15) 
 ### Response:
 public class FibonacciRange {
	 
	public static void main(String args[]) {
		// Set the range
		int lowerLimit=5, upperLimit=15;
		
		// Print the fibonacci series
		for (int number = lowerLimit; number <= upperLimit; number++) {
			System.out.print(fibonacciSeries(number) +"" "");
		}
	}
 
	// Generates the fibonacci series
	public static int fibonacciSeries(int fibonacciNumber) {
		if (fibonacciNumber == 1 || fibonacciNumber == 2) {
			return 1;
		}
		return fibonacciSeries(fibonacciNumber - 1) + fibonacciSeries(fibonacciNumber - 2);
	}
}"
5911,"Compile and run the following Java code.
Input: public class Main {
    public static void main(String[] args) {
        System.out.println(""Hello, world!"");
    }
}","<noinput>
Output:
Hello, world!","### Instruction: 
 Compile and run the following Java code. 
 ### Input: public class Main {
    public static void main(String[] args) {
        System.out.println(""Hello, world!"");
    }
} 
 ### Response:
 <noinput>
Output:
Hello, world!"
6039,"Rewrite the following Java loop as a compact list comprehension.
Input: int[] array = {1, 2, 3, 4, 5};
int[] array2 = new int[array.length];
for(int i=0; i<array.length; i++) {
 array2[i] = array[i] + 1;
}","int[] array = {1, 2, 3, 4, 5};
int[] array2 = Arrays.stream(array).map(x -> x + 1).toArray();","### Instruction: 
 Rewrite the following Java loop as a compact list comprehension. 
 ### Input: int[] array = {1, 2, 3, 4, 5};
int[] array2 = new int[array.length];
for(int i=0; i<array.length; i++) {
 array2[i] = array[i] + 1;
} 
 ### Response:
 int[] array = {1, 2, 3, 4, 5};
int[] array2 = Arrays.stream(array).map(x -> x + 1).toArray();"
6040,"Identify the variables and operators in the following Java code.
Input: int a = 3 + 4;
int b = a * 2;","Variables:
a, b

Operators:
+, *","### Instruction: 
 Identify the variables and operators in the following Java code. 
 ### Input: int a = 3 + 4;
int b = a * 2; 
 ### Response:
 Variables:
a, b

Operators:
+, *"
6124,"Generate a for loop in Java for printing the squares of each number in a given array.
Input: int[] array = {4, 2, 6, 8};","for(int x : array) {
    System.out.println(""Square of "" + x + "" is "" + (x * x));
}","### Instruction: 
 Generate a for loop in Java for printing the squares of each number in a given array. 
 ### Input: int[] array = {4, 2, 6, 8}; 
 ### Response:
 for(int x : array) {
    System.out.println(""Square of "" + x + "" is "" + (x * x));
}"
6136,"Create a class Person in Java that stores a person's name, email, gender, and age.","public class Person {
String name;
String email;
String gender;
int age;

public Person(String name, String email, String gender, int age) {
  this.name = name;
  this.email = email;
  this.gender = gender;
  this.age = age; 
}
 
public String getName() {
  return name;
}

public String getEmail() {
  return email;
}

public String getGender() {
  return gender;
}

public int getAge() {
  return age;
}

public void setName(String name) {
  this.name = name;
}
 
public void setEmail(String email) {
  this.email = email;
}
 
public void setGender(String gender) {
  this.gender = gender;
}

public void setAge(int age) {
  this.age = age;
}

}","### Instruction: 
 Create a class Person in Java that stores a person's name, email, gender, and age. 
 ### Response:
 public class Person {
String name;
String email;
String gender;
int age;

public Person(String name, String email, String gender, int age) {
  this.name = name;
  this.email = email;
  this.gender = gender;
  this.age = age; 
}
 
public String getName() {
  return name;
}

public String getEmail() {
  return email;
}

public String getGender() {
  return gender;
}

public int getAge() {
  return age;
}

public void setName(String name) {
  this.name = name;
}
 
public void setEmail(String email) {
  this.email = email;
}
 
public void setGender(String gender) {
  this.gender = gender;
}

public void setAge(int age) {
  this.age = age;
}

}"
6186,"Modify the following Java code to reverse a given string.
Input: public class SimpleStringReverser {
    public static String reverse(String str) {
        String result = """";","public class SimpleStringReverser {
    public static String reverse(String str) {
        String result = """";
        for(int i = str.length() - 1; i >= 0; i--) {
            result += str.charAt(i);
        }
        return result;
    }
}","### Instruction: 
 Modify the following Java code to reverse a given string. 
 ### Input: public class SimpleStringReverser {
    public static String reverse(String str) {
        String result = """"; 
 ### Response:
 public class SimpleStringReverser {
    public static String reverse(String str) {
        String result = """";
        for(int i = str.length() - 1; i >= 0; i--) {
            result += str.charAt(i);
        }
        return result;
    }
}"
6188,Come up with a Java switch statement which will print a different number for various states of a given boolean.,"public class ConditionPrinter {
    public static void printNumberForCondition(boolean condition) {
        switch (condition) {
          case true:
            System.out.println(1);
            break;
          case false:
            System.out.println(2);
            break;
        }
    }
}","### Instruction: 
 Come up with a Java switch statement which will print a different number for various states of a given boolean. 
 ### Response:
 public class ConditionPrinter {
    public static void printNumberForCondition(boolean condition) {
        switch (condition) {
          case true:
            System.out.println(1);
            break;
          case false:
            System.out.println(2);
            break;
        }
    }
}"
6192,"How would you modify the following Java code to print the first 5 numbers of the Fibonacci sequence?
Input: public class FibonacciPrinter {
    public static void printNumbers() {
        System.out.println(""..."");
    }
}","public class FibonacciPrinter {
    public static void printNumbers() {
        int n1=0, n2=1, n3, i, count=5;
        System.out.print(n1+"" ""+n2);

        for(i=2;i<count;++i)
        {    
            n3=n1+n2;    
            System.out.print("" ""+n3);    
            n1=n2;    
            n2=n3;    
        }    
    }
}","### Instruction: 
 How would you modify the following Java code to print the first 5 numbers of the Fibonacci sequence? 
 ### Input: public class FibonacciPrinter {
    public static void printNumbers() {
        System.out.println(""..."");
    }
} 
 ### Response:
 public class FibonacciPrinter {
    public static void printNumbers() {
        int n1=0, n2=1, n3, i, count=5;
        System.out.print(n1+"" ""+n2);

        for(i=2;i<count;++i)
        {    
            n3=n1+n2;    
            System.out.print("" ""+n3);    
            n1=n2;    
            n2=n3;    
        }    
    }
}"
6195,Create a Java program to validate a credit card number using Luhn's algorithm.,"""""""
Validate a credit card number using Luhn's algorithm.
""""""

import java.util.Arrays;

public class Luhn {

   public static boolean isValidCard(String cardNumber) {

        if (cardNumber == null) {
            return false;
        }

        char checkDigit = cardNumber.charAt(cardNumber.length() - 1);
        String digit = calculateCheckDigit(cardNumber.substring(0, cardNumber.length() - 1));
        return checkDigit == digit.charAt(0);
    }

    public static String calculateCheckDigit(String digit) {
        if (digit == null) {
            return null;
        }

        String reversDigit = new StringBuilder(digit).reverse().toString();
        int[] digits = new int[reversDigit.length()];
        for (int i = 0; i < reversDigit.length(); i++) {
            digits[i] = Character.getNumericValue(reversDigit.charAt(i));
        }
        for (int i = 1; i < digits.length; i = i + 2) {
            digits[i] = 2 * digits[i];
            if (digits[i] > 9) {
                digits[i] = digits[i] - 9;
            }
        }
        int sum = Arrays.stream(digits).sum();
        return new Integer(10 - (sum % 10)).toString();
    }
}","### Instruction: 
 Create a Java program to validate a credit card number using Luhn's algorithm. 
 ### Response:
 """"""
Validate a credit card number using Luhn's algorithm.
""""""

import java.util.Arrays;

public class Luhn {

   public static boolean isValidCard(String cardNumber) {

        if (cardNumber == null) {
            return false;
        }

        char checkDigit = cardNumber.charAt(cardNumber.length() - 1);
        String digit = calculateCheckDigit(cardNumber.substring(0, cardNumber.length() - 1));
        return checkDigit == digit.charAt(0);
    }

    public static String calculateCheckDigit(String digit) {
        if (digit == null) {
            return null;
        }

        String reversDigit = new StringBuilder(digit).reverse().toString();
        int[] digits = new int[reversDigit.length()];
        for (int i = 0; i < reversDigit.length(); i++) {
            digits[i] = Character.getNumericValue(reversDigit.charAt(i));
        }
        for (int i = 1; i < digits.length; i = i + 2) {
            digits[i] = 2 * digits[i];
            if (digits[i] > 9) {
                digits[i] = digits[i] - 9;
            }
        }
        int sum = Arrays.stream(digits).sum();
        return new Integer(10 - (sum % 10)).toString();
    }
}"
6222,Create Java classes to represent a user and a post.,"public class User { 
  private String name; 
  private String email; 

  //getters and setters
  ...
}

public class Post {
  private int id;
  private String title;
  private User author;
  private String content;

  //getters and setters 
  ... 
}","### Instruction: 
 Create Java classes to represent a user and a post. 
 ### Response:
 public class User { 
  private String name; 
  private String email; 

  //getters and setters
  ...
}

public class Post {
  private int id;
  private String title;
  private User author;
  private String content;

  //getters and setters 
  ... 
}"
6240,"Create a Java program which takes two integers as input and prints their greatest common divisor.
Input: 102, 75","public static int gcd(int a, int b){
   // Base Case 
   if (a == 0) 
       return b; 
   if (b == 0) 
       return a; 
   
   // a is greater 
   if (a > b) 
       return gcd(a-b, b); 
   return gcd(a, b-a); 
}","### Instruction: 
 Create a Java program which takes two integers as input and prints their greatest common divisor. 
 ### Input: 102, 75 
 ### Response:
 public static int gcd(int a, int b){
   // Base Case 
   if (a == 0) 
       return b; 
   if (b == 0) 
       return a; 
   
   // a is greater 
   if (a > b) 
       return gcd(a-b, b); 
   return gcd(a, b-a); 
}"
6257,"Design a function in Java that takes in two integer arguments, a and b, and returns the result of a*b.","public static int multiply(int a, int b){
  return a*b;
}","### Instruction: 
 Design a function in Java that takes in two integer arguments, a and b, and returns the result of a*b. 
 ### Response:
 public static int multiply(int a, int b){
  return a*b;
}"
6261,"Design a function in Java that takes in a string and returns true if the string contains the letter ""a"" and false otherwise.","public static boolean hasLetterA(String s){
  return s.contains(""a"");
}","### Instruction: 
 Design a function in Java that takes in a string and returns true if the string contains the letter ""a"" and false otherwise. 
 ### Response:
 public static boolean hasLetterA(String s){
  return s.contains(""a"");
}"
6287,"Write a Java program to read the following text and count the number of words in the given sentence.
Input: This is a sample sentence.","import java.util.*;

public class CountWords {
  public static void main(String[] args) {
    String str = ""This is a sample sentence."";
    int wordCount = 0;
    for (int i = 0; i < str.length(); i++) {
      if ((str.charAt(i) == ' ') || (str.charAt(i) == '.')) {
        wordCount++;
      }
    }
    System.out.println(""The number of words in the given sentence is "" + (wordCount + 1));
  }
}","### Instruction: 
 Write a Java program to read the following text and count the number of words in the given sentence. 
 ### Input: This is a sample sentence. 
 ### Response:
 import java.util.*;

public class CountWords {
  public static void main(String[] args) {
    String str = ""This is a sample sentence."";
    int wordCount = 0;
    for (int i = 0; i < str.length(); i++) {
      if ((str.charAt(i) == ' ') || (str.charAt(i) == '.')) {
        wordCount++;
      }
    }
    System.out.println(""The number of words in the given sentence is "" + (wordCount + 1));
  }
}"
6328,"Write a Java program to display a message ""Hello World"" on the console.","class HelloWorld {
    public static void main(String[] args) {
        System.out.println(""Hello World"");
    }
}","### Instruction: 
 Write a Java program to display a message ""Hello World"" on the console. 
 ### Response:
 class HelloWorld {
    public static void main(String[] args) {
        System.out.println(""Hello World"");
    }
}"
6332,Write a Java statement to add two integers and print the result.,"int a = 1;
int b = 2;
System.out.println(a+b);","### Instruction: 
 Write a Java statement to add two integers and print the result. 
 ### Response:
 int a = 1;
int b = 2;
System.out.println(a+b);"
6344,Develop a function in Java that prints out the squares of all numbers between 1 and 10.,"public void printSquares(){
   for(int i=1; i<=10; i++){
      System.out.println(i*i);
   }
}","### Instruction: 
 Develop a function in Java that prints out the squares of all numbers between 1 and 10. 
 ### Response:
 public void printSquares(){
   for(int i=1; i<=10; i++){
      System.out.println(i*i);
   }
}"
6348,Develop a function in Java to print the fibonacci series up to 10 numbers.,"public class FibonacciSeries { 
  
    static void printFibonacci(int n) { 
        int f1 = 0, f2 = 1; 
  
        if (n < 1) 
            return; 
  
        for (int i = 1; i <= n; i++) { 
            System.out.print(f2 + "" ""); 
            int next = f1 + f2; 
            f1 = f2; 
            f2 = next;  
        } 
    } 
  
    public static void main(String[] args) { 
        int n = 10; 
        printFibonacci(n); 
    } 
}","### Instruction: 
 Develop a function in Java to print the fibonacci series up to 10 numbers. 
 ### Response:
 public class FibonacciSeries { 
  
    static void printFibonacci(int n) { 
        int f1 = 0, f2 = 1; 
  
        if (n < 1) 
            return; 
  
        for (int i = 1; i <= n; i++) { 
            System.out.print(f2 + "" ""); 
            int next = f1 + f2; 
            f1 = f2; 
            f2 = next;  
        } 
    } 
  
    public static void main(String[] args) { 
        int n = 10; 
        printFibonacci(n); 
    } 
}"
6352,Develop a program in Java that prints out the following star pattern.,"public class Stars {
    public static void main(String[] args) {
        for (int i = 1; i <= 5; i++) {
            for (int j = 0; j < i; j++) {
                System.out.print(""*"");
            }
            System.out.println();
        }
    }
}","### Instruction: 
 Develop a program in Java that prints out the following star pattern. 
 ### Response:
 public class Stars {
    public static void main(String[] args) {
        for (int i = 1; i <= 5; i++) {
            for (int j = 0; j < i; j++) {
                System.out.print(""*"");
            }
            System.out.println();
        }
    }
}"
6370,"Create a Java class to represent a point in 2D space using two fields, x and y.","public class Point {
    private double x;
    private double y;
    
    public Point(double x, double y){
        this.x = x;
        this.y = y;
    }
    
    public double getX() {
        return x;
    }
    
    public double getY() {
        return y;
    }
    
    public void setX(double x) {
        this.x = x;
    }
    
    public void setY(double y) {
        this.y = y;
    }
}","### Instruction: 
 Create a Java class to represent a point in 2D space using two fields, x and y. 
 ### Response:
 public class Point {
    private double x;
    private double y;
    
    public Point(double x, double y){
        this.x = x;
        this.y = y;
    }
    
    public double getX() {
        return x;
    }
    
    public double getY() {
        return y;
    }
    
    public void setX(double x) {
        this.x = x;
    }
    
    public void setY(double y) {
        this.y = y;
    }
}"
6391,Write a function in Java to convert hours to minutes.,"public static int hoursToMinutes(int hours) {
    return hours * 60;
}","### Instruction: 
 Write a function in Java to convert hours to minutes. 
 ### Response:
 public static int hoursToMinutes(int hours) {
    return hours * 60;
}"
6400,Write a class in Java to submit a form.,"public class Form {

  public void submitForm(){
    // code to submit the form  
  }

}","### Instruction: 
 Write a class in Java to submit a form. 
 ### Response:
 public class Form {

  public void submitForm(){
    // code to submit the form  
  }

}"
6432,"Edit the following Java code snippet to increase efficiency
Input: public class MyClass {
    public static void main(String[] args) {
        int i = 0;
        while (i < 10) {
           i++;
           System.out.println(i);
        }
    }
}","public class MyClass {
    public static void main(String[] args) {
        //Set the counter to 1
        int i = 1;
        //Use less than or equal comparison to include 10
        while (i <= 10) {
           //short-hand increment
           i++;
           System.out.println(i);
        }
    }
}","### Instruction: 
 Edit the following Java code snippet to increase efficiency 
 ### Input: public class MyClass {
    public static void main(String[] args) {
        int i = 0;
        while (i < 10) {
           i++;
           System.out.println(i);
        }
    }
} 
 ### Response:
 public class MyClass {
    public static void main(String[] args) {
        //Set the counter to 1
        int i = 1;
        //Use less than or equal comparison to include 10
        while (i <= 10) {
           //short-hand increment
           i++;
           System.out.println(i);
        }
    }
}"
6438,"Rewrite the following Java code using different functions.
Input: String[] courses = {""Math"",""Science"",""English"", ""History""};
for(int i = 0; i < courses.length; i++){
  System.out.println(courses[i]);
}","import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        String[] courses = {""Math"",""Science"",""English"", ""History""};

        printCourses(courses);
    }

    public static void printCourses(String[] courses){
        Arrays.stream(courses).forEach(System.out::println);
    }
}","### Instruction: 
 Rewrite the following Java code using different functions. 
 ### Input: String[] courses = {""Math"",""Science"",""English"", ""History""};
for(int i = 0; i < courses.length; i++){
  System.out.println(courses[i]);
} 
 ### Response:
 import java.util.Arrays;

public class Main {
    public static void main(String[] args) {
        String[] courses = {""Math"",""Science"",""English"", ""History""};

        printCourses(courses);
    }

    public static void printCourses(String[] courses){
        Arrays.stream(courses).forEach(System.out::println);
    }
}"
6452,Write a Java program to read input from the console.,"import java.util.Scanner; 

class UserInput { 
  
    public static void main(String[] args) 
    { 
        Scanner read = new Scanner(System.in); 
        System.out.print(""Enter some string: ""); 
        String inputString = read.nextLine(); 
  
        System.out.println(""You have entered: "" + inputString); 
    } 
}","### Instruction: 
 Write a Java program to read input from the console. 
 ### Response:
 import java.util.Scanner; 

class UserInput { 
  
    public static void main(String[] args) 
    { 
        Scanner read = new Scanner(System.in); 
        System.out.print(""Enter some string: ""); 
        String inputString = read.nextLine(); 
  
        System.out.println(""You have entered: "" + inputString); 
    } 
}"
6508,"Utilizing the Java syntax, write a code snippet to find the maximum value in the given array.
Input: [4, 15, 11, 26, 2]","int max = arr[0];

for (int i = 1; i < arr.length; i++) {
	if (arr[i] > max) {
		max = arr[i];
	}
}

System.out.println(""Maximum value is: "" + max);","### Instruction: 
 Utilizing the Java syntax, write a code snippet to find the maximum value in the given array. 
 ### Input: [4, 15, 11, 26, 2] 
 ### Response:
 int max = arr[0];

for (int i = 1; i < arr.length; i++) {
	if (arr[i] > max) {
		max = arr[i];
	}
}

System.out.println(""Maximum value is: "" + max);"
6538,Write a Java program to print all the Fibonacci series between 0 to 50.,"public class Fibonacci { 
    public static void main(String args[]) { 
        int n1=0,n2=1; 
        System.out.print(""Fibonacci Series: "" + n1 + "" "" + n2); 
        for(int i=2;i<50;i++) { 
            int n3 = n1 + n2; 
            System.out.print("" "" + n3); 
            n1=n2; 
            n2=n3;  
        }
    } 
}","### Instruction: 
 Write a Java program to print all the Fibonacci series between 0 to 50. 
 ### Response:
 public class Fibonacci { 
    public static void main(String args[]) { 
        int n1=0,n2=1; 
        System.out.print(""Fibonacci Series: "" + n1 + "" "" + n2); 
        for(int i=2;i<50;i++) { 
            int n3 = n1 + n2; 
            System.out.print("" "" + n3); 
            n1=n2; 
            n2=n3;  
        }
    } 
}"
6541,"Debug the following Java code to return the number of elements in the list.
Input: ArrayList<String> valueList = new ArrayList<String>();
valueList.add(""Apple"");
valueList.add(""Banana"");
valueList.add(""Orange"");
System.out.println(""Number of elements: "" + valueList.length);","ArrayList<String> valueList = new ArrayList<String>();
valueList.add(""Apple"");
valueList.add(""Banana"");
valueList.add(""Orange"");
System.out.println(""Number of elements: "" + valueList.size();","### Instruction: 
 Debug the following Java code to return the number of elements in the list. 
 ### Input: ArrayList<String> valueList = new ArrayList<String>();
valueList.add(""Apple"");
valueList.add(""Banana"");
valueList.add(""Orange"");
System.out.println(""Number of elements: "" + valueList.length); 
 ### Response:
 ArrayList<String> valueList = new ArrayList<String>();
valueList.add(""Apple"");
valueList.add(""Banana"");
valueList.add(""Orange"");
System.out.println(""Number of elements: "" + valueList.size();"
6565,"Turn the following pseudocode into a Java method.
Input: for n = 2 to 10
print (n * 2)","public void printMultiples(int start, int end) {
    for (int n=start; n <= end; n++) {
        System.out.println(n*2);
    }
}","### Instruction: 
 Turn the following pseudocode into a Java method. 
 ### Input: for n = 2 to 10
print (n * 2) 
 ### Response:
 public void printMultiples(int start, int end) {
    for (int n=start; n <= end; n++) {
        System.out.println(n*2);
    }
}"
6589,"Write a function in Java to find the matching pair in an array of integers.
Input: [4, 8, 2, 4, 1]","// Function to find matching pair in an array 
public static void findPair(int[] arr) { 
    int pairIndex = -1; 
  
    // Loop through the array 
    for (int i = 0; i < arr.length; i++) { 
        int current = arr[i]; 
  
        // Check if it's a matching pair 
        for (int j = i + 1; j < arr.length; j++) { 
            if (current == arr[j]) { 
                pairIndex = j; 
                break; 
            } 
        } 
    } 
  
    // Print the result 
    if (pairIndex != -1) 
        System.out.println(""Pair found at index: "" + pairIndex); 
    else
        System.out.println(""Pair not found!""); 
}","### Instruction: 
 Write a function in Java to find the matching pair in an array of integers. 
 ### Input: [4, 8, 2, 4, 1] 
 ### Response:
 // Function to find matching pair in an array 
public static void findPair(int[] arr) { 
    int pairIndex = -1; 
  
    // Loop through the array 
    for (int i = 0; i < arr.length; i++) { 
        int current = arr[i]; 
  
        // Check if it's a matching pair 
        for (int j = i + 1; j < arr.length; j++) { 
            if (current == arr[j]) { 
                pairIndex = j; 
                break; 
            } 
        } 
    } 
  
    // Print the result 
    if (pairIndex != -1) 
        System.out.println(""Pair found at index: "" + pairIndex); 
    else
        System.out.println(""Pair not found!""); 
}"
6600,Write a Java program to print binary numbers from 0 to 15.,"public class Binary {
    public static void main(String[] args) {
        for (int i = 0; i <= 15; i++) {
            System.out.println(Integer.toBinaryString(i));
        }
    }
}","### Instruction: 
 Write a Java program to print binary numbers from 0 to 15. 
 ### Response:
 public class Binary {
    public static void main(String[] args) {
        for (int i = 0; i <= 15; i++) {
            System.out.println(Integer.toBinaryString(i));
        }
    }
}"
6609,Create a Java program to find the area and circumference of a circle with a given radius.,"public class Circle
{
    public static void main(String[] args)
    {
        double radius = 6.2;
        double area = Math.PI * radius * radius;
        double circumference = 2 * Math.PI * radius;

        System.out.println(""Area = "" + area);
        System.out.println(""Circumference = "" + circumference);
    }

}","### Instruction: 
 Create a Java program to find the area and circumference of a circle with a given radius. 
 ### Response:
 public class Circle
{
    public static void main(String[] args)
    {
        double radius = 6.2;
        double area = Math.PI * radius * radius;
        double circumference = 2 * Math.PI * radius;

        System.out.println(""Area = "" + area);
        System.out.println(""Circumference = "" + circumference);
    }

}"
6611,Write a Java code snippet that takes a URL as input and prints the content of the page.,"import java.net.URL;
import java.util.Scanner;
 
public class UrlReader {
 
    public static void main(String[] args) throws Exception {
        String urlString = args[0];
        URL url = new URL(urlString);
        Scanner s = new Scanner(url.openStream());
        while (s.hasNextLine()) {
            System.out.println(s.nextLine());
        }
        s.close();
    }
}","### Instruction: 
 Write a Java code snippet that takes a URL as input and prints the content of the page. 
 ### Response:
 import java.net.URL;
import java.util.Scanner;
 
public class UrlReader {
 
    public static void main(String[] args) throws Exception {
        String urlString = args[0];
        URL url = new URL(urlString);
        Scanner s = new Scanner(url.openStream());
        while (s.hasNextLine()) {
            System.out.println(s.nextLine());
        }
        s.close();
    }
}"
6615,Create a Java program to find the max number within a list.,"public static int findMax(int[] array) {
    int max = array[0];
    for (int i = 0; i < array.length; i++) {
        if (array[i] > max) {
            max = array[i];
        }
    }
    return max;
}","### Instruction: 
 Create a Java program to find the max number within a list. 
 ### Response:
 public static int findMax(int[] array) {
    int max = array[0];
    for (int i = 0; i < array.length; i++) {
        if (array[i] > max) {
            max = array[i];
        }
    }
    return max;
}"
6626,Write a Java code to create an arraylist.,"// Code to create an ArrayList in Java
import java.util.ArrayList;

public class Demo {
    public static void main(String[] args) {
        // create an arraylist
        ArrayList<String> list = new ArrayList<>();
        list.add(""Java"");
        list.add(""C++"");
        list.add(""Python"");
        System.out.println(list);

        // print the size of the list
        System.out.println(""The size of the list is: ""+list.size());
    }
}","### Instruction: 
 Write a Java code to create an arraylist. 
 ### Response:
 // Code to create an ArrayList in Java
import java.util.ArrayList;

public class Demo {
    public static void main(String[] args) {
        // create an arraylist
        ArrayList<String> list = new ArrayList<>();
        list.add(""Java"");
        list.add(""C++"");
        list.add(""Python"");
        System.out.println(list);

        // print the size of the list
        System.out.println(""The size of the list is: ""+list.size());
    }
}"
6657,Design a data structure in Java to store students' marks in an examination,"import java.util.HashMap; 

// Data structure to store Marks 
class Marks { 
    int physicsMarks; 
    int chemistryMarks; 
    int mathsMarks; 
};

// HashMap to store Student's Marks 
HashMap<String, Marks> marksHashMap = new HashMap<>(); 
  
// Function to store Student's marks 
void storeMarks(String studentId, int physicsMarks, 
int chemistryMarks, int mathsMarks) 
{ 
    // Object of Marks 
    Marks marks = new Marks(); 
    marks.physicsMarks = physicsMarks; 
    marks.chemistryMarks = chemistryMarks; 
    marks.mathsMarks = mathsMarks; 
  
    String studentId marksHashMap.put(studentId, marks); 
}","### Instruction: 
 Design a data structure in Java to store students' marks in an examination 
 ### Response:
 import java.util.HashMap; 

// Data structure to store Marks 
class Marks { 
    int physicsMarks; 
    int chemistryMarks; 
    int mathsMarks; 
};

// HashMap to store Student's Marks 
HashMap<String, Marks> marksHashMap = new HashMap<>(); 
  
// Function to store Student's marks 
void storeMarks(String studentId, int physicsMarks, 
int chemistryMarks, int mathsMarks) 
{ 
    // Object of Marks 
    Marks marks = new Marks(); 
    marks.physicsMarks = physicsMarks; 
    marks.chemistryMarks = chemistryMarks; 
    marks.mathsMarks = mathsMarks; 
  
    String studentId marksHashMap.put(studentId, marks); 
}"
6663,Design an algorithm in Java for solving a linear search problem.,"// Returns index of x if it is present in arr[], 
// else return -1 
int search(int arr[], int n, int x) 
{ 
    int i; 
    for (i = 0; i < n; i++) 
        if (arr[i] == x) 
            return i; 
    return -1; 
}","### Instruction: 
 Design an algorithm in Java for solving a linear search problem. 
 ### Response:
 // Returns index of x if it is present in arr[], 
// else return -1 
int search(int arr[], int n, int x) 
{ 
    int i; 
    for (i = 0; i < n; i++) 
        if (arr[i] == x) 
            return i; 
    return -1; 
}"
6670,"Convert the following Java code into JavaScript.
Input: public static int max(int[] array){
    int max = array[0];
    for(int i=1; i<array.length; i++){
        if(array[i] > max){
            max = array[i];
        }
    }
    return max;
}","function max(arr) {
    let max = arr[0];
    for (let i = 1; i < arr.length; i++) {
        if (arr[i] > max) {
            max = arr[i];
        }
    }
    return max;
}","### Instruction: 
 Convert the following Java code into JavaScript. 
 ### Input: public static int max(int[] array){
    int max = array[0];
    for(int i=1; i<array.length; i++){
        if(array[i] > max){
            max = array[i];
        }
    }
    return max;
} 
 ### Response:
 function max(arr) {
    let max = arr[0];
    for (let i = 1; i < arr.length; i++) {
        if (arr[i] > max) {
            max = arr[i];
        }
    }
    return max;
}"
6681,"Write a compare() function in Java that takes two values and returns -1, 0, or 1 if the first value is less than, equal to, or greater than the second value.","public static int compare(Object o1, Object o2) {

    if (o1 < o2) {
        return -1;
    } else if (o1 == o2) {
        return 0;
    }
    else {
        return 1;
    }
}","### Instruction: 
 Write a compare() function in Java that takes two values and returns -1, 0, or 1 if the first value is less than, equal to, or greater than the second value. 
 ### Response:
 public static int compare(Object o1, Object o2) {

    if (o1 < o2) {
        return -1;
    } else if (o1 == o2) {
        return 0;
    }
    else {
        return 1;
    }
}"
6785,"Create a Java function to calculate the area of a triangle from its three vertices.
Input: A=(2,3), B=(3,4), C=(4,5).","public static double getTriangleArea(Point A, Point B, Point C)
{
  double area = 0.5 * (A.x * B.y + B.x * C.y + C.x * A.y - 
                    B.x * A.y - C.x * B.y - A.x * C.y);
  return area;
}","### Instruction: 
 Create a Java function to calculate the area of a triangle from its three vertices. 
 ### Input: A=(2,3), B=(3,4), C=(4,5). 
 ### Response:
 public static double getTriangleArea(Point A, Point B, Point C)
{
  double area = 0.5 * (A.x * B.y + B.x * C.y + C.x * A.y - 
                    B.x * A.y - C.x * B.y - A.x * C.y);
  return area;
}"
6799,"Write a function in Java that takes in a string and shifts all the characters one place to the right, wrapping around the end.
Input: x = ""Hello!""","public static String shiftCharacters(String str){
    String shifted = """";
    
    for(int i = 0; i < str.length(); i++) {
        int charNum = str.charAt(i) - 1;
        // Wrapping around the end
        if (charNum < 65) {
            charNum = charNum + 26;
        }
        shifted += (char)charNum;
    }
    
    return shifted;
}","### Instruction: 
 Write a function in Java that takes in a string and shifts all the characters one place to the right, wrapping around the end. 
 ### Input: x = ""Hello!"" 
 ### Response:
 public static String shiftCharacters(String str){
    String shifted = """";
    
    for(int i = 0; i < str.length(); i++) {
        int charNum = str.charAt(i) - 1;
        // Wrapping around the end
        if (charNum < 65) {
            charNum = charNum + 26;
        }
        shifted += (char)charNum;
    }
    
    return shifted;
}"
6801,"Write a function in Java to delete an item from an ArrayList.
Input: list = [1,2,3,4,5]","public static void deleteItem(ArrayList<Integer> list, int item){
    int index = list.indexOf(item);
    if(index >= 0){
        list.remove(index);
    }
}","### Instruction: 
 Write a function in Java to delete an item from an ArrayList. 
 ### Input: list = [1,2,3,4,5] 
 ### Response:
 public static void deleteItem(ArrayList<Integer> list, int item){
    int index = list.indexOf(item);
    if(index >= 0){
        list.remove(index);
    }
}"
6808,Write code in Java to generate a random number between 12 and 23.,"// Create an instance of Random class 
Random rand = new Random(); 
  
// Generate a random number between 12 and 23 
int rand_num = rand.nextInt(11) + 12; 

// Print the random number  
System.out.println(""Random number: "" + rand_num);","### Instruction: 
 Write code in Java to generate a random number between 12 and 23. 
 ### Response:
 // Create an instance of Random class 
Random rand = new Random(); 
  
// Generate a random number between 12 and 23 
int rand_num = rand.nextInt(11) + 12; 

// Print the random number  
System.out.println(""Random number: "" + rand_num);"
6810,"Write a method in Java that returns an array of the first N prime numbers.
Input: n=10","public static int[] getFirstNPrimes(int n) {
  int[] primes = new int[n];
  int count = 0;
  int num = 2;
  
  while (count < n) {
    if (isPrime(num)) { 
      primes[count] = num;
      count++;
    }
    num++;
  }
  return primes;
}

// Utility functon to check whether a numbmer is prime or not 
boolean isPrime(int n) {
  for (int i = 2; i <= n / 2; i++) {
    if (n % i == 0)
      return false;
  }
  return true;
}","### Instruction: 
 Write a method in Java that returns an array of the first N prime numbers. 
 ### Input: n=10 
 ### Response:
 public static int[] getFirstNPrimes(int n) {
  int[] primes = new int[n];
  int count = 0;
  int num = 2;
  
  while (count < n) {
    if (isPrime(num)) { 
      primes[count] = num;
      count++;
    }
    num++;
  }
  return primes;
}

// Utility functon to check whether a numbmer is prime or not 
boolean isPrime(int n) {
  for (int i = 2; i <= n / 2; i++) {
    if (n % i == 0)
      return false;
  }
  return true;
}"
6839,"Rewrite the Java code to a more efficient version.
Input: public class Sum {
  public static void main(String[] args) {
    int sum = 0;
    for (int i = 0; i < 10; i++) {
      sum = sum + i;
    }
    System.out.println(sum);
  }
}","public class Sum {
  public static void main(String[] args) {
    int sum = 0;
    int n = 10;
    sum = (n * (n + 1)) / 2;
    System.out.println(sum);
  }
}","### Instruction: 
 Rewrite the Java code to a more efficient version. 
 ### Input: public class Sum {
  public static void main(String[] args) {
    int sum = 0;
    for (int i = 0; i < 10; i++) {
      sum = sum + i;
    }
    System.out.println(sum);
  }
} 
 ### Response:
 public class Sum {
  public static void main(String[] args) {
    int sum = 0;
    int n = 10;
    sum = (n * (n + 1)) / 2;
    System.out.println(sum);
  }
}"
6875,Suggest a method in Java to compare two strings.,"The easiest way to compare two strings in Java is to use the built-in String class's equals() method. This method compares all characters in the strings, and returns true if the strings are equal or false otherwise. For example, given the strings ""Hello"" and ""Goodbye"", the following code would evaluate to false:

String s1 = ""Hello"";
String s2 = ""Goodbye"";
boolean equal = s1.equals(s2); // false","### Instruction: 
 Suggest a method in Java to compare two strings. 
 ### Response:
 The easiest way to compare two strings in Java is to use the built-in String class's equals() method. This method compares all characters in the strings, and returns true if the strings are equal or false otherwise. For example, given the strings ""Hello"" and ""Goodbye"", the following code would evaluate to false:

String s1 = ""Hello"";
String s2 = ""Goodbye"";
boolean equal = s1.equals(s2); // false"
6921,Write a Java program to find the largest number among three numbers entered by the user.,"import java.util.Scanner;
 
public class Main {
 
    public static void main(String[] args) {
     
        Scanner input = new Scanner(System.in);
        System.out.println(""Enter three numbers:"");
 
        int n1 = input.nextInt();
        int n2 = input.nextInt();
        int n3 = input.nextInt();
 
        int result = Math.max(n1, Math.max(n2, n3));
 
        System.out.println(""Largest number: "" + result);
    }
}","### Instruction: 
 Write a Java program to find the largest number among three numbers entered by the user. 
 ### Response:
 import java.util.Scanner;
 
public class Main {
 
    public static void main(String[] args) {
     
        Scanner input = new Scanner(System.in);
        System.out.println(""Enter three numbers:"");
 
        int n1 = input.nextInt();
        int n2 = input.nextInt();
        int n3 = input.nextInt();
 
        int result = Math.max(n1, Math.max(n2, n3));
 
        System.out.println(""Largest number: "" + result);
    }
}"
6996,"Using the Java programming language, print out the direct children of a given element in an HTML document.
Input: <div id=""container"">
  <p>This is a paragraph.</p>
  <ul>
    <li>This is a list item.</li>
    <li>This is a second list item.</li>
  </ul>
</div>","Element containerElement = document.getElementById(""container"");
NodeList children = containerElement.getChildNodes();
for (int i=0; i<children.getLength(); i++) {
  Node child = children.item(i);
  System.out.println(child.getNodeName());
}","### Instruction: 
 Using the Java programming language, print out the direct children of a given element in an HTML document. 
 ### Input: <div id=""container"">
  <p>This is a paragraph.</p>
  <ul>
    <li>This is a list item.</li>
    <li>This is a second list item.</li>
  </ul>
</div> 
 ### Response:
 Element containerElement = document.getElementById(""container"");
NodeList children = containerElement.getChildNodes();
for (int i=0; i<children.getLength(); i++) {
  Node child = children.item(i);
  System.out.println(child.getNodeName());
}"
7001,Write a function in Java to calculate the number of days in a given month and year.,"public static int daysInMonth(int month, int year) { 
    int days[] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}; 
    if (month == 2 && isLeapYear(year)) 
        return 29; 
    else
        return days[month - 1]; 
}","### Instruction: 
 Write a function in Java to calculate the number of days in a given month and year. 
 ### Response:
 public static int daysInMonth(int month, int year) { 
    int days[] = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31}; 
    if (month == 2 && isLeapYear(year)) 
        return 29; 
    else
        return days[month - 1]; 
}"
7059,Create a Java class that contains two methods which take two integers as parameters and returns their sum as the result.,"public class Sum {

  public static int sumInts(int a, int b) {
    return a + b;
  }

  public static double sumDoubles(double a, double b) {
    return a + b;
  }

}","### Instruction: 
 Create a Java class that contains two methods which take two integers as parameters and returns their sum as the result. 
 ### Response:
 public class Sum {

  public static int sumInts(int a, int b) {
    return a + b;
  }

  public static double sumDoubles(double a, double b) {
    return a + b;
  }

}"
7180,Write a function in Java to find the intersection of 2 arrays.,"static int[] intersect(int[] array1, int[] array2){
   
    int[] result = new int[array1.length];
    int k = 0;
 
    for (int i = 0; i < array1.length; i++) {
        for (int j = 0; j < array2.length; j++) {
            if(array1[i] == array2[j]){
                result[k] = array1[i];
                k++;
            }
        }
    }

    // Return the result array 
    return result;
}","### Instruction: 
 Write a function in Java to find the intersection of 2 arrays. 
 ### Response:
 static int[] intersect(int[] array1, int[] array2){
   
    int[] result = new int[array1.length];
    int k = 0;
 
    for (int i = 0; i < array1.length; i++) {
        for (int j = 0; j < array2.length; j++) {
            if(array1[i] == array2[j]){
                result[k] = array1[i];
                k++;
            }
        }
    }

    // Return the result array 
    return result;
}"
7191,"Write a Java program for encrypting the text ""Hello World!"" using the Caesar Cipher.","public class CaesarCipher 
{ 
    // Encrypts text using a shift od ""s"" 
    public static StringBuffer encrypt(String text, int s) 
    { 
        StringBuffer result= new StringBuffer(); 
  
        for (int i=0; i<text.length(); i++) 
        { 
            if (Character.isUpperCase(text.charAt(i))) 
            { 
                char ch = (char)(((int)text.charAt(i) + s - 65) % 26 + 65); 
                result.append(ch); 
            } 
            else
            { 
                char ch = (char)(((int)text.charAt(i) + s - 97) % 26 + 97); 
                result.append(ch); 
            } 
        } 
        return result; 
    } 
  
    // Driver code 
    public static void main(String[] args) 
    { 
        String text = ""Hello World!""; 
        int s = 4; 
        System.out.println(""Text  : "" + text); 
        System.out.println(""Shift : "" + s); 
        System.out.println(""Cipher: "" + encrypt(text, s)); 
    } 
} 

# Output: Cipher: Lipps Asvph!","### Instruction: 
 Write a Java program for encrypting the text ""Hello World!"" using the Caesar Cipher. 
 ### Response:
 public class CaesarCipher 
{ 
    // Encrypts text using a shift od ""s"" 
    public static StringBuffer encrypt(String text, int s) 
    { 
        StringBuffer result= new StringBuffer(); 
  
        for (int i=0; i<text.length(); i++) 
        { 
            if (Character.isUpperCase(text.charAt(i))) 
            { 
                char ch = (char)(((int)text.charAt(i) + s - 65) % 26 + 65); 
                result.append(ch); 
            } 
            else
            { 
                char ch = (char)(((int)text.charAt(i) + s - 97) % 26 + 97); 
                result.append(ch); 
            } 
        } 
        return result; 
    } 
  
    // Driver code 
    public static void main(String[] args) 
    { 
        String text = ""Hello World!""; 
        int s = 4; 
        System.out.println(""Text  : "" + text); 
        System.out.println(""Shift : "" + s); 
        System.out.println(""Cipher: "" + encrypt(text, s)); 
    } 
} 

# Output: Cipher: Lipps Asvph!"
7206,"Please debug the following Java code to calculate the average grade of 4 students.
Input: public class Main
{
    public static void main (String[] args)
    {
        int student1 = 77;
        int student2 = 85;
        int student3 = 90;
        int student4 = 96;

        int totalScore = 0;

        totalScore += student1;
        totalScore += student2;
        totalScore += student3;
        totalScore += student4;

        double averageScore = totalScore / 4;

        System.out.println(""The average score is: "" + averageScore);
    }
}","public class Main
{
    public static void main (String[] args)
    {
        int student1 = 77;
        int student2 = 85;
        int student3 = 90;
        int student4 = 96;

        int totalScore = 0;

        totalScore += student1;
        totalScore += student2;
        totalScore += student3;
        totalScore += student4;

        double averageScore = totalScore / 4.0;

        System.out.println(""The average score is: "" + averageScore);
    }
}","### Instruction: 
 Please debug the following Java code to calculate the average grade of 4 students. 
 ### Input: public class Main
{
    public static void main (String[] args)
    {
        int student1 = 77;
        int student2 = 85;
        int student3 = 90;
        int student4 = 96;

        int totalScore = 0;

        totalScore += student1;
        totalScore += student2;
        totalScore += student3;
        totalScore += student4;

        double averageScore = totalScore / 4;

        System.out.println(""The average score is: "" + averageScore);
    }
} 
 ### Response:
 public class Main
{
    public static void main (String[] args)
    {
        int student1 = 77;
        int student2 = 85;
        int student3 = 90;
        int student4 = 96;

        int totalScore = 0;

        totalScore += student1;
        totalScore += student2;
        totalScore += student3;
        totalScore += student4;

        double averageScore = totalScore / 4.0;

        System.out.println(""The average score is: "" + averageScore);
    }
}"
7241,Name the Java abstract class used for user-defined exceptions,"The Java abstract class used for user-defined exceptions is called ""Throwable"".","### Instruction: 
 Name the Java abstract class used for user-defined exceptions 
 ### Response:
 The Java abstract class used for user-defined exceptions is called ""Throwable""."
7242,Write a while loop in Java to print all even numbers between 0 and 20,"int number = 0;
while(number <= 20){
    if(number % 2 == 0){
        System.out.println(number);
    }
    number++;
}","### Instruction: 
 Write a while loop in Java to print all even numbers between 0 and 20 
 ### Response:
 int number = 0;
while(number <= 20){
    if(number % 2 == 0){
        System.out.println(number);
    }
    number++;
}"
7279,Create a method in Java to print square of a given number.,"public static void printSquare(int number) {
    int result = number * number;
    System.out.println(""Square of "" + number + "" is: "" + result);
}","### Instruction: 
 Create a method in Java to print square of a given number. 
 ### Response:
 public static void printSquare(int number) {
    int result = number * number;
    System.out.println(""Square of "" + number + "" is: "" + result);
}"
7397,Design a function in Java to take two numbers and return the smallest one.,"int min(int a, int b) 
{ 
    if (a < b) 
        return a; 
    else
        return b; 
}","### Instruction: 
 Design a function in Java to take two numbers and return the smallest one. 
 ### Response:
 int min(int a, int b) 
{ 
    if (a < b) 
        return a; 
    else
        return b; 
}"
7436,Write a Java program to create a calculator using Switch statement.,"import java.util.Scanner;

public class Calculator {
    public static void main(String[] args) { 
        Scanner sc = new Scanner(System.in);
        System.out.println(""Please enter two numbers: "");
        int firstNumber = sc.nextInt();
        int secondNumber = sc.nextInt();

        System.out.println(""Please enter an operator (+, -, *, /): "");
        char operator = sc.next().charAt(0);

        switch (operator) {
            case '+':
                System.out.println(firstNumber + secondNumber);
                break;

            case '-':
                System.out.println(firstNumber - secondNumber);
                break;

            case '*':
                System.out.println(firstNumber * secondNumber);
                break;

            case '/':
                System.out.println(firstNumber / secondNumber);
                break;

            default:
                System.out.println(""Invalid operator!"");
                break;
        }
    sc.close();
    }
}","### Instruction: 
 Write a Java program to create a calculator using Switch statement. 
 ### Response:
 import java.util.Scanner;

public class Calculator {
    public static void main(String[] args) { 
        Scanner sc = new Scanner(System.in);
        System.out.println(""Please enter two numbers: "");
        int firstNumber = sc.nextInt();
        int secondNumber = sc.nextInt();

        System.out.println(""Please enter an operator (+, -, *, /): "");
        char operator = sc.next().charAt(0);

        switch (operator) {
            case '+':
                System.out.println(firstNumber + secondNumber);
                break;

            case '-':
                System.out.println(firstNumber - secondNumber);
                break;

            case '*':
                System.out.println(firstNumber * secondNumber);
                break;

            case '/':
                System.out.println(firstNumber / secondNumber);
                break;

            default:
                System.out.println(""Invalid operator!"");
                break;
        }
    sc.close();
    }
}"
7458,Write a Java method which will print the Fibonacci sequence based on a given number.,"public void fibonacciSeries(int number) 
    { 
        int prev = 0; 
        int current = 1; 
        System.out.print(""Fibonacci Series of ""+number+"" numbers:""); 
  
        for (int i = 1; i <= number; i++) 
        { 
            System.out.print(prev+"" ""); 
            int sum = prev + current; 
            prev = current; 
            current = sum; 
        } 
    }","### Instruction: 
 Write a Java method which will print the Fibonacci sequence based on a given number. 
 ### Response:
 public void fibonacciSeries(int number) 
    { 
        int prev = 0; 
        int current = 1; 
        System.out.print(""Fibonacci Series of ""+number+"" numbers:""); 
  
        for (int i = 1; i <= number; i++) 
        { 
            System.out.print(prev+"" ""); 
            int sum = prev + current; 
            prev = current; 
            current = sum; 
        } 
    }"
7461,"Design a class in Java to represent a person's contact information like name, phone number and email address.","//class definition
public class Contact {
  private String name;
  private String phoneNumber;
  private String email;

  public Contact(String name, String phoneNumber, String email) {
    this.name = name;
    this.phoneNumber = phoneNumber;
    this.email = email;
  }
  
  //getters and setters
  public String getName(){ 
      return name;
  }
  public void setName(String name){
      this.name = name;
  }
  public String getPhoneNumber(){ 
      return phoneNumber;
  }
  public void setPhoneNumber(String phoneNumber){
      this.phoneNumber = phoneNumber;
  }
  public String getEmail(){ 
      return email;
  }
  public void setEmail(String email){
      this.email = email;
  }
}","### Instruction: 
 Design a class in Java to represent a person's contact information like name, phone number and email address. 
 ### Response:
 //class definition
public class Contact {
  private String name;
  private String phoneNumber;
  private String email;

  public Contact(String name, String phoneNumber, String email) {
    this.name = name;
    this.phoneNumber = phoneNumber;
    this.email = email;
  }
  
  //getters and setters
  public String getName(){ 
      return name;
  }
  public void setName(String name){
      this.name = name;
  }
  public String getPhoneNumber(){ 
      return phoneNumber;
  }
  public void setPhoneNumber(String phoneNumber){
      this.phoneNumber = phoneNumber;
  }
  public String getEmail(){ 
      return email;
  }
  public void setEmail(String email){
      this.email = email;
  }
}"
7473,Write a Java code snippet to take input from the user and print the result.,"Scanner input = new Scanner(System.in);
int number = input.nextInt();
System.out.println(number);","### Instruction: 
 Write a Java code snippet to take input from the user and print the result. 
 ### Response:
 Scanner input = new Scanner(System.in);
int number = input.nextInt();
System.out.println(number);"
7476,"Transform the following C code into Java code.
Input: int array[100];
int i, sum = 0;
for (i = 0; i < 100; i++)
   sum += array[i];","int[] array = new int[100];
int sum = 0;
for(int i = 0; i < array.length; i++){
    sum += array[i];
}","### Instruction: 
 Transform the following C code into Java code. 
 ### Input: int array[100];
int i, sum = 0;
for (i = 0; i < 100; i++)
   sum += array[i]; 
 ### Response:
 int[] array = new int[100];
int sum = 0;
for(int i = 0; i < array.length; i++){
    sum += array[i];
}"
7481,Adapt the following Java program to print the smallest number from an array of numbers.,"public class Smallest_Number {
    public static void main(String[] args) {
        int arr[] = {10, 15, 5, 20};
        int smallest = arr[0];
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] < smallest) {
                smallest = arr[i];
            }
        }
        System.out.println(smallest);
    }
}","### Instruction: 
 Adapt the following Java program to print the smallest number from an array of numbers. 
 ### Response:
 public class Smallest_Number {
    public static void main(String[] args) {
        int arr[] = {10, 15, 5, 20};
        int smallest = arr[0];
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] < smallest) {
                smallest = arr[i];
            }
        }
        System.out.println(smallest);
    }
}"
7495,Write a Java program for removing all white spaces from a given string.,"public class RemoveSpace {
    public static String removeSpace(String str) {
        return str.replaceAll(""\\s"","""");
    }   
    public static void main (String[] args) {
        String str = ""Hello World!""; 

        str = removeSpace(str);

        System.out.println(str); 
    } 
}","### Instruction: 
 Write a Java program for removing all white spaces from a given string. 
 ### Response:
 public class RemoveSpace {
    public static String removeSpace(String str) {
        return str.replaceAll(""\\s"","""");
    }   
    public static void main (String[] args) {
        String str = ""Hello World!""; 

        str = removeSpace(str);

        System.out.println(str); 
    } 
}"
7516,Create a function in Java to detect if an input string is a palindrome.,"public static boolean isPalindrome(String str){
    int i=0,j=str.length()-1;
 
    while(i<j){
        if(str.charAt(i)!=str.charAt(j))
            return false;
 
        i++;
        j--;
    }
    return true;
}","### Instruction: 
 Create a function in Java to detect if an input string is a palindrome. 
 ### Response:
 public static boolean isPalindrome(String str){
    int i=0,j=str.length()-1;
 
    while(i<j){
        if(str.charAt(i)!=str.charAt(j))
            return false;
 
        i++;
        j--;
    }
    return true;
}"
7518,Create a program in Java that finds the maximum element in an array.,"public static int getMaxElement(int[] arr) {
    int max = Integer.MIN_VALUE;
        
    for (int el : arr) {
        if (el > max)
            max = el;
    }
    return max;
}","### Instruction: 
 Create a program in Java that finds the maximum element in an array. 
 ### Response:
 public static int getMaxElement(int[] arr) {
    int max = Integer.MIN_VALUE;
        
    for (int el : arr) {
        if (el > max)
            max = el;
    }
    return max;
}"
7554,"Create a function in Java that takes two strings and returns an integer that describes the number of characters they share in common.
Input: string1 = ""Hello""
string2 = ""World""","public static int countCommonChars(String s1, String s2){
    int count = 0;
    int maxLen = Math.min(s1.length(), s2.length());
    for(int i=0; i<maxLen; i++){
        if(s1.charAt(i) == s2.charAt(i)) count++;
    }
    return count;
}","### Instruction: 
 Create a function in Java that takes two strings and returns an integer that describes the number of characters they share in common. 
 ### Input: string1 = ""Hello""
string2 = ""World"" 
 ### Response:
 public static int countCommonChars(String s1, String s2){
    int count = 0;
    int maxLen = Math.min(s1.length(), s2.length());
    for(int i=0; i<maxLen; i++){
        if(s1.charAt(i) == s2.charAt(i)) count++;
    }
    return count;
}"
7555,"Create a program in Java that calculates the average of two test scores.
Input: test1 = 85
test2 = 90","public static double average(int test1, int test2){
    double avg = (test1+test2)/2;
    return avg;
}","### Instruction: 
 Create a program in Java that calculates the average of two test scores. 
 ### Input: test1 = 85
test2 = 90 
 ### Response:
 public static double average(int test1, int test2){
    double avg = (test1+test2)/2;
    return avg;
}"
7574,"Write code in Java to calculate the minimum number of coins needed to make change for a given amount.
Input: Coin denominations: [1, 5, 10, 25]
Amount: 27","public int calculateCoins(int amount, int[] array){ 
    int coinsNeeded = 0; 
    for (int i = array.length - 1; i >= 0; i--){ 
          
        // Find the largest denomination 
        // which is smaller than amount 
        while (amount >= array[i]){ 
            amount = amount - array[i]; 
            coinsNeeded++; 
        } 
    } 
    return coinsNeeded; 
}","### Instruction: 
 Write code in Java to calculate the minimum number of coins needed to make change for a given amount. 
 ### Input: Coin denominations: [1, 5, 10, 25]
Amount: 27 
 ### Response:
 public int calculateCoins(int amount, int[] array){ 
    int coinsNeeded = 0; 
    for (int i = array.length - 1; i >= 0; i--){ 
          
        // Find the largest denomination 
        // which is smaller than amount 
        while (amount >= array[i]){ 
            amount = amount - array[i]; 
            coinsNeeded++; 
        } 
    } 
    return coinsNeeded; 
}"
7585,Generate a function in Java to calculate the sum of digits for any given integer.,"public static int sumDigits(int number) {
	int sum = 0;
	while (number != 0) {
		sum += number%10;
		number /= 10;
	}
	return sum;
}","### Instruction: 
 Generate a function in Java to calculate the sum of digits for any given integer. 
 ### Response:
 public static int sumDigits(int number) {
	int sum = 0;
	while (number != 0) {
		sum += number%10;
		number /= 10;
	}
	return sum;
}"
7587,Generate a sorting algorithm written in Java that sorts integers in ascending order.,"public static int[] sortIntsAscending(int[] arr) { 
    int n = arr.length; 
    for (int i = 0; i < n-1; i++) { 
        int minIndex = i; 
        for (int j = i+1; j < n; j++) { 
            if (arr[j] < arr[minIndex]) { 
                minIndex = j; 
            } 
        } 
        int temp = arr[minIndex]; 
        arr[minIndex] = arr[i]; 
        arr[i] = temp; 
    } 
    return arr; 
}","### Instruction: 
 Generate a sorting algorithm written in Java that sorts integers in ascending order. 
 ### Response:
 public static int[] sortIntsAscending(int[] arr) { 
    int n = arr.length; 
    for (int i = 0; i < n-1; i++) { 
        int minIndex = i; 
        for (int j = i+1; j < n; j++) { 
            if (arr[j] < arr[minIndex]) { 
                minIndex = j; 
            } 
        } 
        int temp = arr[minIndex]; 
        arr[minIndex] = arr[i]; 
        arr[i] = temp; 
    } 
    return arr; 
}"
7616,Make a GUI app in Java to add two numbers together.,"import java.awt.*;
import javax.swing.*;

public class AddTwoNumbersGUI {

    public static void main(String[] args) {
        JFrame frame = new JFrame(""Adding two numbers"");
        frame.setSize(400, 200);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setVisible(true);
        Container contentPane = frame.getContentPane();
        contentPane.setLayout(new FlowLayout());

        JLabel num1Label = new JLabel(""Enter first number:"");
        JLabel num2Label = new JLabel(""Enter second number:"");
        JLabel resultLabel = new JLabel(""Result:"");
        
        JTextField num1TextField = new JTextField();
        JTextField num2TextField = new JTextField();
        JTextField resultTextField = new JTextField();

        JButton addButton = new JButton(""Add"");
        addButton.addActionListener(e -> {
            int num1 = Integer.parseInt(num1TextField.getText());
            int num2 = Integer.parseInt(num2TextField.getText());
            int result = num1 + num2;
            resultTextField.setText(Integer.toString(result));
        });

        contentPane.add(num1Label);
        contentPane.add(num1TextField);
        contentPane.add(num2Label);
        contentPane.add(num2TextField);
        contentPane.add(addButton);
        contentPane.add(resultLabel);
        contentPane.add(resultTextField);
    }

}","### Instruction: 
 Make a GUI app in Java to add two numbers together. 
 ### Response:
 import java.awt.*;
import javax.swing.*;

public class AddTwoNumbersGUI {

    public static void main(String[] args) {
        JFrame frame = new JFrame(""Adding two numbers"");
        frame.setSize(400, 200);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setVisible(true);
        Container contentPane = frame.getContentPane();
        contentPane.setLayout(new FlowLayout());

        JLabel num1Label = new JLabel(""Enter first number:"");
        JLabel num2Label = new JLabel(""Enter second number:"");
        JLabel resultLabel = new JLabel(""Result:"");
        
        JTextField num1TextField = new JTextField();
        JTextField num2TextField = new JTextField();
        JTextField resultTextField = new JTextField();

        JButton addButton = new JButton(""Add"");
        addButton.addActionListener(e -> {
            int num1 = Integer.parseInt(num1TextField.getText());
            int num2 = Integer.parseInt(num2TextField.getText());
            int result = num1 + num2;
            resultTextField.setText(Integer.toString(result));
        });

        contentPane.add(num1Label);
        contentPane.add(num1TextField);
        contentPane.add(num2Label);
        contentPane.add(num2TextField);
        contentPane.add(addButton);
        contentPane.add(resultLabel);
        contentPane.add(resultTextField);
    }

}"
7627,Create a class in Java to store student grades with functions for adding and calculating average grades.,"class StudentGrades {
    private float[] grades;
    private int size;
 
    public StudentGrades() {
        grades = new float[10];
        size = 0;
    }
 
    public void addGrade(float grade) {
        grades[size] = grade;
        size++;
    }
 
    public float averageGrades() {
        float sum = 0;
 
        for (int i=0; i<size; i++) {
            sum += grades[i];
        }
        return sum/size;
    }
}","### Instruction: 
 Create a class in Java to store student grades with functions for adding and calculating average grades. 
 ### Response:
 class StudentGrades {
    private float[] grades;
    private int size;
 
    public StudentGrades() {
        grades = new float[10];
        size = 0;
    }
 
    public void addGrade(float grade) {
        grades[size] = grade;
        size++;
    }
 
    public float averageGrades() {
        float sum = 0;
 
        for (int i=0; i<size; i++) {
            sum += grades[i];
        }
        return sum/size;
    }
}"
7642,"Generate a Java program that creates a class Student with attributes name and age, and a constructor to initialize the attributes.","public class Student {
    private String name;
    private int age;

    public Student(String name, int age) {
        this.name = name;
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public int getAge() {
        return age;
    }
}","### Instruction: 
 Generate a Java program that creates a class Student with attributes name and age, and a constructor to initialize the attributes. 
 ### Response:
 public class Student {
    private String name;
    private int age;

    public Student(String name, int age) {
        this.name = name;
        this.age = age;
    }

    public String getName() {
        return name;
    }

    public int getAge() {
        return age;
    }
}"
7647,Come up with a Java program that checks if one string is a substring of another.,"public static boolean isSubstring(String s, String x) {
    int i = 0, j = 0;
    while (i < s.length() && j < x.length()) {
        if (s.charAt(i) == x.charAt(j)) {
            i++;
            j++;
        } else {
            i = i - j + 1;
            j = 0;
        }
    }
    if (j == x.length()) {
        return true;
    }
    return false;
}","### Instruction: 
 Come up with a Java program that checks if one string is a substring of another. 
 ### Response:
 public static boolean isSubstring(String s, String x) {
    int i = 0, j = 0;
    while (i < s.length() && j < x.length()) {
        if (s.charAt(i) == x.charAt(j)) {
            i++;
            j++;
        } else {
            i = i - j + 1;
            j = 0;
        }
    }
    if (j == x.length()) {
        return true;
    }
    return false;
}"
7730,Create a Java program that asks the user to input a string and prints out its upper-case version.,"import java.util.Scanner;
 
class UpperCaseString {
    public static void main(String[] args) {  
        Scanner scanner = new Scanner(System.in);
        System.out.print(""Please enter a string: "");
       
        String input = scanner.nextLine();
       
        System.out.println(""The upper-case version of this string is: "" + input.toUpperCase());
    }
}","### Instruction: 
 Create a Java program that asks the user to input a string and prints out its upper-case version. 
 ### Response:
 import java.util.Scanner;
 
class UpperCaseString {
    public static void main(String[] args) {  
        Scanner scanner = new Scanner(System.in);
        System.out.print(""Please enter a string: "");
       
        String input = scanner.nextLine();
       
        System.out.println(""The upper-case version of this string is: "" + input.toUpperCase());
    }
}"
7762,"Write a function in Java which takes integer array and a number as input and prints all the pairs which sum up to given number.
Input: Integer Array: [2, 7, 5, 3, 8]  
Number: 10","public void findPairs(int[] arr,int num) 
{
    for (int i = 0; i < arr.length; i++) { 
        for (int j = i+1; j < arr.length; j++) { 
            if (arr[i] + arr[j] == num) 
            System.out.println(arr[i] + "" + "" + arr[j] +"" = ""+num);
        } 
    } 
}","### Instruction: 
 Write a function in Java which takes integer array and a number as input and prints all the pairs which sum up to given number. 
 ### Input: Integer Array: [2, 7, 5, 3, 8]  
Number: 10 
 ### Response:
 public void findPairs(int[] arr,int num) 
{
    for (int i = 0; i < arr.length; i++) { 
        for (int j = i+1; j < arr.length; j++) { 
            if (arr[i] + arr[j] == num) 
            System.out.println(arr[i] + "" + "" + arr[j] +"" = ""+num);
        } 
    } 
}"
7766,Write a Java program to iterate through a HashMap.,"import java.util.HashMap; 
import java.util.Map; 
  
public class Main { 
    public static void main (String[] args) 
    { 
        // Creating a HashMap 
        Map<String, Integer> hash_map = new HashMap<String, Integer>(); 
  
        // Mapping int values to string keys 
        hash_map.put(""Geeks"", 10); 
        hash_map.put(""4"", 15); 
        hash_map.put(""Geeks"", 20); 
        hash_map.put(""Welcomes"", 25); 
        hash_map.put(""You"", 30); 
  
        // Displaying the HashMap 
        for (Map.Entry mapElement : hash_map.entrySet()) { 
            String key = (String)mapElement.getKey(); 
            int value = (int)mapElement.getValue(); 
            System.out.println(""Key: "" + key + ""\t Value: "" + value); 
        } 
    } 
}","### Instruction: 
 Write a Java program to iterate through a HashMap. 
 ### Response:
 import java.util.HashMap; 
import java.util.Map; 
  
public class Main { 
    public static void main (String[] args) 
    { 
        // Creating a HashMap 
        Map<String, Integer> hash_map = new HashMap<String, Integer>(); 
  
        // Mapping int values to string keys 
        hash_map.put(""Geeks"", 10); 
        hash_map.put(""4"", 15); 
        hash_map.put(""Geeks"", 20); 
        hash_map.put(""Welcomes"", 25); 
        hash_map.put(""You"", 30); 
  
        // Displaying the HashMap 
        for (Map.Entry mapElement : hash_map.entrySet()) { 
            String key = (String)mapElement.getKey(); 
            int value = (int)mapElement.getValue(); 
            System.out.println(""Key: "" + key + ""\t Value: "" + value); 
        } 
    } 
}"
7809,"Implement a Java program that reads five integers and prints their sum.
Input: 5, 8, 12, 1, 4","import java.util.*;

public class Main {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int sum = 0;

    // Read the integers
    for (int i = 0; i < 5; i++) {
      int x = sc.nextInt();
      sum += x;
    }

    System.out.println(""The sum is "" + sum);
  }
}","### Instruction: 
 Implement a Java program that reads five integers and prints their sum. 
 ### Input: 5, 8, 12, 1, 4 
 ### Response:
 import java.util.*;

public class Main {
  public static void main(String[] args) {
    Scanner sc = new Scanner(System.in);
    int sum = 0;

    // Read the integers
    for (int i = 0; i < 5; i++) {
      int x = sc.nextInt();
      sum += x;
    }

    System.out.println(""The sum is "" + sum);
  }
}"
7824,"Create a class in Java that prints ""Hello World!""","class HelloWorld {

    public static void main(String[] args) {
        System.out.println(""Hello World!"");
    }
}","### Instruction: 
 Create a class in Java that prints ""Hello World!"" 
 ### Response:
 class HelloWorld {

    public static void main(String[] args) {
        System.out.println(""Hello World!"");
    }
}"
7827,"Given a number as an input, write a code in Java to check if it is an Armstrong number.
Input: Number: 153","public class ArmstrongNumber { 
	public static boolean armstrongNumber(int number) 
	{ 
		int result = 0, originalNumber, remainder; 

		originalNumber = number; 

		// Check if the number is Armstrong number 
		while (originalNumber != 0) { 
			remainder = originalNumber % 10; 
			result += Math.pow(remainder, 3); 
			originalNumber /= 10; 
		} 

		if (result == number) 
			return true; 
		else
			return false; 
	} 
		
	public static void main(String[] args) 
	{ 
		int number = 153; 
		boolean isArmstrong = 
			armstrongNumber(number); 
		if (isArmstrong) 
			System.out.println(number + 
					"" is an Armstrong number.""); 
		else
			System.out.println(number + 
					"" is not an Armstrong number.""); 
	} 
}","### Instruction: 
 Given a number as an input, write a code in Java to check if it is an Armstrong number. 
 ### Input: Number: 153 
 ### Response:
 public class ArmstrongNumber { 
	public static boolean armstrongNumber(int number) 
	{ 
		int result = 0, originalNumber, remainder; 

		originalNumber = number; 

		// Check if the number is Armstrong number 
		while (originalNumber != 0) { 
			remainder = originalNumber % 10; 
			result += Math.pow(remainder, 3); 
			originalNumber /= 10; 
		} 

		if (result == number) 
			return true; 
		else
			return false; 
	} 
		
	public static void main(String[] args) 
	{ 
		int number = 153; 
		boolean isArmstrong = 
			armstrongNumber(number); 
		if (isArmstrong) 
			System.out.println(number + 
					"" is an Armstrong number.""); 
		else
			System.out.println(number + 
					"" is not an Armstrong number.""); 
	} 
}"
7844,"Write an algorithm in Java that finds the maximum value in an array.
Input: int[] arr = { 4, 9, 3, 6, 1 };","int maxVal(int[] arr) {
     int maxVal = arr[0];

     for (int i=1; i<arr.length; i++) {
         if (arr[i] > maxVal) {
             maxVal = arr[i];
         }
     }

     return maxVal;
 }","### Instruction: 
 Write an algorithm in Java that finds the maximum value in an array. 
 ### Input: int[] arr = { 4, 9, 3, 6, 1 }; 
 ### Response:
 int maxVal(int[] arr) {
     int maxVal = arr[0];

     for (int i=1; i<arr.length; i++) {
         if (arr[i] > maxVal) {
             maxVal = arr[i];
         }
     }

     return maxVal;
 }"
7846,"Create a program in Java that finds the average of a given array.
Input: int[] arr = {3, 4, 5, 6};","public static double findAvg(int[] arr) {
  int sum = 0;

  for (int i = 0; i < arr.length; i++) {
    sum += arr[i];
  }

  double avg = (double)sum / (double)arr.length;

  return avg;
}","### Instruction: 
 Create a program in Java that finds the average of a given array. 
 ### Input: int[] arr = {3, 4, 5, 6}; 
 ### Response:
 public static double findAvg(int[] arr) {
  int sum = 0;

  for (int i = 0; i < arr.length; i++) {
    sum += arr[i];
  }

  double avg = (double)sum / (double)arr.length;

  return avg;
}"
7847,"Create a Java program to find the sum of the following array [1,2,3,4,5].","public class Sum {
  public static void main(String[] args) {
    int[] arr = {1, 2, 3, 4, 5};
    int sum = 0;

    // Compute sum of array elements
    for (int i = 0; i < arr.length; i++) {
       sum += arr[i];
    }

    // Print sum
    System.out.println(""Sum of given array elements is: "" + sum);
  }
}","### Instruction: 
 Create a Java program to find the sum of the following array [1,2,3,4,5]. 
 ### Response:
 public class Sum {
  public static void main(String[] args) {
    int[] arr = {1, 2, 3, 4, 5};
    int sum = 0;

    // Compute sum of array elements
    for (int i = 0; i < arr.length; i++) {
       sum += arr[i];
    }

    // Print sum
    System.out.println(""Sum of given array elements is: "" + sum);
  }
}"
7874,"Create a Java programme that accepts two strings and returns the length of the longest string.
Input: String string1 = ""Hello"";
String string2 = ""World!"";","int longest = Math.max(string1.length(), string2.length());
System.out.println(""Longest string length is ""+ longest);","### Instruction: 
 Create a Java programme that accepts two strings and returns the length of the longest string. 
 ### Input: String string1 = ""Hello"";
String string2 = ""World!""; 
 ### Response:
 int longest = Math.max(string1.length(), string2.length());
System.out.println(""Longest string length is ""+ longest);"
7877,"Create a function in Java to find the number of values greater than a given number in a given array.
Input: int[] arr = {1, 2, 3, 4};
int threshold = 2;","public static int greaterThan(int[] arr, int threshold) {
  int count = 0;
  for (int i=0; i < arr.length; i++) {
    if (arr[i] > threshold) {
      count++;
    }
  }
  return count;
}","### Instruction: 
 Create a function in Java to find the number of values greater than a given number in a given array. 
 ### Input: int[] arr = {1, 2, 3, 4};
int threshold = 2; 
 ### Response:
 public static int greaterThan(int[] arr, int threshold) {
  int count = 0;
  for (int i=0; i < arr.length; i++) {
    if (arr[i] > threshold) {
      count++;
    }
  }
  return count;
}"
7890,"Design a class in Java called 'Student' which contains student's information such as name, age, etc.","public class Student {
  private String name;
  private int age;
  private boolean status;

  public Student(String name, int age, boolean status) {
    this.name = name;
    this.age = age;
    this.status = status;
  }
  
  public String getName() {
    return name;
  }
  
  public void setName(String name) {
    this.name = name;
  }
  
  public int getAge() {
    return age;
  }
  
  public void setAge(int age) {
    this.age = age;
  }
  
  public boolean getStatus() {
    return status;
  }
  
  public void setStatus(boolean status) {
    this.status = status;
  }  
}","### Instruction: 
 Design a class in Java called 'Student' which contains student's information such as name, age, etc. 
 ### Response:
 public class Student {
  private String name;
  private int age;
  private boolean status;

  public Student(String name, int age, boolean status) {
    this.name = name;
    this.age = age;
    this.status = status;
  }
  
  public String getName() {
    return name;
  }
  
  public void setName(String name) {
    this.name = name;
  }
  
  public int getAge() {
    return age;
  }
  
  public void setAge(int age) {
    this.age = age;
  }
  
  public boolean getStatus() {
    return status;
  }
  
  public void setStatus(boolean status) {
    this.status = status;
  }  
}"
7891,"Write a method in Java which displays a printing pattern like shown below.

x
xx
xxx
xxxx","public static void printPattern(int n) {
  for (int i = 1; i <= n; i++) {
    for (int j = 1; j <= i; j++) {
      System.out.print(""x"");
    }
    System.out.println();
  }
}","### Instruction: 
 Write a method in Java which displays a printing pattern like shown below.

x
xx
xxx
xxxx 
 ### Response:
 public static void printPattern(int n) {
  for (int i = 1; i <= n; i++) {
    for (int j = 1; j <= i; j++) {
      System.out.print(""x"");
    }
    System.out.println();
  }
}"
7956,Design a public Java API to generate a cookie.,"public interface CookieGenerator {
  public String generateCookie();
}","### Instruction: 
 Design a public Java API to generate a cookie. 
 ### Response:
 public interface CookieGenerator {
  public String generateCookie();
}"
7969,"Write a Java program to find all combinations of two numbers in an array that add up to a given sum.
Input: Array: [2, 7, 3, 5]
Sum: 10","public static List<List<Integer>> findSumPairs(int arr[], int sum) {
    List<List<Integer>> result = new ArrayList<>();
    Map<Integer, Integer> map = new HashMap<>();
 
    for (int i = 0; i < arr.length; i++) {
        int target = sum - arr[i];
        if (map.containsKey(target)) {
            result.add(Arrays.asList(map.get(target), i));
        }
        map.put(arr[i], i);
    }
    return result;
}","### Instruction: 
 Write a Java program to find all combinations of two numbers in an array that add up to a given sum. 
 ### Input: Array: [2, 7, 3, 5]
Sum: 10 
 ### Response:
 public static List<List<Integer>> findSumPairs(int arr[], int sum) {
    List<List<Integer>> result = new ArrayList<>();
    Map<Integer, Integer> map = new HashMap<>();
 
    for (int i = 0; i < arr.length; i++) {
        int target = sum - arr[i];
        if (map.containsKey(target)) {
            result.add(Arrays.asList(map.get(target), i));
        }
        map.put(arr[i], i);
    }
    return result;
}"
7970,"Create a function in Java that takes a 2D array as input and prints out all diagonals.
Input: array = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]","static void printDiagonals(int arr[][]) {
    int n = arr.length;
    // Print anti-diagonals
    for (int k = 0; k < n; k++) {
        for (int i = 0, j = k; j >= 0; j--, i++) {
            System.out.print(arr[i][j] + "" "");
        }
        System.out.println();
    }

    // Print main diagonals
    for (int k = 1; k < n; k++) {
        for (int i = k, j = n - 1; i < n; i++, j--) {
            System.out.print(arr[i][j] + "" "");
        }
        System.out.println();
    }
}","### Instruction: 
 Create a function in Java that takes a 2D array as input and prints out all diagonals. 
 ### Input: array = [[1, 2, 3], [4, 5, 6], [7, 8, 9]] 
 ### Response:
 static void printDiagonals(int arr[][]) {
    int n = arr.length;
    // Print anti-diagonals
    for (int k = 0; k < n; k++) {
        for (int i = 0, j = k; j >= 0; j--, i++) {
            System.out.print(arr[i][j] + "" "");
        }
        System.out.println();
    }

    // Print main diagonals
    for (int k = 1; k < n; k++) {
        for (int i = k, j = n - 1; i < n; i++, j--) {
            System.out.print(arr[i][j] + "" "");
        }
        System.out.println();
    }
}"
8016,Write a Java command line program to input a string and print out the reversed string.,"import java.util.Scanner;

public class ReverseString {

  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    System.out.print(""Enter a string : "");
    String inputString = scanner.nextLine();
    String reversedString = """";

    for(int i=inputString.length()-1; i>=0; i--) {
      reversedString = reversedString + inputString.charAt(i);
    }
    System.out.println(""The reversed string is : "" + reversedString);
  }

}","### Instruction: 
 Write a Java command line program to input a string and print out the reversed string. 
 ### Response:
 import java.util.Scanner;

public class ReverseString {

  public static void main(String[] args) {
    Scanner scanner = new Scanner(System.in);
    System.out.print(""Enter a string : "");
    String inputString = scanner.nextLine();
    String reversedString = """";

    for(int i=inputString.length()-1; i>=0; i--) {
      reversedString = reversedString + inputString.charAt(i);
    }
    System.out.println(""The reversed string is : "" + reversedString);
  }

}"
8051,"Read the following command line arguments in Java and print out the values.
Input: -v -f -d input.txt","String[] args = {""-v"", ""-f"", ""-d"", ""input.txt""};

for (String arg : args) {
    System.out.println(arg);
}","### Instruction: 
 Read the following command line arguments in Java and print out the values. 
 ### Input: -v -f -d input.txt 
 ### Response:
 String[] args = {""-v"", ""-f"", ""-d"", ""input.txt""};

for (String arg : args) {
    System.out.println(arg);
}"
8055,Write a function in Java to implement a Radix Sort algorithm.,"void radixSort(int arr[]) 
{ 
    int n = arr.length; 
  
    // Find the maximum number to know number of digits 
    int max = getMax(arr, n); 
  
    // Do counting sort for every digit. Note that instead 
    // of passing digit number, exp is passed. exp is 10^i 
    // where i is current digit number 
    for (int exp = 1; max/exp > 0; exp *= 10) 
        countSort(arr, n, exp); 
} 

int getMax(int arr[], int n) 
{ 
    int max = arr[0]; 
    for (int i = 1; i < n; i++) 
        if (arr[i] > max) 
            max = arr[i]; 
    return max; 
} 
  
void countSort(int arr[], int n, int exp) 
{ 
    int output[n]; // output array 
    int i; 
    int count[10] = {0}; 
  
    // Store count of occurrences in count[] 
    for (i = 0; i < n; i++) 
        count[ (arr[i]/exp)%10 ]++; 
  
    // Change count[i] so that count[i] now contains actual 
    //  position of this digit in output[] 
    for (i = 1; i < 10; i++) 
        count[i] += count[i - 1]; 
  
    // Build the output array 
    for (i = n - 1; i >= 0; i--) 
    { 
        output[count[ (arr[i]/exp)%10 ] - 1] = arr[i]; 
        count[ (arr[i]/exp)%10 ]--; 
    } 
  
    // Copy the output array to arr[], so that arr[] now 
    // contains sorted numbers according to curent digit 
    for (i = 0; i < n; i++) 
        arr[i] = output[i]; 
}","### Instruction: 
 Write a function in Java to implement a Radix Sort algorithm. 
 ### Response:
 void radixSort(int arr[]) 
{ 
    int n = arr.length; 
  
    // Find the maximum number to know number of digits 
    int max = getMax(arr, n); 
  
    // Do counting sort for every digit. Note that instead 
    // of passing digit number, exp is passed. exp is 10^i 
    // where i is current digit number 
    for (int exp = 1; max/exp > 0; exp *= 10) 
        countSort(arr, n, exp); 
} 

int getMax(int arr[], int n) 
{ 
    int max = arr[0]; 
    for (int i = 1; i < n; i++) 
        if (arr[i] > max) 
            max = arr[i]; 
    return max; 
} 
  
void countSort(int arr[], int n, int exp) 
{ 
    int output[n]; // output array 
    int i; 
    int count[10] = {0}; 
  
    // Store count of occurrences in count[] 
    for (i = 0; i < n; i++) 
        count[ (arr[i]/exp)%10 ]++; 
  
    // Change count[i] so that count[i] now contains actual 
    //  position of this digit in output[] 
    for (i = 1; i < 10; i++) 
        count[i] += count[i - 1]; 
  
    // Build the output array 
    for (i = n - 1; i >= 0; i--) 
    { 
        output[count[ (arr[i]/exp)%10 ] - 1] = arr[i]; 
        count[ (arr[i]/exp)%10 ]--; 
    } 
  
    // Copy the output array to arr[], so that arr[] now 
    // contains sorted numbers according to curent digit 
    for (i = 0; i < n; i++) 
        arr[i] = output[i]; 
}"
8122,"Create multiple classes in Java with the provided input.
Input: class Player {
    String name;
    int age;
    String club; 
    String position;","class Player {
    String name; 
    int age;
    String club;
    String position;

    // Constructors
    public Player(String name, int age, String club, String position) {
        this.name = name;
        this.age = age;
        this.club = club;
        this.position = position;
    }
    
    // Getters and Setters
    public String getName() {
        return this.name;
    }
    public void setName(String name) {
        this.name = name;
    }
    public int getAge() {
        return this.age;
    }
    public void setAge(int age) {
        this.age = age;
    }
    public String getClub() {
        return this.club;
    }
    public void setClub(String club) {
        this.club = club;
    }
    public String getPosition() {
        return this.position;
    }
    public void setPosition(String position) {
        this.position = position;
    }
}","### Instruction: 
 Create multiple classes in Java with the provided input. 
 ### Input: class Player {
    String name;
    int age;
    String club; 
    String position; 
 ### Response:
 class Player {
    String name; 
    int age;
    String club;
    String position;

    // Constructors
    public Player(String name, int age, String club, String position) {
        this.name = name;
        this.age = age;
        this.club = club;
        this.position = position;
    }
    
    // Getters and Setters
    public String getName() {
        return this.name;
    }
    public void setName(String name) {
        this.name = name;
    }
    public int getAge() {
        return this.age;
    }
    public void setAge(int age) {
        this.age = age;
    }
    public String getClub() {
        return this.club;
    }
    public void setClub(String club) {
        this.club = club;
    }
    public String getPosition() {
        return this.position;
    }
    public void setPosition(String position) {
        this.position = position;
    }
}"
8129,"Write a Java code to find the maximum of two numbers a and b.
Input: int a = 3;
int b = 4;","int max;

if (a > b) {
 max = a;
} else {
 max = b;
}","### Instruction: 
 Write a Java code to find the maximum of two numbers a and b. 
 ### Input: int a = 3;
int b = 4; 
 ### Response:
 int max;

if (a > b) {
 max = a;
} else {
 max = b;
}"
8143,Create a Java program that returns the minimum value in an array of integers.,"public static int minValue(int[] arr) {
 int minValue = arr[0];
 for (int i = 1; i < arr.length; i++) {
 if (arr[i] < minValue) {
 minValue = arr[i];
 }
 }
 return minValue;
}","### Instruction: 
 Create a Java program that returns the minimum value in an array of integers. 
 ### Response:
 public static int minValue(int[] arr) {
 int minValue = arr[0];
 for (int i = 1; i < arr.length; i++) {
 if (arr[i] < minValue) {
 minValue = arr[i];
 }
 }
 return minValue;
}"
8155,"Write a Java class that can be used to store and access a large dictionary.
Input: Large dictionary with 10000 words","import java.util.HashMap;

public class Dictionary {
 
    private HashMap<String, String> dictionary;
 
    public Dictionary() {
        this.dictionary = new HashMap<>();
    }
 
    public void addWord(String word, String definition) {
        dictionary.put(word, definition);
    }
 
    public String getDefinition(String word) {
        return dictionary.get(word);
    }
}","### Instruction: 
 Write a Java class that can be used to store and access a large dictionary. 
 ### Input: Large dictionary with 10000 words 
 ### Response:
 import java.util.HashMap;

public class Dictionary {
 
    private HashMap<String, String> dictionary;
 
    public Dictionary() {
        this.dictionary = new HashMap<>();
    }
 
    public void addWord(String word, String definition) {
        dictionary.put(word, definition);
    }
 
    public String getDefinition(String word) {
        return dictionary.get(word);
    }
}"
8171,"Write an if-else statement in Java that prints ""red"" if a variable ""color"" is set to ""red"" and prints ""blue"" otherwise.","if (color == ""red"") {
  System.out.println(""red"");
} else {
  System.out.println(""blue"");
}","### Instruction: 
 Write an if-else statement in Java that prints ""red"" if a variable ""color"" is set to ""red"" and prints ""blue"" otherwise. 
 ### Response:
 if (color == ""red"") {
  System.out.println(""red"");
} else {
  System.out.println(""blue"");
}"
8174,Define four classes in Java that form a hierarchy of fruit.,"// Base class
public abstract class Fruit { 
 
    private String color; 
 
    public Fruit(String color) { 
        this.color = color; 
    } 
    public abstract double getWeight(); 
} 

// Inheriting class
public class Apple extends Fruit { 
 
    private double weight; 
 
    public Apple(String color, double weight) { 
        super(color); 
        this.weight = weight; 
    } 
    @Override
    public double getWeight() { 
        return weight; 
    } 
} 

// Inheriting class
public class Banana extends Fruit { 
         
    private double length; 
 
    public Banana(String color, double length) { 
        super(color); 
        this.length = length; 
    } 
    @Override
    public double getWeight() { 
        return length * 0.5; 
    } 
} 

// Inheriting class
public class Orange extends Fruit { 
 
    private double radius; 
 
    public Orange(String color, double radius) { 
        super(color); 
        this.radius = radius; 
    } 
    @Override
    public double getWeight() { 
        return Math.round(Math.PI * Math.pow(radius, 2)); 
    } 
}","### Instruction: 
 Define four classes in Java that form a hierarchy of fruit. 
 ### Response:
 // Base class
public abstract class Fruit { 
 
    private String color; 
 
    public Fruit(String color) { 
        this.color = color; 
    } 
    public abstract double getWeight(); 
} 

// Inheriting class
public class Apple extends Fruit { 
 
    private double weight; 
 
    public Apple(String color, double weight) { 
        super(color); 
        this.weight = weight; 
    } 
    @Override
    public double getWeight() { 
        return weight; 
    } 
} 

// Inheriting class
public class Banana extends Fruit { 
         
    private double length; 
 
    public Banana(String color, double length) { 
        super(color); 
        this.length = length; 
    } 
    @Override
    public double getWeight() { 
        return length * 0.5; 
    } 
} 

// Inheriting class
public class Orange extends Fruit { 
 
    private double radius; 
 
    public Orange(String color, double radius) { 
        super(color); 
        this.radius = radius; 
    } 
    @Override
    public double getWeight() { 
        return Math.round(Math.PI * Math.pow(radius, 2)); 
    } 
}"
8249,Create an input validation function in Java that checks for valid numerical input from the user.,"public static void validateNumericInput() {
    Scanner input = new Scanner(System.in); 
    while (!input.hasNextDouble()) { 
        input.next(); 
        System.out.println(""Error: Invalid input. Please try again.""); 
    } 
}","### Instruction: 
 Create an input validation function in Java that checks for valid numerical input from the user. 
 ### Response:
 public static void validateNumericInput() {
    Scanner input = new Scanner(System.in); 
    while (!input.hasNextDouble()) { 
        input.next(); 
        System.out.println(""Error: Invalid input. Please try again.""); 
    } 
}"
8271,"Create a class in Java called 'Student' which has the following attributes: firstname, lastname, age, gender.","public class Student { 
   
  private String firstname; 
  private String lastname; 
  private int age; 
  private String gender; 
   
  public Student(String firstname, String lastname, int age, String gender) { 
    this.firstname = firstname; 
    this.lastname = lastname; 
    this.age = age; 
    this.gender = gender; 
  } 
   
  // getters and setters 
}","### Instruction: 
 Create a class in Java called 'Student' which has the following attributes: firstname, lastname, age, gender. 
 ### Response:
 public class Student { 
   
  private String firstname; 
  private String lastname; 
  private int age; 
  private String gender; 
   
  public Student(String firstname, String lastname, int age, String gender) { 
    this.firstname = firstname; 
    this.lastname = lastname; 
    this.age = age; 
    this.gender = gender; 
  } 
   
  // getters and setters 
}"
8273,"Create a new method in a given Java class named 'Person' which prints a greeting based on the firstname and lastname given.
Input: John Doe","public void printGreeting(String firstname, String lastname) {
  System.out.println(""Hello, "" + firstname + "" "" + lastname + ""!"");
}","### Instruction: 
 Create a new method in a given Java class named 'Person' which prints a greeting based on the firstname and lastname given. 
 ### Input: John Doe 
 ### Response:
 public void printGreeting(String firstname, String lastname) {
  System.out.println(""Hello, "" + firstname + "" "" + lastname + ""!"");
}"
8298,"Write a Java program that takes an array of integers and returns the number of zeros in the array.
Input: [4, 0, 2, 4, 0, 0]","public static int countZeroes(int[] data) {
  int count = 0;
  for (int i : data) {
    if (i == 0) {
      count += 1;
    }
  }
  return count;
}","### Instruction: 
 Write a Java program that takes an array of integers and returns the number of zeros in the array. 
 ### Input: [4, 0, 2, 4, 0, 0] 
 ### Response:
 public static int countZeroes(int[] data) {
  int count = 0;
  for (int i : data) {
    if (i == 0) {
      count += 1;
    }
  }
  return count;
}"
8313,Create a class structure in Java for an Employee object.,"public class Employee {
    private int id;
    private String name;
    private double salary;

    // default constructor
    public Employee() {
    }

    // parameterized constructor
    public Employee(int id, String name, double salary) {
        super();
        this.id = id;
        this.name = name;
        this.salary = salary;
    }

    // getters and setters
    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public double getSalary() {
        return salary;
    }

    public void setSalary(double salary) {
        this.salary = salary;
    }
}","### Instruction: 
 Create a class structure in Java for an Employee object. 
 ### Response:
 public class Employee {
    private int id;
    private String name;
    private double salary;

    // default constructor
    public Employee() {
    }

    // parameterized constructor
    public Employee(int id, String name, double salary) {
        super();
        this.id = id;
        this.name = name;
        this.salary = salary;
    }

    // getters and setters
    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public double getSalary() {
        return salary;
    }

    public void setSalary(double salary) {
        this.salary = salary;
    }
}"
8335,"Create a Java function that converts a string to a decimal.
Input: String numString = ""123.45"";","public static double stringToDecimal(String numString) {
   double result = 0;

   String[] tokens = numString.split(""\\."");
   result += Integer.parseInt(tokens[0]);
   
   int power = 1;
   for (int i = tokens[1].length(); i > 0; i--) {
        power *= 10;
        result += Integer.parseInt(tokens[1].charAt(i - 1) +"""") * 1.0 / power;
   }

   return result;
}","### Instruction: 
 Create a Java function that converts a string to a decimal. 
 ### Input: String numString = ""123.45""; 
 ### Response:
 public static double stringToDecimal(String numString) {
   double result = 0;

   String[] tokens = numString.split(""\\."");
   result += Integer.parseInt(tokens[0]);
   
   int power = 1;
   for (int i = tokens[1].length(); i > 0; i--) {
        power *= 10;
        result += Integer.parseInt(tokens[1].charAt(i - 1) +"""") * 1.0 / power;
   }

   return result;
}"
8336,"Create a class in Java that stores name, age, and height as input fields.","public class Person {
   private String name;
   private int age;
   private double height;

   public Person(String name, int age, double height) {
      this.name = name;
      this.age = age;
      this.height = height;
   }

   public String getName() {
      return name;
   }

   public void setName(String name) {
      this.name = name;
   }

   public int getAge() {
      return age;
   }

   public void setAge(int age) {
      this.age = age;
   }

   public double getHeight() {
      return height;
   }

   public void setHeight(double height) {
      this.height = height;
   }
}","### Instruction: 
 Create a class in Java that stores name, age, and height as input fields. 
 ### Response:
 public class Person {
   private String name;
   private int age;
   private double height;

   public Person(String name, int age, double height) {
      this.name = name;
      this.age = age;
      this.height = height;
   }

   public String getName() {
      return name;
   }

   public void setName(String name) {
      this.name = name;
   }

   public int getAge() {
      return age;
   }

   public void setAge(int age) {
      this.age = age;
   }

   public double getHeight() {
      return height;
   }

   public void setHeight(double height) {
      this.height = height;
   }
}"
8359,Create a class in Java called 'Circle' that stores information about a circle's radius and calculate the area.,"public class Circle {
   
    public double radius;
   
  public Circle(double radius) {
      this.radius = radius;
  }
  public double getArea() {
      return Math.PI * Math.pow(radius, 2);
  }
}","### Instruction: 
 Create a class in Java called 'Circle' that stores information about a circle's radius and calculate the area. 
 ### Response:
 public class Circle {
   
    public double radius;
   
  public Circle(double radius) {
      this.radius = radius;
  }
  public double getArea() {
      return Math.PI * Math.pow(radius, 2);
  }
}"
8425,Create a Java program which calculates the area of a circle.,"public class AreaCalculator {
    public static final double PI = 3.14159;
    
	public static double calculateArea(double radius) {
		return PI * radius * radius;
	}
    
	public static void main(String[] args) {
		System.out.println(calculateArea(10));
	}
}","### Instruction: 
 Create a Java program which calculates the area of a circle. 
 ### Response:
 public class AreaCalculator {
    public static final double PI = 3.14159;
    
	public static double calculateArea(double radius) {
		return PI * radius * radius;
	}
    
	public static void main(String[] args) {
		System.out.println(calculateArea(10));
	}
}"
8428,Specify the platform and the environment variables needed to run a Java program.,"The platform dependent environment variables needed to run a Java program on any platform are:

1. JAVA_HOME: This variable stores the location of JDK.
2. PATH: This variable stores the path to the executables.
3. CLASSPATH: This variable contains the path to the Java classes.
4. JRE_HOME: This variable stores the location of the JRE.","### Instruction: 
 Specify the platform and the environment variables needed to run a Java program. 
 ### Response:
 The platform dependent environment variables needed to run a Java program on any platform are:

1. JAVA_HOME: This variable stores the location of JDK.
2. PATH: This variable stores the path to the executables.
3. CLASSPATH: This variable contains the path to the Java classes.
4. JRE_HOME: This variable stores the location of the JRE."
8474,"Write a Java program to find the index of the first occurrence of the given element in an array.
Input: int[] array = {1, 7, 3, 6, 4, 7};
int num = 7;","public class FindFirstIndex {
    public static void main(String[] args) {
        int[] array = {1, 7, 3, 6, 4, 7};
        int num = 7;

        int idx = -1;
        for(int i = 0; i < array.length; i++) {
            if(array[i] == num) {
                idx = i;
                break;
            }
        }
        System.out.println(""Index of the first occurrence of the given element: "" + idx);
    }
}","### Instruction: 
 Write a Java program to find the index of the first occurrence of the given element in an array. 
 ### Input: int[] array = {1, 7, 3, 6, 4, 7};
int num = 7; 
 ### Response:
 public class FindFirstIndex {
    public static void main(String[] args) {
        int[] array = {1, 7, 3, 6, 4, 7};
        int num = 7;

        int idx = -1;
        for(int i = 0; i < array.length; i++) {
            if(array[i] == num) {
                idx = i;
                break;
            }
        }
        System.out.println(""Index of the first occurrence of the given element: "" + idx);
    }
}"
8492,Create an array in Java containing two objects.,"Object[] myArray =  {object1, object2 };","### Instruction: 
 Create an array in Java containing two objects. 
 ### Response:
 Object[] myArray =  {object1, object2 };"
8518,"Write a Java program to append two given lists.
Input: list1 = [10, 20, 30]

list2 = [5, 15, 25]","import java.util.ArrayList;

public class AppendLists {

	public static ArrayList<Integer> appendLists(ArrayList<Integer> list1, 
			ArrayList<Integer> list2) {
		ArrayList<Integer> appendedList = new ArrayList<>(list1);
		appendedList.addAll(list2);
		
		return appendedList;
	}
	
	public static void main(String[] args) {
		ArrayList<Integer> list1 = new ArrayList<>();
		list1.add(10);
		list1.add(20);
		list1.add(30);
		
		ArrayList<Integer> list2 = new ArrayList<>();
		list2.add(5);
		list2.add(15);
		list2.add(25);
	
		System.out.println(appendLists(list1, list2));
	}
	
}","### Instruction: 
 Write a Java program to append two given lists. 
 ### Input: list1 = [10, 20, 30]

list2 = [5, 15, 25] 
 ### Response:
 import java.util.ArrayList;

public class AppendLists {

	public static ArrayList<Integer> appendLists(ArrayList<Integer> list1, 
			ArrayList<Integer> list2) {
		ArrayList<Integer> appendedList = new ArrayList<>(list1);
		appendedList.addAll(list2);
		
		return appendedList;
	}
	
	public static void main(String[] args) {
		ArrayList<Integer> list1 = new ArrayList<>();
		list1.add(10);
		list1.add(20);
		list1.add(30);
		
		ArrayList<Integer> list2 = new ArrayList<>();
		list2.add(5);
		list2.add(15);
		list2.add(25);
	
		System.out.println(appendLists(list1, list2));
	}
	
}"
8534,Write a Java code snippet to declare a two dimensional array of size 2×3.,int[][] arr = new int[2][3];,"### Instruction: 
 Write a Java code snippet to declare a two dimensional array of size 2×3. 
 ### Response:
 int[][] arr = new int[2][3];"
8540,"Read the following code snippet in Java and find which data types will be returned by each function.
Input: public class MyClass {
  public int Function1() {
    int x = 5;
    return x;
  }

  public double Function2() {
    double y = 8.4;
    return y;
  }","Function1() will return an int type, and Function2() will return a double type.","### Instruction: 
 Read the following code snippet in Java and find which data types will be returned by each function. 
 ### Input: public class MyClass {
  public int Function1() {
    int x = 5;
    return x;
  }

  public double Function2() {
    double y = 8.4;
    return y;
  } 
 ### Response:
 Function1() will return an int type, and Function2() will return a double type."
8641,"Design a Java method to retrieve the maximum value from an array.
Input: [2, 3, 5, 9, 6, 11]","public static int getMax(int[] arr) { 
        int max = Integer.MIN_VALUE; 
        for (int i = 0; i < arr.length; i++) { 
            if (arr[i] > max) 
                max = arr[i]; 
        } 
        return max; 
    }","### Instruction: 
 Design a Java method to retrieve the maximum value from an array. 
 ### Input: [2, 3, 5, 9, 6, 11] 
 ### Response:
 public static int getMax(int[] arr) { 
        int max = Integer.MIN_VALUE; 
        for (int i = 0; i < arr.length; i++) { 
            if (arr[i] > max) 
                max = arr[i]; 
        } 
        return max; 
    }"
8644,"Develop an algorithm in Java that removes duplicate elements from an array.
Input: [1, 3, 5, 3, 4, 5]","public static int[] removeDuplicates(int[] arr) { 
    int n = arr.length; 
  
    // To store index of next unique element 
    int j = 0; 
  
    // Doing same as done in Method 1 
    // Just maintaining another updated index i.e. j 
    for (int i = 0; i < n-1; i++) 
        if (arr[i] != arr[i+1] ) 
            arr[j++] = arr[i]; 
  
    arr[j++] = arr[n-1]; 
  
    return Arrays.copyOf(arr, j); 
}","### Instruction: 
 Develop an algorithm in Java that removes duplicate elements from an array. 
 ### Input: [1, 3, 5, 3, 4, 5] 
 ### Response:
 public static int[] removeDuplicates(int[] arr) { 
    int n = arr.length; 
  
    // To store index of next unique element 
    int j = 0; 
  
    // Doing same as done in Method 1 
    // Just maintaining another updated index i.e. j 
    for (int i = 0; i < n-1; i++) 
        if (arr[i] != arr[i+1] ) 
            arr[j++] = arr[i]; 
  
    arr[j++] = arr[n-1]; 
  
    return Arrays.copyOf(arr, j); 
}"
8650,Construct a simple Java program that calculates the sum of two integers.,"public class Sum {
 public static void main(String[] args) {
   int a = 5;
   int b = 10;
   int sum = a + b;
   System.out.println(""The sum of the two integers is: "" + sum);
 }
}","### Instruction: 
 Construct a simple Java program that calculates the sum of two integers. 
 ### Response:
 public class Sum {
 public static void main(String[] args) {
   int a = 5;
   int b = 10;
   int sum = a + b;
   System.out.println(""The sum of the two integers is: "" + sum);
 }
}"
8652,Write a Java program to remove the duplicates in an array.,"import java.util.HashSet;

public class RemoveDuplicates {
 public static int[] removeDuplicates(int[] nums) {
  HashSet<Integer> set = new HashSet<>();
  for (int num : nums) set.add(num);
  int[] result = new int[set.size()];
  int i = 0;
  for (int num : set) result[i++] = num;
  return result;
 }
}","### Instruction: 
 Write a Java program to remove the duplicates in an array. 
 ### Response:
 import java.util.HashSet;

public class RemoveDuplicates {
 public static int[] removeDuplicates(int[] nums) {
  HashSet<Integer> set = new HashSet<>();
  for (int num : nums) set.add(num);
  int[] result = new int[set.size()];
  int i = 0;
  for (int num : set) result[i++] = num;
  return result;
 }
}"
8669,Define a constructor in Java to create an instance of a class.,"public class MyClass {
    // Constructors
    public MyClass() {
        // Default constructor
    }
    
    // Constructor with parameters
    public MyClass(int a, int b) {
        // Do something with the parameters
    }
 }","### Instruction: 
 Define a constructor in Java to create an instance of a class. 
 ### Response:
 public class MyClass {
    // Constructors
    public MyClass() {
        // Default constructor
    }
    
    // Constructor with parameters
    public MyClass(int a, int b) {
        // Do something with the parameters
    }
 }"
8682,Name the Java keyword used to define a class,"The Java keyword used to define a class is ""class"".","### Instruction: 
 Name the Java keyword used to define a class 
 ### Response:
 The Java keyword used to define a class is ""class""."
8693,"Create a Java method that takes in an integer array and returns it sorted.
Input: [7, -2, 4, 21, 0]","public static int[] sortInteger(int[] arr) {
    int[] sortedArr = Arrays.copyOf(arr, arr.length);
    Arrays.sort(sortedArr);
    return sortedArr;
}","### Instruction: 
 Create a Java method that takes in an integer array and returns it sorted. 
 ### Input: [7, -2, 4, 21, 0] 
 ### Response:
 public static int[] sortInteger(int[] arr) {
    int[] sortedArr = Arrays.copyOf(arr, arr.length);
    Arrays.sort(sortedArr);
    return sortedArr;
}"
8695,Initialize a new enum type in Java that stores the information of colors.,"public enum Color {
    RED,
    GREEN,
    BLUE
}","### Instruction: 
 Initialize a new enum type in Java that stores the information of colors. 
 ### Response:
 public enum Color {
    RED,
    GREEN,
    BLUE
}"
8717,Create a program in Java that outputs a Fibonacci series of length n.,"public class Fibonacci { 
  
    // Function to print the nth 
    // fibonacci number 
    static void printFibonacciSeries(int n) 
    { 
        int a = 0, b = 1, c; 
        if (n == 0) {
            System.out.print(a); 
            return; 
        }
        for (int i = 2; i <= n; i++) { 
            c = a + b; 
            System.out.print(c + "" ""); 
            a = b; 
            b = c; 
        } 
    } 
  
    // Driver Code 
    public static void main(String[] args) 
    { 
        int n = 10; 
        printFibonacciSeries(n); 
    } 
}","### Instruction: 
 Create a program in Java that outputs a Fibonacci series of length n. 
 ### Response:
 public class Fibonacci { 
  
    // Function to print the nth 
    // fibonacci number 
    static void printFibonacciSeries(int n) 
    { 
        int a = 0, b = 1, c; 
        if (n == 0) {
            System.out.print(a); 
            return; 
        }
        for (int i = 2; i <= n; i++) { 
            c = a + b; 
            System.out.print(c + "" ""); 
            a = b; 
            b = c; 
        } 
    } 
  
    // Driver Code 
    public static void main(String[] args) 
    { 
        int n = 10; 
        printFibonacciSeries(n); 
    } 
}"
8718,"Write a function in Java that takes an array as input and returns an array of the same size with the elements in reverse order.
Input: [1, 2, 3, 4, 5]","public static int[] reverseArray(int[] array) {
 int[] reversedArray = new int[array.length];
 int j = array.length - 1;
 for(int i = 0; i < array.length; i++) {
 reversedArray[i] = array[j];
 j--;
 }
 return reversedArray;
}","### Instruction: 
 Write a function in Java that takes an array as input and returns an array of the same size with the elements in reverse order. 
 ### Input: [1, 2, 3, 4, 5] 
 ### Response:
 public static int[] reverseArray(int[] array) {
 int[] reversedArray = new int[array.length];
 int j = array.length - 1;
 for(int i = 0; i < array.length; i++) {
 reversedArray[i] = array[j];
 j--;
 }
 return reversedArray;
}"
8720,"Write a function in Java that takes a String as argument and converts it to Title Case.
Input: this is a test.","public static String toTitleCase(String str) {
  String words[] = str.split(""\\s""); 
  StringBuilder ret = new StringBuilder(); 
  for(int i = 0; i < words.length; i++) {
    ret.append(Character.toUpperCase(words[i].charAt(0)));
    ret.append(words[i].substring(1));
    if(i < words.length - 1) {
      ret.append(' '); 
    }
  }
  return ret.toString();
}","### Instruction: 
 Write a function in Java that takes a String as argument and converts it to Title Case. 
 ### Input: this is a test. 
 ### Response:
 public static String toTitleCase(String str) {
  String words[] = str.split(""\\s""); 
  StringBuilder ret = new StringBuilder(); 
  for(int i = 0; i < words.length; i++) {
    ret.append(Character.toUpperCase(words[i].charAt(0)));
    ret.append(words[i].substring(1));
    if(i < words.length - 1) {
      ret.append(' '); 
    }
  }
  return ret.toString();
}"
8724,Write a Java method that accepts two integers and returns their least common multiple.,"public static int lcm(int a, int b) {
    int gcd = 1;
    for(int i = 1; i <= a && i <= b; ++i)
    {
        // Checks if i is factor of both integers
        if(a % i == 0 && b % i == 0)
            gcd = i;
    }

    int lcm = (a*b) / gcd;
    return lcm;
}","### Instruction: 
 Write a Java method that accepts two integers and returns their least common multiple. 
 ### Response:
 public static int lcm(int a, int b) {
    int gcd = 1;
    for(int i = 1; i <= a && i <= b; ++i)
    {
        // Checks if i is factor of both integers
        if(a % i == 0 && b % i == 0)
            gcd = i;
    }

    int lcm = (a*b) / gcd;
    return lcm;
}"
8763,"Write a Java program to find the area of a triangle where the three sides are given as x, y, and z.
Input: x = 6, y = 7, z = 8","public class AreaOfTriangle { 
 public static void main(String[] args) {
  int x = 6, y = 7, z = 8;
  double s = (x + y + z) / 2;
  double area = Math.sqrt(s * (s - x) * (s - y) * (s - z));
  System.out.println(""Area of triangle: "" + area);
 }
}","### Instruction: 
 Write a Java program to find the area of a triangle where the three sides are given as x, y, and z. 
 ### Input: x = 6, y = 7, z = 8 
 ### Response:
 public class AreaOfTriangle { 
 public static void main(String[] args) {
  int x = 6, y = 7, z = 8;
  double s = (x + y + z) / 2;
  double area = Math.sqrt(s * (s - x) * (s - y) * (s - z));
  System.out.println(""Area of triangle: "" + area);
 }
}"
8766,Write a Java program to clone an array of objects.,"public class CloneObjectArray { 

    public static void main(String[] args) 
    { 
        // Creating an array of objects 
        Employee[] employees = {new Employee(""John"", 25), 
            new Employee(""Tim"", 30), 
            new Employee(""Tom"", 35)}; 

		// Cloning the array 
        Employee[] clone = employees.clone(); 

        // Printing the current array 
        System.out.println(""Employees array:""); 
        for (Employee emp : employees) { 
            System.out.println(emp); 
        } 

        // Printing the cloned array 
        System.out.println(""Cloned Employees array:""); 
        for (Employee emp : clone) { 
            System.out.println(emp); 
        } 
    } 
} 

class Employee implements Cloneable { 
    String name; 
    int age;

    Employee(String name, int age) 
    { 
        this.name = name; 
        this.age = age; 
    } 

    // Override clone method 
    @Override
    protected Object clone() throws CloneNotSupportedException 
    { 
        return super.clone(); 
    } 

    @Override
    public String toString() 
    { 
        return this.name + "" "" + this.age; 
    } 
}","### Instruction: 
 Write a Java program to clone an array of objects. 
 ### Response:
 public class CloneObjectArray { 

    public static void main(String[] args) 
    { 
        // Creating an array of objects 
        Employee[] employees = {new Employee(""John"", 25), 
            new Employee(""Tim"", 30), 
            new Employee(""Tom"", 35)}; 

		// Cloning the array 
        Employee[] clone = employees.clone(); 

        // Printing the current array 
        System.out.println(""Employees array:""); 
        for (Employee emp : employees) { 
            System.out.println(emp); 
        } 

        // Printing the cloned array 
        System.out.println(""Cloned Employees array:""); 
        for (Employee emp : clone) { 
            System.out.println(emp); 
        } 
    } 
} 

class Employee implements Cloneable { 
    String name; 
    int age;

    Employee(String name, int age) 
    { 
        this.name = name; 
        this.age = age; 
    } 

    // Override clone method 
    @Override
    protected Object clone() throws CloneNotSupportedException 
    { 
        return super.clone(); 
    } 

    @Override
    public String toString() 
    { 
        return this.name + "" "" + this.age; 
    } 
}"
8813,Create an array of 10 numbers in Java and assign random values from 1 to 10 to each item of the array.,"int[] nums = new int[10];
Random rand = new Random();

for(int i=0; i<nums.length; i++) {
    nums[i] = rand.nextInt(10) + 1;
}","### Instruction: 
 Create an array of 10 numbers in Java and assign random values from 1 to 10 to each item of the array. 
 ### Response:
 int[] nums = new int[10];
Random rand = new Random();

for(int i=0; i<nums.length; i++) {
    nums[i] = rand.nextInt(10) + 1;
}"
8831,Construct a query in Java to find the last day of the month.,"Calendar now = Calendar.getInstance();
int lastDayOfMonth = now.getActualMaximum(Calendar.DAY_OF_MONTH);","### Instruction: 
 Construct a query in Java to find the last day of the month. 
 ### Response:
 Calendar now = Calendar.getInstance();
int lastDayOfMonth = now.getActualMaximum(Calendar.DAY_OF_MONTH);"
8848,"Write a Java program to replace all non-alphanumeric characters with underscores.
Input: Hello, World!","public class ReplaceNonAlpha {
 
  public static void main(String[] args) {
 
    String string = ""Hello, World!"";
 
    string = string.replaceAll(""[^A-Za-z0-9]"", ""_"");
    System.out.println(string);
  }
}","### Instruction: 
 Write a Java program to replace all non-alphanumeric characters with underscores. 
 ### Input: Hello, World! 
 ### Response:
 public class ReplaceNonAlpha {
 
  public static void main(String[] args) {
 
    String string = ""Hello, World!"";
 
    string = string.replaceAll(""[^A-Za-z0-9]"", ""_"");
    System.out.println(string);
  }
}"
8897,"Create a function in Java to remove values from an array that are greater than a given number.
Input: int[] array = {5, 8, 2, 9, 10, 6};","public static int[] removeGreater(int [] array, int limit){
  return Arrays.stream(array)
        .filter(x -> x < limit)
        .toArray();
}","### Instruction: 
 Create a function in Java to remove values from an array that are greater than a given number. 
 ### Input: int[] array = {5, 8, 2, 9, 10, 6}; 
 ### Response:
 public static int[] removeGreater(int [] array, int limit){
  return Arrays.stream(array)
        .filter(x -> x < limit)
        .toArray();
}"
8909,"Create a Java program for finding the first non-repeated character in a string.
Input: String: hello","public class NonRepeatedCharacters 
{ 
    static final int NO_OF_CHARS = 256; 
      
    /* Returns an array of size 256 conaining count 
    of characters in the passed char array */
    static int[] getCharCountArray(String str) 
    { 
        int count[] = new int[NO_OF_CHARS]; 
        int len = str.length(); 
          
        /* Increment count of characters in count[] */
        for (int i = 0; i < len; i++) 
            count[str.charAt(i)]++; 
          
        return count; 
    } 
      
    /* The function returns index of first non-repeating 
    character in a string. If all characters are repeating 
    then returns -1 */
    static int firstNonRepeating(String str) 
    { 
        int count[] = getCharCountArray(str); 
        int index = -1, i; 
          
        for (i = 0; i < str.length(); i++) 
        { 
            if (count[str.charAt(i)] == 1) 
            { 
                index = i; 
                break; 
            }    
        }   
          
        return index; 
    } 
}","### Instruction: 
 Create a Java program for finding the first non-repeated character in a string. 
 ### Input: String: hello 
 ### Response:
 public class NonRepeatedCharacters 
{ 
    static final int NO_OF_CHARS = 256; 
      
    /* Returns an array of size 256 conaining count 
    of characters in the passed char array */
    static int[] getCharCountArray(String str) 
    { 
        int count[] = new int[NO_OF_CHARS]; 
        int len = str.length(); 
          
        /* Increment count of characters in count[] */
        for (int i = 0; i < len; i++) 
            count[str.charAt(i)]++; 
          
        return count; 
    } 
      
    /* The function returns index of first non-repeating 
    character in a string. If all characters are repeating 
    then returns -1 */
    static int firstNonRepeating(String str) 
    { 
        int count[] = getCharCountArray(str); 
        int index = -1, i; 
          
        for (i = 0; i < str.length(); i++) 
        { 
            if (count[str.charAt(i)] == 1) 
            { 
                index = i; 
                break; 
            }    
        }   
          
        return index; 
    } 
}"
8931,Write an expression in Java to calculate the exponential value of a number.,Math.exp(x),"### Instruction: 
 Write an expression in Java to calculate the exponential value of a number. 
 ### Response:
 Math.exp(x)"
8932,"Debug the following Java code snippet to makes sure it is syntactically correct:
Input: public class Test 
{ 
   public static void main(String[] args) 
   { 
       int num1 = 0; 
       int num2 = 0; 
       if (num1 = 0) 
       { 
          num2 = 1; 
       } 
    } 
}","public class Test 
{ 
   public static void main(String[] args) 
   { 
       int num1 = 0; 
       int num2 = 0; 
       if (num1 == 0) 
       { 
          num2 = 1; 
       } 
    } 
}","### Instruction: 
 Debug the following Java code snippet to makes sure it is syntactically correct: 
 ### Input: public class Test 
{ 
   public static void main(String[] args) 
   { 
       int num1 = 0; 
       int num2 = 0; 
       if (num1 = 0) 
       { 
          num2 = 1; 
       } 
    } 
} 
 ### Response:
 public class Test 
{ 
   public static void main(String[] args) 
   { 
       int num1 = 0; 
       int num2 = 0; 
       if (num1 == 0) 
       { 
          num2 = 1; 
       } 
    } 
}"
8984,"Edit the following Java code to create a method which will calculate the area of a rectangle, given its width and length.
Input: public class Rectangle {
  private double width;
  private double length;","public class Rectangle {
  private double width;
  private double length;
 
  public double calculateArea() {
    return width * length;
  }
}","### Instruction: 
 Edit the following Java code to create a method which will calculate the area of a rectangle, given its width and length. 
 ### Input: public class Rectangle {
  private double width;
  private double length; 
 ### Response:
 public class Rectangle {
  private double width;
  private double length;
 
  public double calculateArea() {
    return width * length;
  }
}"
8987,"Write a Java program that counts the number of vowels in a given string.
Input: String str = ""This is a test string"";","public class VowelCounter {

 public static int countVowels(String str) {
  int count = 0;
  for(int i = 0; i < str.length(); i++) {
   char currentChar = str.charAt(i);
   if(currentChar == 'a' || currentChar == 'e' || currentChar == 'i' || currentChar == 'o' || currentChar == 'u') {
    count++;
   }
  }
  return count;
 }

 public static void main(String[] args) {
  String str = ""This is a test string"";
  int count = countVowels(str);
  System.out.println(""Number of vowels = "" + count);
 }
}","### Instruction: 
 Write a Java program that counts the number of vowels in a given string. 
 ### Input: String str = ""This is a test string""; 
 ### Response:
 public class VowelCounter {

 public static int countVowels(String str) {
  int count = 0;
  for(int i = 0; i < str.length(); i++) {
   char currentChar = str.charAt(i);
   if(currentChar == 'a' || currentChar == 'e' || currentChar == 'i' || currentChar == 'o' || currentChar == 'u') {
    count++;
   }
  }
  return count;
 }

 public static void main(String[] args) {
  String str = ""This is a test string"";
  int count = countVowels(str);
  System.out.println(""Number of vowels = "" + count);
 }
}"
9024,"Given a list of numbers, write a function in Java to arrange the list in ascending order.
Input: nums = [10, 2, 9, 6]","static int[] sortAscending(int[] nums) {
    for (int i = 0; i < nums.length-1; i++) {
        for (int j = 0; j < nums.length-1-i; j++) {
            if (nums[j] > nums[j+1]) {
                int temp = nums[j];
                nums[j] = nums[j+1];
                nums[j+1] = temp;
            }
        }
    }
    return nums;
}","### Instruction: 
 Given a list of numbers, write a function in Java to arrange the list in ascending order. 
 ### Input: nums = [10, 2, 9, 6] 
 ### Response:
 static int[] sortAscending(int[] nums) {
    for (int i = 0; i < nums.length-1; i++) {
        for (int j = 0; j < nums.length-1-i; j++) {
            if (nums[j] > nums[j+1]) {
                int temp = nums[j];
                nums[j] = nums[j+1];
                nums[j+1] = temp;
            }
        }
    }
    return nums;
}"
9025,Create a Java program to implement the classic Tic Tac Toe game.,"import java.util.Scanner;

public class TicTacToe {
 
    public static char[][] board = new char[3][3];
    public static boolean playerX;
    public static Scanner scan;
 
    public static void main(String[] args) {
        scan = new Scanner(System.in);
        playerX = true;
        initializeBoard();
 
        while(true) {
            printBoard();
            nextMove(playerX);
            if(checkWinner()) {
                break;
            }
            playerX = !playerX;
        }
 
    }
 
    public static void initializeBoard() {
        for(int i=0;i<3;i++)
            for(int j=0;j<3;j++)
                board[i][j] = '-';
    }
 
    public static void printBoard() {
        System.out.println(""-------------"");
        for (int i = 0; i < 3; i++) {
            System.out.print(""| "");
            for (int j = 0; j < 3; j++) {
                System.out.print(board[i][j] + "" | "");
            }
            System.out.println();
        }
        System.out.println(""-------------"");
    }
 
    public static void nextMove(boolean player) {
        if(player)
            System.out.print(""Player X, enter your move row,col: "");
        else
            System.out.print(""Player O, enter your move row,col: "");
 
        int row = scan.nextInt() - 1;
        int col = scan.nextInt() - 1;
        board[row][col] = player ? 'X' : 'O';
    }
 
    public static boolean checkWinner() {
        // Horizontal win
        for(int i=0;i<3;i++) {
            if(board[i][0] == board[i][1] && board[i][1] == board[i][2])
                return true;
        }
 
        // Vertical win
        for(int j=0;j<3;j++) {
            if(board[0][j] == board[1][j] && board[1][j] == board[2][j])
                return true;
        }
 
        // Diagonal win
        if(board[0][0] == board[1][1] && board[1][1] == board[2][2])
            return true;
        if(board[2][0] == board[1][1] && board[1][1] == board[0][2])
            return true;
 
        return false;
    }
 
}","### Instruction: 
 Create a Java program to implement the classic Tic Tac Toe game. 
 ### Response:
 import java.util.Scanner;

public class TicTacToe {
 
    public static char[][] board = new char[3][3];
    public static boolean playerX;
    public static Scanner scan;
 
    public static void main(String[] args) {
        scan = new Scanner(System.in);
        playerX = true;
        initializeBoard();
 
        while(true) {
            printBoard();
            nextMove(playerX);
            if(checkWinner()) {
                break;
            }
            playerX = !playerX;
        }
 
    }
 
    public static void initializeBoard() {
        for(int i=0;i<3;i++)
            for(int j=0;j<3;j++)
                board[i][j] = '-';
    }
 
    public static void printBoard() {
        System.out.println(""-------------"");
        for (int i = 0; i < 3; i++) {
            System.out.print(""| "");
            for (int j = 0; j < 3; j++) {
                System.out.print(board[i][j] + "" | "");
            }
            System.out.println();
        }
        System.out.println(""-------------"");
    }
 
    public static void nextMove(boolean player) {
        if(player)
            System.out.print(""Player X, enter your move row,col: "");
        else
            System.out.print(""Player O, enter your move row,col: "");
 
        int row = scan.nextInt() - 1;
        int col = scan.nextInt() - 1;
        board[row][col] = player ? 'X' : 'O';
    }
 
    public static boolean checkWinner() {
        // Horizontal win
        for(int i=0;i<3;i++) {
            if(board[i][0] == board[i][1] && board[i][1] == board[i][2])
                return true;
        }
 
        // Vertical win
        for(int j=0;j<3;j++) {
            if(board[0][j] == board[1][j] && board[1][j] == board[2][j])
                return true;
        }
 
        // Diagonal win
        if(board[0][0] == board[1][1] && board[1][1] == board[2][2])
            return true;
        if(board[2][0] == board[1][1] && board[1][1] == board[0][2])
            return true;
 
        return false;
    }
 
}"
9063,Write a code in Java to find the GCD of two numbers,"public static int gcd(int num1, int num2)
{
    if(num2==0)
        return num1;
    return gcd(num2, num1%num2);
}","### Instruction: 
 Write a code in Java to find the GCD of two numbers 
 ### Response:
 public static int gcd(int num1, int num2)
{
    if(num2==0)
        return num1;
    return gcd(num2, num1%num2);
}"
9077,"Create a Java function to remove duplicate characters in a string.
Input: string: hello","public string removeDuplicateChars(String str){ 
  Set<Character> set = new HashSet<Character>(); 
  StringBuffer sb = new StringBuffer(); 
  for (int i = 0; i < str.length(); i++) { 
    Character ch = str.charAt(i); 
    if(!set.contains(ch)) { 
      set.add(ch); 
      sb.append(ch); 
    } 
  } 
  return sb.toString(); 
}","### Instruction: 
 Create a Java function to remove duplicate characters in a string. 
 ### Input: string: hello 
 ### Response:
 public string removeDuplicateChars(String str){ 
  Set<Character> set = new HashSet<Character>(); 
  StringBuffer sb = new StringBuffer(); 
  for (int i = 0; i < str.length(); i++) { 
    Character ch = str.charAt(i); 
    if(!set.contains(ch)) { 
      set.add(ch); 
      sb.append(ch); 
    } 
  } 
  return sb.toString(); 
}"
9094,"Write a Java program to find the second most frequent character in a string.
Input: String: ""Hello World!""","public class SecondMostFrequent {

  public static char findSecondMostFrequent(String str) {
    int[] counts = new int[26];
    for(int i = 0; i < str.length(); i++)
      counts[str.charAt(i)- 'a']++;

    int index = 0;
    int max_count = 0;
 
    for(int i = 0; i < str.length(); i++) {
     
      if(counts[str.charAt(i) - 'a'] > max_count) {
        max_count = counts[str.charAt(i) - 'a'];
        index = i;
      }
    }
    
    int sec_max = 0;
    int sec_index = 0;
 
    for(int i = 0; i < str.length(); i++) {
     
      if(counts[str.charAt(i) - 'a'] > sec_max && counts[str.charAt(i) - 'a'] < max_count) {
        sec_max = counts[str.charAt(i) - 'a'];
        sec_index = i;
      }
    }
 
    return str.charAt(sec_index);
  }
 
  public static void main(String args[]) {
    String str = ""hello world!"";
    System.out.println( findSecondMostFrequent(str));
  }
}","### Instruction: 
 Write a Java program to find the second most frequent character in a string. 
 ### Input: String: ""Hello World!"" 
 ### Response:
 public class SecondMostFrequent {

  public static char findSecondMostFrequent(String str) {
    int[] counts = new int[26];
    for(int i = 0; i < str.length(); i++)
      counts[str.charAt(i)- 'a']++;

    int index = 0;
    int max_count = 0;
 
    for(int i = 0; i < str.length(); i++) {
     
      if(counts[str.charAt(i) - 'a'] > max_count) {
        max_count = counts[str.charAt(i) - 'a'];
        index = i;
      }
    }
    
    int sec_max = 0;
    int sec_index = 0;
 
    for(int i = 0; i < str.length(); i++) {
     
      if(counts[str.charAt(i) - 'a'] > sec_max && counts[str.charAt(i) - 'a'] < max_count) {
        sec_max = counts[str.charAt(i) - 'a'];
        sec_index = i;
      }
    }
 
    return str.charAt(sec_index);
  }
 
  public static void main(String args[]) {
    String str = ""hello world!"";
    System.out.println( findSecondMostFrequent(str));
  }
}"
9140,Create a class in Java to build a singly linked list.,"public class SinglyLinkedList { 
     
    Node head; // head of list 
     
    // Linked list Node. 
    // This inner class is made static 
    // so that main() can access it 
    static class Node { 
        int data; 
        Node next; 
        Node(int d) 
        { 
            data = d; 
            next = null; 
        } // Constructor 
    } 
     public void printList() 
    { 
        Node n = head; 
        while (n != null) { 
            System.out.print(n.data + "" ""); 
            n = n.next; 
        } 
    } 
 
    public void push(int new_data) 
    { 
        
        Node new_node = new Node(new_data); 
  
       
        new_node.next = head; 
 
        head = new_node; 
    } 
}","### Instruction: 
 Create a class in Java to build a singly linked list. 
 ### Response:
 public class SinglyLinkedList { 
     
    Node head; // head of list 
     
    // Linked list Node. 
    // This inner class is made static 
    // so that main() can access it 
    static class Node { 
        int data; 
        Node next; 
        Node(int d) 
        { 
            data = d; 
            next = null; 
        } // Constructor 
    } 
     public void printList() 
    { 
        Node n = head; 
        while (n != null) { 
            System.out.print(n.data + "" ""); 
            n = n.next; 
        } 
    } 
 
    public void push(int new_data) 
    { 
        
        Node new_node = new Node(new_data); 
  
       
        new_node.next = head; 
 
        head = new_node; 
    } 
}"
9172,Construct a while loop with an if-else statement in Java to print all odd numbers between 1 to 10.,"int i = 1;
while (i <= 10) { 
    if (i % 2 != 0) {
        System.out.print(i + "" ""); 
    }
    i++;
}","### Instruction: 
 Construct a while loop with an if-else statement in Java to print all odd numbers between 1 to 10. 
 ### Response:
 int i = 1;
while (i <= 10) { 
    if (i % 2 != 0) {
        System.out.print(i + "" ""); 
    }
    i++;
}"
9200,"Create a Java program to compute the distance between two points.
Input: PointA = (2, 3)
PointB = (4, 9)","public class DistanceCalculator {

    public static double distanceCalculator(int x1, int y1, int x2, int y2) {
        double distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));
        return distance;
    }
}

class DistanceCalculatorTest {

    public static void main(String[] args) {
        double distance = DistanceCalculator.distanceCalculator(2, 3, 4, 9);
        System.out.println(""The distance between two points is "" + distance); 
    }

}","### Instruction: 
 Create a Java program to compute the distance between two points. 
 ### Input: PointA = (2, 3)
PointB = (4, 9) 
 ### Response:
 public class DistanceCalculator {

    public static double distanceCalculator(int x1, int y1, int x2, int y2) {
        double distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));
        return distance;
    }
}

class DistanceCalculatorTest {

    public static void main(String[] args) {
        double distance = DistanceCalculator.distanceCalculator(2, 3, 4, 9);
        System.out.println(""The distance between two points is "" + distance); 
    }

}"
9214,Implement a function in Java to find the frequency of a particular character in a given string.,"public static int getCharFrequency(String str, char c) 
{ 
   int count = 0; 
   for (int i = 0; i < str.length(); i++)  
   { 
       if (str.charAt(i) == c) 
           count++; 
   } 
   return count; 
}","### Instruction: 
 Implement a function in Java to find the frequency of a particular character in a given string. 
 ### Response:
 public static int getCharFrequency(String str, char c) 
{ 
   int count = 0; 
   for (int i = 0; i < str.length(); i++)  
   { 
       if (str.charAt(i) == c) 
           count++; 
   } 
   return count; 
}"
9215,"Suppose you have two dictionaries, A and B. Write a code in Java to find the intersection of A and B.
Input: A = {1: 'a', 2: 'b'}
B = {2: 'b', 3: 'c'}","public static HashMap<Integer, String> intersect(HashMap<Integer, String> A, HashMap<Integer, String> B) {
    HashMap<Integer, String> result = new HashMap<>();
    for (Integer key: A.keySet()) {
        if (B.containsKey(key)) {
            result.put(key, A.get(key));
        }
    }
    return result;
}","### Instruction: 
 Suppose you have two dictionaries, A and B. Write a code in Java to find the intersection of A and B. 
 ### Input: A = {1: 'a', 2: 'b'}
B = {2: 'b', 3: 'c'} 
 ### Response:
 public static HashMap<Integer, String> intersect(HashMap<Integer, String> A, HashMap<Integer, String> B) {
    HashMap<Integer, String> result = new HashMap<>();
    for (Integer key: A.keySet()) {
        if (B.containsKey(key)) {
            result.put(key, A.get(key));
        }
    }
    return result;
}"
9224,Write a Java program to find the length of a string without using the length() method.,"public static int stringLength(String str){
    int count = 0;
    for (int i=0; i<str.length(); i++){
        if(str.charAt(i)!=' '){
            count++;
        }
    }
    return count;
}","### Instruction: 
 Write a Java program to find the length of a string without using the length() method. 
 ### Response:
 public static int stringLength(String str){
    int count = 0;
    for (int i=0; i<str.length(); i++){
        if(str.charAt(i)!=' '){
            count++;
        }
    }
    return count;
}"
9242,Write a Class in Java that represents a student.,"public class Student {
  private String firstName;
  private String lastName;
  private int studentId;

  public Student(String firstName, String lastName, int studentId) {
    this.firstName = firstName;
    this.lastName = lastName;
    this.studentId = studentId;
  }

  public String getFirstName() {
    return firstName;
  }

  public String getLastName() {
    return lastName;
  }

  public int getStudentId() {
    return studentId;
  }
}","### Instruction: 
 Write a Class in Java that represents a student. 
 ### Response:
 public class Student {
  private String firstName;
  private String lastName;
  private int studentId;

  public Student(String firstName, String lastName, int studentId) {
    this.firstName = firstName;
    this.lastName = lastName;
    this.studentId = studentId;
  }

  public String getFirstName() {
    return firstName;
  }

  public String getLastName() {
    return lastName;
  }

  public int getStudentId() {
    return studentId;
  }
}"
9248,"What is the output of the following Java code?
int x = 7;
int y = 3;
int z = x % y;",The output is that the value of z is 1.,"### Instruction: 
 What is the output of the following Java code?
int x = 7;
int y = 3;
int z = x % y; 
 ### Response:
 The output is that the value of z is 1."
9267,"Modify the code to make sure it is valid according to Java language specification.
Input: public class HelloWorld {
    public static void main(String[] args) {
        System.out.println(""Hello World!"");
    }
}","public class HelloWorld {
    public static void main(String[] args) {
        System.out.println(""Hello World!"");
    }
}","### Instruction: 
 Modify the code to make sure it is valid according to Java language specification. 
 ### Input: public class HelloWorld {
    public static void main(String[] args) {
        System.out.println(""Hello World!"");
    }
} 
 ### Response:
 public class HelloWorld {
    public static void main(String[] args) {
        System.out.println(""Hello World!"");
    }
}"
9363,"Update the Java code to check the condition that the value of ""amount"" is greater than 1000 or not.
Input: public class Main {
	public static void main(String args[]){
		double amount = 1100;
		// TODO
		System.out.println(""The amount is greater than 1000: ""+ amount);
	}
}","public class Main {
	public static void main(String args[]){
		double amount = 1100;
		if (amount > 1000) {
			System.out.println(""The amount is greater than 1000: ""+ amount);
		}
	}
}","### Instruction: 
 Update the Java code to check the condition that the value of ""amount"" is greater than 1000 or not. 
 ### Input: public class Main {
	public static void main(String args[]){
		double amount = 1100;
		// TODO
		System.out.println(""The amount is greater than 1000: ""+ amount);
	}
} 
 ### Response:
 public class Main {
	public static void main(String args[]){
		double amount = 1100;
		if (amount > 1000) {
			System.out.println(""The amount is greater than 1000: ""+ amount);
		}
	}
}"
9402,"Re-write the code below in Java to reverse the first string while preserving the order of the elements in the other strings.
Input: arr = [string1, string2, string3]","String[] arr = {""string1"", ""string2"", ""string3""}; 
 
String temp = arr[0]; 
arr[0] = new StringBuilder(temp).reverse().toString(); 
 
System.out.println(Arrays.toString(arr));","### Instruction: 
 Re-write the code below in Java to reverse the first string while preserving the order of the elements in the other strings. 
 ### Input: arr = [string1, string2, string3] 
 ### Response:
 String[] arr = {""string1"", ""string2"", ""string3""}; 
 
String temp = arr[0]; 
arr[0] = new StringBuilder(temp).reverse().toString(); 
 
System.out.println(Arrays.toString(arr));"
9413,Create a function in Java that takes an integer n and prints the first n Fibonacci numbers.,"public void printFibonacci(int n) {
	int a = 0, b = 1, c;
 
	if (n == 0)
		return;
 
	for (int i = 1; i <= n; i++) {
		c = a + b;
		System.out.print(a + "" "");
		a = b;
		b = c;
	}
}","### Instruction: 
 Create a function in Java that takes an integer n and prints the first n Fibonacci numbers. 
 ### Response:
 public void printFibonacci(int n) {
	int a = 0, b = 1, c;
 
	if (n == 0)
		return;
 
	for (int i = 1; i <= n; i++) {
		c = a + b;
		System.out.print(a + "" "");
		a = b;
		b = c;
	}
}"
9423,Implement a Java program to search the title of books in a library.,"public class LibrarySearch {

    private ArrayList<String> titles;

    public LibrarySearch() {
        titles = new ArrayList<String>();
    }
    
    public boolean searchTitle(String title) {
        for (int i = 0; i < titles.size(); i++) {
            String titleInList = titles.get(i);
            if (title.equals(titleInList)) {
                return true;
            }
        }
       
        return false;
    }

}","### Instruction: 
 Implement a Java program to search the title of books in a library. 
 ### Response:
 public class LibrarySearch {

    private ArrayList<String> titles;

    public LibrarySearch() {
        titles = new ArrayList<String>();
    }
    
    public boolean searchTitle(String title) {
        for (int i = 0; i < titles.size(); i++) {
            String titleInList = titles.get(i);
            if (title.equals(titleInList)) {
                return true;
            }
        }
       
        return false;
    }

}"
9443,Write a code snippet in Java that sorts a given array in ascending order.,"public static void sortAscending(int[] arr) { 
    int n = arr.length; 
    for (int i = 0; i < n-1; i++) 
        for (int j = 0; j < n-i-1; j++) 
            if (arr[j] > arr[j+1]) 
            { 
                int temp = arr[j]; 
                arr[j] = arr[j+1]; 
                arr[j+1] = temp; 
            } 
}","### Instruction: 
 Write a code snippet in Java that sorts a given array in ascending order. 
 ### Response:
 public static void sortAscending(int[] arr) { 
    int n = arr.length; 
    for (int i = 0; i < n-1; i++) 
        for (int j = 0; j < n-i-1; j++) 
            if (arr[j] > arr[j+1]) 
            { 
                int temp = arr[j]; 
                arr[j] = arr[j+1]; 
                arr[j+1] = temp; 
            } 
}"
9449,"Write a Java method to transform a String input into a String array with each element the length of 4.
Input: String input = ""HelloWorld"";","public static String[] stringToArray(String input) {
    String[] stringArray = new String[input.length()/4];
    int count = 0;
    for (int i = 0; i < input.length(); i += 4) {
        stringArray[count] = input.substring(i, i+4);
        count++;
    }
    return stringArray;
}","### Instruction: 
 Write a Java method to transform a String input into a String array with each element the length of 4. 
 ### Input: String input = ""HelloWorld""; 
 ### Response:
 public static String[] stringToArray(String input) {
    String[] stringArray = new String[input.length()/4];
    int count = 0;
    for (int i = 0; i < input.length(); i += 4) {
        stringArray[count] = input.substring(i, i+4);
        count++;
    }
    return stringArray;
}"
9455,"Write a function in Java that takes an input string and changes the case of each letter to its opposite (i.e. upper case to lower case and vice versa).
Input: String input = ""Hello World"";","public static String changeCase(String input) {
    StringBuilder outputString = new StringBuilder();
    for (int i = 0; i < input.length(); i++) {
        char c = input.charAt(i);
        if (Character.isUpperCase(c)) {
            outputString.append(Character.toLowerCase(c));
        } else {
            outputString.append(Character.toUpperCase(c));
        }
    }
    return outputString.toString();
}","### Instruction: 
 Write a function in Java that takes an input string and changes the case of each letter to its opposite (i.e. upper case to lower case and vice versa). 
 ### Input: String input = ""Hello World""; 
 ### Response:
 public static String changeCase(String input) {
    StringBuilder outputString = new StringBuilder();
    for (int i = 0; i < input.length(); i++) {
        char c = input.charAt(i);
        if (Character.isUpperCase(c)) {
            outputString.append(Character.toLowerCase(c));
        } else {
            outputString.append(Character.toUpperCase(c));
        }
    }
    return outputString.toString();
}"
9490,"Construct a Java class to execute a binary search.
Input: public class BinarySearch {

}","public class BinarySearch { 
  
    int binarySearch(int arr[], int l, int r, int x) { 
        if (r >= l) { 
            int mid = l + (r - l) / 2; 
  
            if (arr[mid] == x) 
                return mid; 
  
            if (arr[mid] > x) 
                return binarySearch(arr, l, mid - 1, x); 
  
            return binarySearch(arr, mid + 1, r, x); 
        } 
        return -1; 
    } 
}","### Instruction: 
 Construct a Java class to execute a binary search. 
 ### Input: public class BinarySearch {

} 
 ### Response:
 public class BinarySearch { 
  
    int binarySearch(int arr[], int l, int r, int x) { 
        if (r >= l) { 
            int mid = l + (r - l) / 2; 
  
            if (arr[mid] == x) 
                return mid; 
  
            if (arr[mid] > x) 
                return binarySearch(arr, l, mid - 1, x); 
  
            return binarySearch(arr, mid + 1, r, x); 
        } 
        return -1; 
    } 
}"
9507,"Add the following lines after the 2nd line in the given java program
Input: public class Calculator {
    public static void main(String args[]) {
        int a = 10;
        int b = 20;

Add the following lines
int c = a + b;
System.out.println(""Sum : ""+c);","public class Calculator {
    public static void main(String args[]) {
        int a = 10;
        int b = 20;
        int c = a + b;
        System.out.println(""Sum : ""+c);
    }
}","### Instruction: 
 Add the following lines after the 2nd line in the given java program 
 ### Input: public class Calculator {
    public static void main(String args[]) {
        int a = 10;
        int b = 20;

Add the following lines
int c = a + b;
System.out.println(""Sum : ""+c); 
 ### Response:
 public class Calculator {
    public static void main(String args[]) {
        int a = 10;
        int b = 20;
        int c = a + b;
        System.out.println(""Sum : ""+c);
    }
}"
9524,"Create a class in Java called Student that stores four pieces of data: name, id, major, and gpa.","class Student { 
  
    // data members 
    String name; 
    int id; 
    String major; 
    double gpa; 
  
    // constructors 
    Student(String name, int id, String major, double gpa) {  
        this.name = name; 
        this.id = id; 
        this.major = major; 
        this.gpa = gpa; 
    } 
  
  
    // method 1 
    public String getName() 
    { 
        return this.name; 
    } 
  
    // method 2 
    public int getId() 
    { 
        return this.id; 
    } 
  
    // method 3 
    public String getMajor() 
    { 
        return this.major; 
    } 
  
    // method 4 
    public double getGPA() 
    { 
        return this.gpa; 
    } 
  
    // method 5 
    public void setName(String name) 
    { 
        this.name = name; 
    } 
  
    // method 6 
    public void setId(int id) 
    { 
        this.id = id; 
    } 
  
    // method 7 
    public void setMajor(String major) 
    { 
        this.major = major; 
    } 
  
    // method 8 
    public void setGPA(int gpa) 
    { 
        this.gpa = gpa; 
    } 
}","### Instruction: 
 Create a class in Java called Student that stores four pieces of data: name, id, major, and gpa. 
 ### Response:
 class Student { 
  
    // data members 
    String name; 
    int id; 
    String major; 
    double gpa; 
  
    // constructors 
    Student(String name, int id, String major, double gpa) {  
        this.name = name; 
        this.id = id; 
        this.major = major; 
        this.gpa = gpa; 
    } 
  
  
    // method 1 
    public String getName() 
    { 
        return this.name; 
    } 
  
    // method 2 
    public int getId() 
    { 
        return this.id; 
    } 
  
    // method 3 
    public String getMajor() 
    { 
        return this.major; 
    } 
  
    // method 4 
    public double getGPA() 
    { 
        return this.gpa; 
    } 
  
    // method 5 
    public void setName(String name) 
    { 
        this.name = name; 
    } 
  
    // method 6 
    public void setId(int id) 
    { 
        this.id = id; 
    } 
  
    // method 7 
    public void setMajor(String major) 
    { 
        this.major = major; 
    } 
  
    // method 8 
    public void setGPA(int gpa) 
    { 
        this.gpa = gpa; 
    } 
}"
9594,Assign values to the given array of length 10 and print it using a Java program.,"public class PrintArray {
    public static void main(String[] args) {
        int[] array = new int[10];
        for (int i = 0; i < 10; i++) {
            array[i] = i;
        }
        for (int i = 0; i < 10; i++) {
            System.out.print(array[i] + "" "");
        }
    }
}","### Instruction: 
 Assign values to the given array of length 10 and print it using a Java program. 
 ### Response:
 public class PrintArray {
    public static void main(String[] args) {
        int[] array = new int[10];
        for (int i = 0; i < 10; i++) {
            array[i] = i;
        }
        for (int i = 0; i < 10; i++) {
            System.out.print(array[i] + "" "");
        }
    }
}"
9627,Create a method in Java for encrypting a string using the Advanced Encryption Standard (AES).,"public static String AESEncrypt(String toEncrypt) throws Exception
  {
  	SecureRandom secureRandom = new SecureRandom();  
	byte[] keyBytes = new byte[16];
	secureRandom.nextBytes(keyBytes);
    	SecretKeySpec secretKeySpec = new SecretKeySpec(keyBytes,""AES"");
      
	Cipher cipher = Cipher.getInstance(""AES"");
	cipher.init(Cipher.ENCRYPT_MODE,secretKeySpec);
	byte[] encrypted = cipher.doFinal(toEncrypt.getBytes());
	String encryptedString = Base64.encodeBase64String(encrypted);
    
	return encryptedString;
  }","### Instruction: 
 Create a method in Java for encrypting a string using the Advanced Encryption Standard (AES). 
 ### Response:
 public static String AESEncrypt(String toEncrypt) throws Exception
  {
  	SecureRandom secureRandom = new SecureRandom();  
	byte[] keyBytes = new byte[16];
	secureRandom.nextBytes(keyBytes);
    	SecretKeySpec secretKeySpec = new SecretKeySpec(keyBytes,""AES"");
      
	Cipher cipher = Cipher.getInstance(""AES"");
	cipher.init(Cipher.ENCRYPT_MODE,secretKeySpec);
	byte[] encrypted = cipher.doFinal(toEncrypt.getBytes());
	String encryptedString = Base64.encodeBase64String(encrypted);
    
	return encryptedString;
  }"
9638,Design a Java program to display the numbers from 1 to 100 in a tabular format.,"public class Table {

  public static void main(String[] args) {
    for (int i = 1 ; i <= 100 ; i++){
      System.out.println(i);
      if (i % 10 == 0){
        System.out.println("""");
      }
    }
  }
}","### Instruction: 
 Design a Java program to display the numbers from 1 to 100 in a tabular format. 
 ### Response:
 public class Table {

  public static void main(String[] args) {
    for (int i = 1 ; i <= 100 ; i++){
      System.out.println(i);
      if (i % 10 == 0){
        System.out.println("""");
      }
    }
  }
}"
9640,Write a function in Java that takes an array of integers and sorts it in ascending order.,"public static void sortArray(int[] arr) 
{ 
    int n = arr.length; 

    for (int i = 0; i < n-1; i++) 
    { 
        int min_idx = i; 
        for (int j = i+1; j < n; j++) 
            if (arr[j] < arr[min_idx]) 
                min_idx = j; 
  
        int temp = arr[min_idx]; 
        arr[min_idx] = arr[i]; 
        arr[i] = temp; 
    } 
}","### Instruction: 
 Write a function in Java that takes an array of integers and sorts it in ascending order. 
 ### Response:
 public static void sortArray(int[] arr) 
{ 
    int n = arr.length; 

    for (int i = 0; i < n-1; i++) 
    { 
        int min_idx = i; 
        for (int j = i+1; j < n; j++) 
            if (arr[j] < arr[min_idx]) 
                min_idx = j; 
  
        int temp = arr[min_idx]; 
        arr[min_idx] = arr[i]; 
        arr[i] = temp; 
    } 
}"
9643,Write a function in Java to split a string into an array of substrings.,"public static String[] splitString(String s, String regex) 
{ 
    return s.split(regex); 
}","### Instruction: 
 Write a function in Java to split a string into an array of substrings. 
 ### Response:
 public static String[] splitString(String s, String regex) 
{ 
    return s.split(regex); 
}"
9646,"Write a Java script to filter out repeat elements in an array.
Input: [1, 2, 3, 2, 4, 4, 1]","let arr = [1, 2, 3, 2, 4, 4, 1]; 
let unique = [...new Set(arr)];
console.log(unique); // [1, 2, 3, 4]","### Instruction: 
 Write a Java script to filter out repeat elements in an array. 
 ### Input: [1, 2, 3, 2, 4, 4, 1] 
 ### Response:
 let arr = [1, 2, 3, 2, 4, 4, 1]; 
let unique = [...new Set(arr)];
console.log(unique); // [1, 2, 3, 4]"
9647,"Modify the given Java Program to generate the Fibonacci Series till provided number of terms.
Input: int n = 10;","public class Fibonacci { 

    static int fib(int n) 
    { 
    if (n <= 1) 
       return n; 
    return fib(n-1) + fib(n-2); 
    } 
       
    public static void main (String args[]) 
    { 
    int n = 10; 
    System.out.println(fib(n)); 
    } 
}","### Instruction: 
 Modify the given Java Program to generate the Fibonacci Series till provided number of terms. 
 ### Input: int n = 10; 
 ### Response:
 public class Fibonacci { 

    static int fib(int n) 
    { 
    if (n <= 1) 
       return n; 
    return fib(n-1) + fib(n-2); 
    } 
       
    public static void main (String args[]) 
    { 
    int n = 10; 
    System.out.println(fib(n)); 
    } 
}"
9657,"Write a class in Java with assigned variables and adequate getters and setters.
Input: ClassName: Student
Variables: name (String), age (integer)","public class Student {
    private String name;
    private int age;

    // Getters & Setters
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }
}","### Instruction: 
 Write a class in Java with assigned variables and adequate getters and setters. 
 ### Input: ClassName: Student
Variables: name (String), age (integer) 
 ### Response:
 public class Student {
    private String name;
    private int age;

    // Getters & Setters
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }
}"
9670,Create a Java program to read in an integer from the user and output the number doubled.,"import java.util.Scanner;

public class NumberDoubling {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print(""Enter an integer: "");
        int number = scanner.nextInt();

        System.out.println(""The doubled number is: "" + (number * 2));
    }
}","### Instruction: 
 Create a Java program to read in an integer from the user and output the number doubled. 
 ### Response:
 import java.util.Scanner;

public class NumberDoubling {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print(""Enter an integer: "");
        int number = scanner.nextInt();

        System.out.println(""The doubled number is: "" + (number * 2));
    }
}"
9688,"Calculate the sum of the numbers in the given array using the Java 8 Stream API.
Input: nums = [2, 4, 6, 10]","int sum = Arrays.stream(nums).sum();
System.out.println(sum); // prints 22","### Instruction: 
 Calculate the sum of the numbers in the given array using the Java 8 Stream API. 
 ### Input: nums = [2, 4, 6, 10] 
 ### Response:
 int sum = Arrays.stream(nums).sum();
System.out.println(sum); // prints 22"
9693,Implement a program in Java that reverses a string input given by the user.,"import java.util.Scanner; 

public class ReverseString {
 public static void main(String[] args) {
 
  Scanner scanner = new Scanner(System.in);
  String inputString = scanner.nextLine();
  String reversedString = """";
 
  for(int i = inputString.length() - 1; i >= 0; i-- ) {
   reversedString = reversedString + inputString.charAt(i);
  }
 
  System.out.println(reversedString);
 }
}","### Instruction: 
 Implement a program in Java that reverses a string input given by the user. 
 ### Response:
 import java.util.Scanner; 

public class ReverseString {
 public static void main(String[] args) {
 
  Scanner scanner = new Scanner(System.in);
  String inputString = scanner.nextLine();
  String reversedString = """";
 
  for(int i = inputString.length() - 1; i >= 0; i-- ) {
   reversedString = reversedString + inputString.charAt(i);
  }
 
  System.out.println(reversedString);
 }
}"
9726,"Suggest changes to the following Java code so that it sorts an array of strings by length.
Input: String[] data = {""Hello"",""Hi"",""Bye""};

Arrays.sort(data);","String[] data = {""Hello"",""Hi"",""Bye""};

Comparator<String> comparator = Comparator.comparingInt(String::length);
Arrays.sort(data, comparator);","### Instruction: 
 Suggest changes to the following Java code so that it sorts an array of strings by length. 
 ### Input: String[] data = {""Hello"",""Hi"",""Bye""};

Arrays.sort(data); 
 ### Response:
 String[] data = {""Hello"",""Hi"",""Bye""};

Comparator<String> comparator = Comparator.comparingInt(String::length);
Arrays.sort(data, comparator);"
9734,"Write a Java code to sort the following array in ascending order [3, 6, 2, 8, 1, 9].
Input: [3, 6, 2, 8, 1, 9]","public class SortList { 
  
  public static void sort (int[] array) { 
    int temp;
    
    for (int i = 0; i < array.length; i++) { 
    for (int j = 0; j < array.length; j++) { 
      if (array[j] > array[i]) { 
        temp = array[i]; 
        array[i] = array[j]; 
        array[j] = temp; 
      }
    } 
  }
  } 
  
  public static void main(String args[]) { 
    int[] array = {3, 6, 2, 8, 1, 9}; 
    
    sort(array); 
    
    System.out.print(""Sorted list: \n""); 
    for (int i = 0; i < array.length; i++) 
      System.out.print(array[i] + "" ""); 
  } 
}","### Instruction: 
 Write a Java code to sort the following array in ascending order [3, 6, 2, 8, 1, 9]. 
 ### Input: [3, 6, 2, 8, 1, 9] 
 ### Response:
 public class SortList { 
  
  public static void sort (int[] array) { 
    int temp;
    
    for (int i = 0; i < array.length; i++) { 
    for (int j = 0; j < array.length; j++) { 
      if (array[j] > array[i]) { 
        temp = array[i]; 
        array[i] = array[j]; 
        array[j] = temp; 
      }
    } 
  }
  } 
  
  public static void main(String args[]) { 
    int[] array = {3, 6, 2, 8, 1, 9}; 
    
    sort(array); 
    
    System.out.print(""Sorted list: \n""); 
    for (int i = 0; i < array.length; i++) 
      System.out.print(array[i] + "" ""); 
  } 
}"
9746,"Create a Java class to store a student's name, ID, and GPA.","public class Student {

    private String name;
    private int id;
    private Double gpa;
    
    public Student(String name, int id, Double gpa) {
        this.name = name;
        this.id = id;
        this.gpa = gpa;
    }
    
    public String getName() {
        return name;
    }
    
    public int getId() {
        return id;
    }
    
    public Double getGPA() {
        return gpa;
    }
}","### Instruction: 
 Create a Java class to store a student's name, ID, and GPA. 
 ### Response:
 public class Student {

    private String name;
    private int id;
    private Double gpa;
    
    public Student(String name, int id, Double gpa) {
        this.name = name;
        this.id = id;
        this.gpa = gpa;
    }
    
    public String getName() {
        return name;
    }
    
    public int getId() {
        return id;
    }
    
    public Double getGPA() {
        return gpa;
    }
}"
9821,Compare and contrast Java and Python for developing applications.,"Java and Python are both popular programming languages used for developing applications. Java is a statically typed language and requires extra effort in the form of type checking during compilation, while Python is a dynamically typed language and no type checking is required. Java is more suitable for large-scale enterprise software development and is known for its performance and scalability, whereas Python is generally easier to work with and better suited for smaller projects and prototyping. Java is also more verbose than Python, requiring more lines of code to accomplish the same task. On the other hand, Python has a large library of additional modules and provides simpler syntax and more intuitive programming style.","### Instruction: 
 Compare and contrast Java and Python for developing applications. 
 ### Response:
 Java and Python are both popular programming languages used for developing applications. Java is a statically typed language and requires extra effort in the form of type checking during compilation, while Python is a dynamically typed language and no type checking is required. Java is more suitable for large-scale enterprise software development and is known for its performance and scalability, whereas Python is generally easier to work with and better suited for smaller projects and prototyping. Java is also more verbose than Python, requiring more lines of code to accomplish the same task. On the other hand, Python has a large library of additional modules and provides simpler syntax and more intuitive programming style."
9824,Write a function in Java that takes a string as an argument and returns the length of the longest word in the string.,"public static int findLongestWordLength(String str) {
    String[] words = str.split("" "");
    int maxLength = 0;

    for (String word : words)
        maxLength = Math.max(maxLength, word.length());

    return maxLength;
}","### Instruction: 
 Write a function in Java that takes a string as an argument and returns the length of the longest word in the string. 
 ### Response:
 public static int findLongestWordLength(String str) {
    String[] words = str.split("" "");
    int maxLength = 0;

    for (String word : words)
        maxLength = Math.max(maxLength, word.length());

    return maxLength;
}"
9860,"Write code in Java to calculate the median from an array of integers.
Input: arr = [7, 22, 21, 19, 17, 24]","public double getMedian(int[] arr) { 
    Arrays.sort(arr); 
  
    int len = arr.length; 
    double median = 0; 
  
    if (len % 2 == 0) { 
        int a = arr[len / 2]; 
        int b = arr[(len / 2) - 1]; 
        median = (a + b) / 2.0; 
    } 
  
    else { 
        median = arr[len / 2]; 
    } 
  
    return median; 
}","### Instruction: 
 Write code in Java to calculate the median from an array of integers. 
 ### Input: arr = [7, 22, 21, 19, 17, 24] 
 ### Response:
 public double getMedian(int[] arr) { 
    Arrays.sort(arr); 
  
    int len = arr.length; 
    double median = 0; 
  
    if (len % 2 == 0) { 
        int a = arr[len / 2]; 
        int b = arr[(len / 2) - 1]; 
        median = (a + b) / 2.0; 
    } 
  
    else { 
        median = arr[len / 2]; 
    } 
  
    return median; 
}"
9872,Write a Java method to find the index of a given string in an array of strings.,"public int findIndexOfString(String[] array, String s) {
    for (int i=0; i<array.length; i++) {
        if(array[i].equals(s)) 
            return i;
    }
    return -1;
}","### Instruction: 
 Write a Java method to find the index of a given string in an array of strings. 
 ### Response:
 public int findIndexOfString(String[] array, String s) {
    for (int i=0; i<array.length; i++) {
        if(array[i].equals(s)) 
            return i;
    }
    return -1;
}"
9873,Create a class in Java and define two float variables and two float methods.,"public class FloatExample {
    float var1, var2;

    public void setVar1(float a) {
        var1 = a;
    }

    public float getVar1() {
        return var1;
    }

    public void setVar2(float b) {
        var2 = b;
    }

    public float getVar2() {
        return var2;
    }
}","### Instruction: 
 Create a class in Java and define two float variables and two float methods. 
 ### Response:
 public class FloatExample {
    float var1, var2;

    public void setVar1(float a) {
        var1 = a;
    }

    public float getVar1() {
        return var1;
    }

    public void setVar2(float b) {
        var2 = b;
    }

    public float getVar2() {
        return var2;
    }
}"
9903,Create an object-oriented program in Java which can display the current date and time.,"import java.util.Date;

public class DateTime {
   public static void main(String args[]) {
      Date date = new Date();
      System.out.println(""Current date and time is: "" + date);
   }
}","### Instruction: 
 Create an object-oriented program in Java which can display the current date and time. 
 ### Response:
 import java.util.Date;

public class DateTime {
   public static void main(String args[]) {
      Date date = new Date();
      System.out.println(""Current date and time is: "" + date);
   }
}"
9923,Implement the update function in Java for a queue data structure.,"public void update(int index, Object newElement) {
    if(index < 0 || index >= size()) {
      throw new NoSuchElementException();
    }
    Node node = head;
    for(int i = 0; i < index; i++) {
      node = node.next;
    }
    node.element = newElement;
}","### Instruction: 
 Implement the update function in Java for a queue data structure. 
 ### Response:
 public void update(int index, Object newElement) {
    if(index < 0 || index >= size()) {
      throw new NoSuchElementException();
    }
    Node node = head;
    for(int i = 0; i < index; i++) {
      node = node.next;
    }
    node.element = newElement;
}"
9925,Create a Java function to take two integers as parameters and return their sum as a double.,"public static double sumIntegers(int a, int b){
    return (double) (a + b);
}","### Instruction: 
 Create a Java function to take two integers as parameters and return their sum as a double. 
 ### Response:
 public static double sumIntegers(int a, int b){
    return (double) (a + b);
}"
9938,"Given an array of integers and a target value, write a Java program to determine whether this array contains two elements with the given target sum.
Input: arr = [2, 4, 6, 8, 10], target = 8","boolean containsTargetSum(int[] arr, int target){
  for (int i = 0; i < arr.length; i++){
    for (int j = 1; j < arr.length; j++){
      if (arr[i] + arr[j] == target)
        return true;
    }
  }
  return false;
}","### Instruction: 
 Given an array of integers and a target value, write a Java program to determine whether this array contains two elements with the given target sum. 
 ### Input: arr = [2, 4, 6, 8, 10], target = 8 
 ### Response:
 boolean containsTargetSum(int[] arr, int target){
  for (int i = 0; i < arr.length; i++){
    for (int j = 1; j < arr.length; j++){
      if (arr[i] + arr[j] == target)
        return true;
    }
  }
  return false;
}"
9965,Construct a method in Java to calculate the average of an array of numbers,"public static double calculateAverage(int[] numbers) {
    double total = 0;
    for (int num : numbers) {
        total += num;
    }
    return total / numbers.length;
}","### Instruction: 
 Construct a method in Java to calculate the average of an array of numbers 
 ### Response:
 public static double calculateAverage(int[] numbers) {
    double total = 0;
    for (int num : numbers) {
        total += num;
    }
    return total / numbers.length;
}"
9995,"Write a code in Java to convert any string to camel case format.
Input: String = ""this_is_a_string""","""""""
Write a code to convert any string to camel case format in Java
""""""
public class CamelCaseFormat {
    public static String toCamelCase(String s){
        String[] parts = s.split(""_"");
        String camelCaseString = """";
        for (String part : parts){
            camelCaseString = camelCaseString + toProperCase(part);
        }
        return camelCaseString;
    }
    
    static String toProperCase(String s) {
        return s.substring(0, 1).toUpperCase() +
               s.substring(1).toLowerCase();
    }
 
    public static void main(String[] args)
    {
        String s = ""this_is_a_string"";
        System.out.println(toCamelCase(s));
    }
}","### Instruction: 
 Write a code in Java to convert any string to camel case format. 
 ### Input: String = ""this_is_a_string"" 
 ### Response:
 """"""
Write a code to convert any string to camel case format in Java
""""""
public class CamelCaseFormat {
    public static String toCamelCase(String s){
        String[] parts = s.split(""_"");
        String camelCaseString = """";
        for (String part : parts){
            camelCaseString = camelCaseString + toProperCase(part);
        }
        return camelCaseString;
    }
    
    static String toProperCase(String s) {
        return s.substring(0, 1).toUpperCase() +
               s.substring(1).toLowerCase();
    }
 
    public static void main(String[] args)
    {
        String s = ""this_is_a_string"";
        System.out.println(toCamelCase(s));
    }
}"
10147,"Write a Java code snippet to print out the value of the variable ""num"" to the console.
Input: int num = 10;",System.out.println(num);,"### Instruction: 
 Write a Java code snippet to print out the value of the variable ""num"" to the console. 
 ### Input: int num = 10; 
 ### Response:
 System.out.println(num);"
10148,"Create a Java method that takes a string and returns the same string with all vowels replaced by asterisks (ie. ""Hello"" should return ""H*ll*"").
Input: String s = ""Hello"";","public String replaceVowels(String s) {
    String result = """";
    for (int i = 0; i < s.length(); i++) {
        char ch = s.charAt(i);
        if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') {
            result += ""*"";
        } else {
            result += ch;
        }
    }
    return result;
}","### Instruction: 
 Create a Java method that takes a string and returns the same string with all vowels replaced by asterisks (ie. ""Hello"" should return ""H*ll*""). 
 ### Input: String s = ""Hello""; 
 ### Response:
 public String replaceVowels(String s) {
    String result = """";
    for (int i = 0; i < s.length(); i++) {
        char ch = s.charAt(i);
        if (ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') {
            result += ""*"";
        } else {
            result += ch;
        }
    }
    return result;
}"
10159,Write a for loop in Java that prints out the even numbers between 0 and 10.,"for(int i = 0; i <= 10; i++){
    if(i % 2 == 0){
        System.out.println(i);
    }
}","### Instruction: 
 Write a for loop in Java that prints out the even numbers between 0 and 10. 
 ### Response:
 for(int i = 0; i <= 10; i++){
    if(i % 2 == 0){
        System.out.println(i);
    }
}"
10162,"Write a function in Java that takes an integer and returns an array of all the prime numbers from 2 up to the number.
Input: number = 10","public static int[] getAllPrimeNumbers(int number){
    int[] primeNumbers = new int[number];
    int index = 0;
    for (int i = 2; i <= number; i++){
        if(isPrime(i)){
            primeNumbers[index] = i;
            index++;
        }
    }
    return primeNumbers;
}

public static boolean isPrime(int number){
    for(int i=2; i<number; i++){
        if(number%i == 0){
            return false;
        }
    }
    return true;
}","### Instruction: 
 Write a function in Java that takes an integer and returns an array of all the prime numbers from 2 up to the number. 
 ### Input: number = 10 
 ### Response:
 public static int[] getAllPrimeNumbers(int number){
    int[] primeNumbers = new int[number];
    int index = 0;
    for (int i = 2; i <= number; i++){
        if(isPrime(i)){
            primeNumbers[index] = i;
            index++;
        }
    }
    return primeNumbers;
}

public static boolean isPrime(int number){
    for(int i=2; i<number; i++){
        if(number%i == 0){
            return false;
        }
    }
    return true;
}"
10186,Write a Java program for computing the product of two matrixes.,"public class MatrixProduct { 
  
    // Method for matrix multiplication 
    static int[][] multiplyMatrix(int[][] matrix1,  
                                    int[][] matrix2) 
    { 
        int rowsInA = matrix1.length; 
        int columnsInA = matrix1[0].length; // same as rows in B 
        int columnsInB = matrix2[0].length; 
        int[][] product = new int[rowsInA][columnsInB]; 
        for (int i = 0; i < rowsInA; i++) { 
            for (int j = 0; j < columnsInB; j++) { 
                for (int k = 0; k < columnsInA; k++) { 
                    product[i][j] += matrix1[i][k] * matrix2[k][j]; 
                } 
            } 
        } 
        return product; 
    } 
  
    // Driver code 
    public static void main(String args[]) 
    { 
        int[][] matrixA = { { 1, 2, 3 }, 
                            { 4, 5, 6 } 
                            }; 
  
        int[][] matrixB = { { 7, 8 }, 
                            { 9, 10 }, 
                            { 11, 12 } 
                            }; 
  
        int[][] product = multiplyMatrix(matrixA, matrixB); # the product matrix 
  
        // Display the result 
        System.out.println(""Product of two matrices is : ""); 
        for (int[] row : product) { 
            for (int column : row) { 
                System.out.print(column + "" ""); 
            } 
            System.out.println(); 
        } 
    } 
}","### Instruction: 
 Write a Java program for computing the product of two matrixes. 
 ### Response:
 public class MatrixProduct { 
  
    // Method for matrix multiplication 
    static int[][] multiplyMatrix(int[][] matrix1,  
                                    int[][] matrix2) 
    { 
        int rowsInA = matrix1.length; 
        int columnsInA = matrix1[0].length; // same as rows in B 
        int columnsInB = matrix2[0].length; 
        int[][] product = new int[rowsInA][columnsInB]; 
        for (int i = 0; i < rowsInA; i++) { 
            for (int j = 0; j < columnsInB; j++) { 
                for (int k = 0; k < columnsInA; k++) { 
                    product[i][j] += matrix1[i][k] * matrix2[k][j]; 
                } 
            } 
        } 
        return product; 
    } 
  
    // Driver code 
    public static void main(String args[]) 
    { 
        int[][] matrixA = { { 1, 2, 3 }, 
                            { 4, 5, 6 } 
                            }; 
  
        int[][] matrixB = { { 7, 8 }, 
                            { 9, 10 }, 
                            { 11, 12 } 
                            }; 
  
        int[][] product = multiplyMatrix(matrixA, matrixB); # the product matrix 
  
        // Display the result 
        System.out.println(""Product of two matrices is : ""); 
        for (int[] row : product) { 
            for (int column : row) { 
                System.out.print(column + "" ""); 
            } 
            System.out.println(); 
        } 
    } 
}"
10217,"Cut and paste the following Java code snippet and add a condition to ensure that the number entered is always greater than 0.
Input: int number;
Scanner in = new Scanner (System.in);
number = in.nextInt ();","int number;
Scanner in = new Scanner (System.in);
do {
    number = in.nextInt ();
} while (number <= 0);","### Instruction: 
 Cut and paste the following Java code snippet and add a condition to ensure that the number entered is always greater than 0. 
 ### Input: int number;
Scanner in = new Scanner (System.in);
number = in.nextInt (); 
 ### Response:
 int number;
Scanner in = new Scanner (System.in);
do {
    number = in.nextInt ();
} while (number <= 0);"
10229,Generate a function in Java for finding the largest number in an array.,"public static int largestNumber(int[] arr) { 
    int max = arr[0]; 
    for (int i = 1; i < arr.length; i++)
        if (arr[i] > max) 
            max = arr[i]; 
    return max; 
}","### Instruction: 
 Generate a function in Java for finding the largest number in an array. 
 ### Response:
 public static int largestNumber(int[] arr) { 
    int max = arr[0]; 
    for (int i = 1; i < arr.length; i++)
        if (arr[i] > max) 
            max = arr[i]; 
    return max; 
}"
10232,"Write a Java program to sort the elements of an int array in the descending order.
Input: [1, 10, 4, 2, 5, 3, 9]","public class ArraySort { 
    public static void main(String[] args) 
    { 
        int array[] = {1, 10, 4, 2, 5, 3, 9}; 

        int n = array.length; 

        for (int i = 0; i < n-1; i++) 
            for (int j = 0; j < n-i-1; j++) 
                if (array[j] < array[j+1]) { 
                    int temp = array[j]; 
                    array[j] = array[j+1]; 
                    array[j+1] = temp; 
                } 

        for (int i=0; i<n; ++i) 
            System.out.println(array[i] + "" ""); 
    } 
}","### Instruction: 
 Write a Java program to sort the elements of an int array in the descending order. 
 ### Input: [1, 10, 4, 2, 5, 3, 9] 
 ### Response:
 public class ArraySort { 
    public static void main(String[] args) 
    { 
        int array[] = {1, 10, 4, 2, 5, 3, 9}; 

        int n = array.length; 

        for (int i = 0; i < n-1; i++) 
            for (int j = 0; j < n-i-1; j++) 
                if (array[j] < array[j+1]) { 
                    int temp = array[j]; 
                    array[j] = array[j+1]; 
                    array[j+1] = temp; 
                } 

        for (int i=0; i<n; ++i) 
            System.out.println(array[i] + "" ""); 
    } 
}"
10246,Create a web server in Java to handle a POST request.,"import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;

public class WebServer {
    public static void main(String[] args) throws Exception {
        // listen for a connection from a client
        ServerSocket connection = new ServerSocket(80);
        Socket clientSocket = connection.accept();
        BufferedReader in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
        // get the request data
        String line;
        String requestData = """";
        while ((line = in.readLine()) != null) {
            if (line.startsWith(""POST"")) {
                requestData = line.split(""\\s+"")[1];
                break;
            }
        }
        // send a response
        PrintWriter out = new PrintWriter(clientSocket.getOutputStream(), true);
        out.print(""HTTP 200 OK\n"");
        // respond to the request
        out.write(handleRequest(requestData));
        out.flush();
        out.close();
    }

    public static String handleRequest(String requestData) {
        return ""Received request data: "" + requestData;
    }
}","### Instruction: 
 Create a web server in Java to handle a POST request. 
 ### Response:
 import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;

public class WebServer {
    public static void main(String[] args) throws Exception {
        // listen for a connection from a client
        ServerSocket connection = new ServerSocket(80);
        Socket clientSocket = connection.accept();
        BufferedReader in = new BufferedReader(new InputStreamReader(clientSocket.getInputStream()));
        // get the request data
        String line;
        String requestData = """";
        while ((line = in.readLine()) != null) {
            if (line.startsWith(""POST"")) {
                requestData = line.split(""\\s+"")[1];
                break;
            }
        }
        // send a response
        PrintWriter out = new PrintWriter(clientSocket.getOutputStream(), true);
        out.print(""HTTP 200 OK\n"");
        // respond to the request
        out.write(handleRequest(requestData));
        out.flush();
        out.close();
    }

    public static String handleRequest(String requestData) {
        return ""Received request data: "" + requestData;
    }
}"
10257,Implement a webhook endpoint in Java using Spring MVC to process a payment request.,"@RestController
public class PaymentController {
    @PostMapping(""/payment"")
    public void processPayment(@RequestBody PaymentRequest request) {
        // Process the payment inside this method
    }
}","### Instruction: 
 Implement a webhook endpoint in Java using Spring MVC to process a payment request. 
 ### Response:
 @RestController
public class PaymentController {
    @PostMapping(""/payment"")
    public void processPayment(@RequestBody PaymentRequest request) {
        // Process the payment inside this method
    }
}"
10278,"Rewrite the following Java code using a switch statement instead of if/else.
Input: int time = 10;

if (time < 12) {
  System.out.println(""Good morning"");
} else if (time < 17) {
  System.out.println(""Good afternoon"");
} else {
  System.out.println(""Good evening"");
}","int time = 10;

switch (time) {
  case time < 12:
    System.out.println(""Good morning"");
    break;
  case time < 17:
    System.out.println(""Good afternoon"");
    break;
  case time >= 17:
    System.out.println(""Good evening"");
    break;
}","### Instruction: 
 Rewrite the following Java code using a switch statement instead of if/else. 
 ### Input: int time = 10;

if (time < 12) {
  System.out.println(""Good morning"");
} else if (time < 17) {
  System.out.println(""Good afternoon"");
} else {
  System.out.println(""Good evening"");
} 
 ### Response:
 int time = 10;

switch (time) {
  case time < 12:
    System.out.println(""Good morning"");
    break;
  case time < 17:
    System.out.println(""Good afternoon"");
    break;
  case time >= 17:
    System.out.println(""Good evening"");
    break;
}"
10311,"Edit the following code in Java to include a new method “printName()”.
Input: public class Person {
    String name;
    void displayAge(){
        System.out.println(""age is: ""+ age);   
    }
}","public class Person {
    String name;
    
    void displayAge(){
        System.out.println(""age is: ""+ age);   
    }
    
    void printName(){
        System.out.println(""Name: ""+ name);
    }
}","### Instruction: 
 Edit the following code in Java to include a new method “printName()”. 
 ### Input: public class Person {
    String name;
    void displayAge(){
        System.out.println(""age is: ""+ age);   
    }
} 
 ### Response:
 public class Person {
    String name;
    
    void displayAge(){
        System.out.println(""age is: ""+ age);   
    }
    
    void printName(){
        System.out.println(""Name: ""+ name);
    }
}"
10340,Write a Java program to calculate the area of a square given the length of a side.,"public class CalculateSquareArea {
 
  public static double calculateArea(double sideLength) {
    double area = sideLength * sideLength;
    return area;
  }
 
  public static void main(String[] args) {
    double sideLength = 5;
 
    double area = calculateArea(sideLength);
    System.out.println(""The area of a square with side length "" + sideLength + "" is "" + area);
  }
}","### Instruction: 
 Write a Java program to calculate the area of a square given the length of a side. 
 ### Response:
 public class CalculateSquareArea {
 
  public static double calculateArea(double sideLength) {
    double area = sideLength * sideLength;
    return area;
  }
 
  public static void main(String[] args) {
    double sideLength = 5;
 
    double area = calculateArea(sideLength);
    System.out.println(""The area of a square with side length "" + sideLength + "" is "" + area);
  }
}"
10353,Create a Java method that computes the factorial of an integer.,"public static int factorial(int n) {
   int factorial = 1; 
   for (int i = 1; i <= n; i++) {
      factorial *= i;
   }
   return factorial;
}","### Instruction: 
 Create a Java method that computes the factorial of an integer. 
 ### Response:
 public static int factorial(int n) {
   int factorial = 1; 
   for (int i = 1; i <= n; i++) {
      factorial *= i;
   }
   return factorial;
}"
10363,Create a class in Java that will print the two integers added together.,"public class Addition {
    public static int add(int x, int y) {
        return x + y;
    }

    public static void main(String[] args) {
        System.out.println(add(5,7));
    }
}","### Instruction: 
 Create a class in Java that will print the two integers added together. 
 ### Response:
 public class Addition {
    public static int add(int x, int y) {
        return x + y;
    }

    public static void main(String[] args) {
        System.out.println(add(5,7));
    }
}"
10365,"What changes can you suggest in order to optimize the following Java code?
Input: public class Student {
    //private variables
    private String name;
    private int age;
    private int grade;","public class Student {
    //private variables
    private String name;
    private int age;
    private int grade;
  
    //create getters and setters for the fields
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public int getGrade() {
        return grade;
    }

    public void setGrade(int grade) {
        this.grade = grade;
    }
}","### Instruction: 
 What changes can you suggest in order to optimize the following Java code? 
 ### Input: public class Student {
    //private variables
    private String name;
    private int age;
    private int grade; 
 ### Response:
 public class Student {
    //private variables
    private String name;
    private int age;
    private int grade;
  
    //create getters and setters for the fields
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        this.age = age;
    }

    public int getGrade() {
        return grade;
    }

    public void setGrade(int grade) {
        this.grade = grade;
    }
}"
10381,Create a while loop in Java to calculate the Fibonacci numbers up to the number 10.,"int num1 = 0, num2 = 1, fibo = 0;

while(fibo <= 10) {
     fibo = num1 + num2;
     num1 = num2;
     num2 = fibo;
     System.out.print(fibo +"" ""); 
}","### Instruction: 
 Create a while loop in Java to calculate the Fibonacci numbers up to the number 10. 
 ### Response:
 int num1 = 0, num2 = 1, fibo = 0;

while(fibo <= 10) {
     fibo = num1 + num2;
     num1 = num2;
     num2 = fibo;
     System.out.print(fibo +"" ""); 
}"
10422,"Modify the given Java code to print the first character of each word in a sentence.
Input: String sentence = ""Today is a good day"";","String sentence = ""Today is a good day"";
String[] words = sentence.split("" "");
 
for (String word : words) {
    System.out.print(word.charAt(0));
}","### Instruction: 
 Modify the given Java code to print the first character of each word in a sentence. 
 ### Input: String sentence = ""Today is a good day""; 
 ### Response:
 String sentence = ""Today is a good day"";
String[] words = sentence.split("" "");
 
for (String word : words) {
    System.out.print(word.charAt(0));
}"
10513,"Write a Java code snippet to set the 3rd element in an array of integers to the value 5.
Input: int[] arr = {1, 2, 3, 4, 5};",arr[2] = 5;,"### Instruction: 
 Write a Java code snippet to set the 3rd element in an array of integers to the value 5. 
 ### Input: int[] arr = {1, 2, 3, 4, 5}; 
 ### Response:
 arr[2] = 5;"
10520,"Generate a class in Java for a contact record, including name, age, phone number, email, and address information.","public class Contact {
    String name;
    int age;
    String phoneNumber;
    String email;
    String address;
    
    public Contact(String name, int age, String phoneNumber, String email, String address){
        this.name     = name;
        this.age      = age;
        this.phoneNumber = phoneNumber;
        this.email    = email;
        this.address  = address;
    }
    
    public String getName(){
        return name;
    }
    public int getAge(){
        return age;
    }
    public String getPhoneNumber(){
        return phoneNumber;
    }
    public String getEmail(){
        return email;
    }
    public String getAddress(){
        return address;
    }
    
    
    public void setName(String name){
        this.name = name;
    }
    public void setAge(int age){
        this.age = age;
    }
    public void setPhoneNumber(String phoneNumber){
        this.phoneNumber = phoneNumber;
    }
    public void setEmail(String email){
        this.email = email;
    }
    public void setAddress(String address){
        this.address = address;
    }
    
}","### Instruction: 
 Generate a class in Java for a contact record, including name, age, phone number, email, and address information. 
 ### Response:
 public class Contact {
    String name;
    int age;
    String phoneNumber;
    String email;
    String address;
    
    public Contact(String name, int age, String phoneNumber, String email, String address){
        this.name     = name;
        this.age      = age;
        this.phoneNumber = phoneNumber;
        this.email    = email;
        this.address  = address;
    }
    
    public String getName(){
        return name;
    }
    public int getAge(){
        return age;
    }
    public String getPhoneNumber(){
        return phoneNumber;
    }
    public String getEmail(){
        return email;
    }
    public String getAddress(){
        return address;
    }
    
    
    public void setName(String name){
        this.name = name;
    }
    public void setAge(int age){
        this.age = age;
    }
    public void setPhoneNumber(String phoneNumber){
        this.phoneNumber = phoneNumber;
    }
    public void setEmail(String email){
        this.email = email;
    }
    public void setAddress(String address){
        this.address = address;
    }
    
}"
10553,Write a method 'addString' in Java that takes two strings as parameters and returns a single string that concatenates the two strings.,"public static String addString(String str1, String str2) {
	return str1 + str2;
}","### Instruction: 
 Write a method 'addString' in Java that takes two strings as parameters and returns a single string that concatenates the two strings. 
 ### Response:
 public static String addString(String str1, String str2) {
	return str1 + str2;
}"
10558,Create a function in Java that takes a string as a parameter and returns the string in lowercase letters.,"public static String LowerCase(String str) {
  return str.toLowerCase();
}","### Instruction: 
 Create a function in Java that takes a string as a parameter and returns the string in lowercase letters. 
 ### Response:
 public static String LowerCase(String str) {
  return str.toLowerCase();
}"
10589,"Compile a java program that prints out ""Hello World!""",javac HelloWorld.java,"### Instruction: 
 Compile a java program that prints out ""Hello World!"" 
 ### Response:
 javac HelloWorld.java"
10622,"Develop a GUI application in Java to reverse a string.
Input: User should be able to enter a string in the text field.","import java.awt.BorderLayout;
import java.awt.event.*;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextField;

class Reverse extends JFrame 
{
  JTextField inputTF;
  JTextField outputTF;
  JButton reverseBtn;
 
  Reverse() 
  {
    inputTF = new JTextField(20);
    outputTF = new JTextField(20);
    outputTF.setEditable(false);
    reverseBtn = new JButton(""Reverse"");

    JPanel panel = new JPanel();
    panel.add(inputTF);
    panel.add(reverseBtn);
    panel.add(outputTF);

    reverseBtn.addActionListener(new ActionListener() 
    {
      public void actionPerformed(ActionEvent ae) 
      {
        String userInput = inputTF.getText();
        StringBuilder sb = new StringBuilder();
        sb.append(userInput);
        sb = sb.reverse();

        outputTF.setText(sb.toString());
      } 
    });
    add(panel, BorderLayout.CENTER);
    setVisible(true);
  } 
}","### Instruction: 
 Develop a GUI application in Java to reverse a string. 
 ### Input: User should be able to enter a string in the text field. 
 ### Response:
 import java.awt.BorderLayout;
import java.awt.event.*;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTextField;

class Reverse extends JFrame 
{
  JTextField inputTF;
  JTextField outputTF;
  JButton reverseBtn;
 
  Reverse() 
  {
    inputTF = new JTextField(20);
    outputTF = new JTextField(20);
    outputTF.setEditable(false);
    reverseBtn = new JButton(""Reverse"");

    JPanel panel = new JPanel();
    panel.add(inputTF);
    panel.add(reverseBtn);
    panel.add(outputTF);

    reverseBtn.addActionListener(new ActionListener() 
    {
      public void actionPerformed(ActionEvent ae) 
      {
        String userInput = inputTF.getText();
        StringBuilder sb = new StringBuilder();
        sb.append(userInput);
        sb = sb.reverse();

        outputTF.setText(sb.toString());
      } 
    });
    add(panel, BorderLayout.CENTER);
    setVisible(true);
  } 
}"
10628,Create an algorithm in Java that prints the prime numbers between 1 and 100.,"class PrimeNumber{  
 public static void main(String args[]){  
  int i,m=0,flag=0;    
  int n=100;//it is the number to be checked  
  m=n/2;    
  for(i=2;i<=m;i++){    
   if(n%i==0){    
   System.out.println(""Number is not prime"");    
   flag=1;    
   break;    
   }    
  }    
  if(flag==0)    
  System.out.println(""Number is prime"");    
}  
}","### Instruction: 
 Create an algorithm in Java that prints the prime numbers between 1 and 100. 
 ### Response:
 class PrimeNumber{  
 public static void main(String args[]){  
  int i,m=0,flag=0;    
  int n=100;//it is the number to be checked  
  m=n/2;    
  for(i=2;i<=m;i++){    
   if(n%i==0){    
   System.out.println(""Number is not prime"");    
   flag=1;    
   break;    
   }    
  }    
  if(flag==0)    
  System.out.println(""Number is prime"");    
}  
}"
10708,"Rewrite the given code so that it uses Java 8 features.
Input: import java.util.ArrayList; 
List<String> list = new ArrayList<String>();
int sum = 0; 
for(String str: list){ 
   sum += Integer.parseInt(str); 
}","import java.util.List; 
List<String> list = List.of(""1"",""2"",""3"",""4"");
int sum = list.stream()
               .mapToInt(Integer::parseInt)
               .sum();","### Instruction: 
 Rewrite the given code so that it uses Java 8 features. 
 ### Input: import java.util.ArrayList; 
List<String> list = new ArrayList<String>();
int sum = 0; 
for(String str: list){ 
   sum += Integer.parseInt(str); 
} 
 ### Response:
 import java.util.List; 
List<String> list = List.of(""1"",""2"",""3"",""4"");
int sum = list.stream()
               .mapToInt(Integer::parseInt)
               .sum();"
10753,Create a Java program which will print the following pattern.,"public class Pattern {
 
    public static void main(String[] args) {
 
        for (int i = 1; i <= 5; i++) {
            for (int j = 1; j <= i; j++) {
                System.out.print(i);
            }
            System.out.println();
        }
    }
}

// Output
1
22
333
4444
55555","### Instruction: 
 Create a Java program which will print the following pattern. 
 ### Response:
 public class Pattern {
 
    public static void main(String[] args) {
 
        for (int i = 1; i <= 5; i++) {
            for (int j = 1; j <= i; j++) {
                System.out.print(i);
            }
            System.out.println();
        }
    }
}

// Output
1
22
333
4444
55555"
10761,Write a Java program that takes a String as parameter and counts how many words are in it.,"public class WordCounter {
    public static int countWords(String s) {
        String trimStr = s.trim();
        if (trimStr.isEmpty())
            return 0;
        return trimStr.split(""\\s+"").length;
    }
 
    public static void main(String args[]) {
        String s = ""This is a sample sentence"";
        System.out.println(""Number of words in the given sentence: "" + countWords(s));
    }
}","### Instruction: 
 Write a Java program that takes a String as parameter and counts how many words are in it. 
 ### Response:
 public class WordCounter {
    public static int countWords(String s) {
        String trimStr = s.trim();
        if (trimStr.isEmpty())
            return 0;
        return trimStr.split(""\\s+"").length;
    }
 
    public static void main(String args[]) {
        String s = ""This is a sample sentence"";
        System.out.println(""Number of words in the given sentence: "" + countWords(s));
    }
}"
10786,"Create a Java program to list all duplicated words in the given string.
Input: He explained the problem in an intelligent and articulate manner.","import java.util.LinkedHashSet;

public class DuplicateWords {
    public static void findDuplicates(String str) {
        String[] words = str.split(""\\s+"");
        LinkedHashSet<String> set = new LinkedHashSet<>();
        for (int i = 0; i < words.length; i++) {
            if (!set.add(words[i])) {
                System.out.println(words[i]);
            }
        }
    }

    public static void main(String[] args) {
        String str = ""He explained the problem in an intelligent and articulate manner."";
        findDuplicates(str);
    }
}

Output:
He
and","### Instruction: 
 Create a Java program to list all duplicated words in the given string. 
 ### Input: He explained the problem in an intelligent and articulate manner. 
 ### Response:
 import java.util.LinkedHashSet;

public class DuplicateWords {
    public static void findDuplicates(String str) {
        String[] words = str.split(""\\s+"");
        LinkedHashSet<String> set = new LinkedHashSet<>();
        for (int i = 0; i < words.length; i++) {
            if (!set.add(words[i])) {
                System.out.println(words[i]);
            }
        }
    }

    public static void main(String[] args) {
        String str = ""He explained the problem in an intelligent and articulate manner."";
        findDuplicates(str);
    }
}

Output:
He
and"
10838,"Create a Java program which takes a year as input and prints whether it is a leap year or not.
Input: year = 2020","public class LeapYear 
{ 
    public static void main(String args[]) 
    { 
        int year = 2020; 
        if((year % 400 == 0) || ((year % 4 == 0) && (year % 100 != 0))) 
            System.out.println(""The year is a leap year.""); 
        else
            System.out.println(""The year is not a leap year.""); 
    } 
}","### Instruction: 
 Create a Java program which takes a year as input and prints whether it is a leap year or not. 
 ### Input: year = 2020 
 ### Response:
 public class LeapYear 
{ 
    public static void main(String args[]) 
    { 
        int year = 2020; 
        if((year % 400 == 0) || ((year % 4 == 0) && (year % 100 != 0))) 
            System.out.println(""The year is a leap year.""); 
        else
            System.out.println(""The year is not a leap year.""); 
    } 
}"
10871,Create a class in Java called Student which contains string 'name' and int 'grade'.,"public class Student {
  private String name;
  private int grade;
 
  public void setName(String name) {
    this.name = name;
  }
 
  public void setGrade(int grade) {
    this.grade = grade;
  }
 
  public String getName() {
    return name;
  }
 
  public int getGrade() {
    return grade;
  }
}","### Instruction: 
 Create a class in Java called Student which contains string 'name' and int 'grade'. 
 ### Response:
 public class Student {
  private String name;
  private int grade;
 
  public void setName(String name) {
    this.name = name;
  }
 
  public void setGrade(int grade) {
    this.grade = grade;
  }
 
  public String getName() {
    return name;
  }
 
  public int getGrade() {
    return grade;
  }
}"
10895,"Write a function in Java to delete all numbers from an array which are divisible by three.
Input: [1, 2, 3, 4, 5, 6, 7, 8, 9]","public static int[] deleteByThree(int[] arr) {
  int[] result = new int[arr.length];
  int index = 0;
  for(int i = 0; i < arr.length; i++) {
    if(arr[i] % 3 != 0) {
      result[index++] = arr[i];
    }
  }
  return Arrays.copyOf(result, index);
}

System.out.println(Arrays.toString(deleteByThree(new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9}))); // Output: [1, 2, 4, 5, 7, 8 ]","### Instruction: 
 Write a function in Java to delete all numbers from an array which are divisible by three. 
 ### Input: [1, 2, 3, 4, 5, 6, 7, 8, 9] 
 ### Response:
 public static int[] deleteByThree(int[] arr) {
  int[] result = new int[arr.length];
  int index = 0;
  for(int i = 0; i < arr.length; i++) {
    if(arr[i] % 3 != 0) {
      result[index++] = arr[i];
    }
  }
  return Arrays.copyOf(result, index);
}

System.out.println(Arrays.toString(deleteByThree(new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9}))); // Output: [1, 2, 4, 5, 7, 8 ]"
10899,"Define a Java class 'Fruits' with three instance variables - name(String), quantity(int), and colour(String).","public class Fruits {
    String name;
    int quantity;
    String colour;

    public Fruits(String name, int quantity, String colour) {
        this.name = name;
        this.quantity = quantity;
        this.colour = colour;
    }
}","### Instruction: 
 Define a Java class 'Fruits' with three instance variables - name(String), quantity(int), and colour(String). 
 ### Response:
 public class Fruits {
    String name;
    int quantity;
    String colour;

    public Fruits(String name, int quantity, String colour) {
        this.name = name;
        this.quantity = quantity;
        this.colour = colour;
    }
}"
10904,"Complete the program written in Java to add two numbers and print out the sum.
Input: int a = 3;
int b = 5;","public class AddNumbers {
 public static void main(String[] args) {
  int a = 3;
  int b = 5;
  int sum = a + b;
  System.out.println(""Sum is: "" + sum);
 }
}","### Instruction: 
 Complete the program written in Java to add two numbers and print out the sum. 
 ### Input: int a = 3;
int b = 5; 
 ### Response:
 public class AddNumbers {
 public static void main(String[] args) {
  int a = 3;
  int b = 5;
  int sum = a + b;
  System.out.println(""Sum is: "" + sum);
 }
}"
10907,Design a data structure in Java for storing student information.,"public class Student {
    private String studentId;
    private String name;
    private int age;
    private String school;
    private String address;
    private String phoneNumber;

    //Getters and Setters 
    public String getStudentId() {
        return studentId;
    }
    
    public void setStudentId(String studentId) {
        this.studentId = studentId;
    }
    
    public String getName() {
        return name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    public int getAge() {
        return age;
    }
    
    public void setAge(int age) {
        this.age = age;
    }

    public String getSchool() {
        return school;
    }
    
    public void setSchool(String school) {
        this.school = school;
    }
    
    public String getAddress() {
        return address;
    }
    
    public void setAddress(String address) {
        this.address = address;
    }
    
    public String getPhoneNumber() {
        return phoneNumber;
    }
    
    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }
}","### Instruction: 
 Design a data structure in Java for storing student information. 
 ### Response:
 public class Student {
    private String studentId;
    private String name;
    private int age;
    private String school;
    private String address;
    private String phoneNumber;

    //Getters and Setters 
    public String getStudentId() {
        return studentId;
    }
    
    public void setStudentId(String studentId) {
        this.studentId = studentId;
    }
    
    public String getName() {
        return name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    public int getAge() {
        return age;
    }
    
    public void setAge(int age) {
        this.age = age;
    }

    public String getSchool() {
        return school;
    }
    
    public void setSchool(String school) {
        this.school = school;
    }
    
    public String getAddress() {
        return address;
    }
    
    public void setAddress(String address) {
        this.address = address;
    }
    
    public String getPhoneNumber() {
        return phoneNumber;
    }
    
    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }
}"
10922,"Create a function in Java to check if the sum of two given numbers is greater than two times the second number.
Input: num1 = 6, num2 = 7","public static boolean checkSum(int num1, int num2) {
    if((num1 + num2) > (2 * num2))
        return true;
    else return false;
}","### Instruction: 
 Create a function in Java to check if the sum of two given numbers is greater than two times the second number. 
 ### Input: num1 = 6, num2 = 7 
 ### Response:
 public static boolean checkSum(int num1, int num2) {
    if((num1 + num2) > (2 * num2))
        return true;
    else return false;
}"
10947,Create a class in Java for representing a Rectangle that stores length and width attributes and a method to calculate its area.,"public class Rectangle {
  int length;
  int width;
 
  public Rectangle(int length, int width) {
   this.length = length;
   this.width = width;
  }
 
  public int calculateArea() {
   return this.length * this.width;
  }
}","### Instruction: 
 Create a class in Java for representing a Rectangle that stores length and width attributes and a method to calculate its area. 
 ### Response:
 public class Rectangle {
  int length;
  int width;
 
  public Rectangle(int length, int width) {
   this.length = length;
   this.width = width;
  }
 
  public int calculateArea() {
   return this.length * this.width;
  }
}"
10949,Write a Java code snippet for creating an array with 10 random numbers between 1 and 50.,"int[] randNums = new int[10];
Random rand = new Random();

for(int i = 0; i < randNums.length; i++) {
  randNums[i] = rand.nextInt(50) + 1;
}","### Instruction: 
 Write a Java code snippet for creating an array with 10 random numbers between 1 and 50. 
 ### Response:
 int[] randNums = new int[10];
Random rand = new Random();

for(int i = 0; i < randNums.length; i++) {
  randNums[i] = rand.nextInt(50) + 1;
}"
10956,Write a java code to take a string as input and return the number of words present in it.,"import java.util.StringTokenizer; 

public class WordCounter 
{ 
    public static int countWords(String str) 
    { 
        StringTokenizer tokenizer = new StringTokenizer(str); 
        return tokenizer.countTokens(); 
    } 
  
    public static void main(String[] args) 
    { 
        String str = ""Geeks for Geeks class""; 
        System.out.println(""Number of words in a given String : "" + countWords(str)); 
    } 
}","### Instruction: 
 Write a java code to take a string as input and return the number of words present in it. 
 ### Response:
 import java.util.StringTokenizer; 

public class WordCounter 
{ 
    public static int countWords(String str) 
    { 
        StringTokenizer tokenizer = new StringTokenizer(str); 
        return tokenizer.countTokens(); 
    } 
  
    public static void main(String[] args) 
    { 
        String str = ""Geeks for Geeks class""; 
        System.out.println(""Number of words in a given String : "" + countWords(str)); 
    } 
}"
10995,"Write a loop in Java to add all elements of a given array.
Input: int[] arr = {1, 2, 3, 4, 5};","int sum = 0; 
  
for (int i = 0; i < arr.length; i++) 
    sum += arr[i];","### Instruction: 
 Write a loop in Java to add all elements of a given array. 
 ### Input: int[] arr = {1, 2, 3, 4, 5}; 
 ### Response:
 int sum = 0; 
  
for (int i = 0; i < arr.length; i++) 
    sum += arr[i];"
10999,"Write a java program to generate a Fibonacci series up to N numbers
Input: int N = 10;","public class Fibonacci{
    public static void main(String args[]) {
        int n1=0,n2=1,n3,i,count=10;
        System.out.print(n1+"" ""+n2);//printing 0 and 1 
    
        for(i=2;i<count;++i)//loop starts from 2 because 0 and 1 are already printed
        {    
            n3=n1+n2;    
            System.out.print("" ""+n3);    
            n1=n2;    
            n2=n3;    
        }
    }
}","### Instruction: 
 Write a java program to generate a Fibonacci series up to N numbers 
 ### Input: int N = 10; 
 ### Response:
 public class Fibonacci{
    public static void main(String args[]) {
        int n1=0,n2=1,n3,i,count=10;
        System.out.print(n1+"" ""+n2);//printing 0 and 1 
    
        for(i=2;i<count;++i)//loop starts from 2 because 0 and 1 are already printed
        {    
            n3=n1+n2;    
            System.out.print("" ""+n3);    
            n1=n2;    
            n2=n3;    
        }
    }
}"
11095,Write a Java class to define a student object that includes a name and a grade.,"public class Student {  
    //instance variables  
    String name;  
    int grade;  
      
    //constructor  
    public Student(String studentName, int studentGrade) {  
        name = studentName;  
        grade = studentGrade;  
    }  
      
    //methods  
    public String getName(){  
        return name;  
    }  
    public int getGrade(){  
        return grade;  
    }  
}","### Instruction: 
 Write a Java class to define a student object that includes a name and a grade. 
 ### Response:
 public class Student {  
    //instance variables  
    String name;  
    int grade;  
      
    //constructor  
    public Student(String studentName, int studentGrade) {  
        name = studentName;  
        grade = studentGrade;  
    }  
      
    //methods  
    public String getName(){  
        return name;  
    }  
    public int getGrade(){  
        return grade;  
    }  
}"
11096,Write an Iterative program in Java to print the first n terms of the Fibonacci sequence.,"public static void printFibonacciIterative(int n) 
{ 
    int prev1=0, prev2=1, sum=0; 
  
    for (int i = 0; i < n; i++) 
    { 
        System.out.print(sum + "" ""); 
        prev2 = sum; 
        sum = prev1 + prev2; 
        prev1 = prev2; 
    } 
}","### Instruction: 
 Write an Iterative program in Java to print the first n terms of the Fibonacci sequence. 
 ### Response:
 public static void printFibonacciIterative(int n) 
{ 
    int prev1=0, prev2=1, sum=0; 
  
    for (int i = 0; i < n; i++) 
    { 
        System.out.print(sum + "" ""); 
        prev2 = sum; 
        sum = prev1 + prev2; 
        prev1 = prev2; 
    } 
}"
11113,"Convert the string ""Hello World"" to upper case using a Java program.","String upperCaseString = ""Hello World"".toUpperCase();","### Instruction: 
 Convert the string ""Hello World"" to upper case using a Java program. 
 ### Response:
 String upperCaseString = ""Hello World"".toUpperCase();"
11117,Create a program in Java to print a multiplication table of size 5x5.,"for (int i = 1; i <= 5; i++) {
   System.out.printf(""%d * %d = %d\n"", i, i, i * i); 
   for (int j = 1; j <= 5; j++) {
      System.out.printf(""%d * %d = %d\n"", i, j, i * j);
   }
   System.out.println();
}","### Instruction: 
 Create a program in Java to print a multiplication table of size 5x5. 
 ### Response:
 for (int i = 1; i <= 5; i++) {
   System.out.printf(""%d * %d = %d\n"", i, i, i * i); 
   for (int j = 1; j <= 5; j++) {
      System.out.printf(""%d * %d = %d\n"", i, j, i * j);
   }
   System.out.println();
}"
11121,"Write a Java function to compare two strings and print the longer string.
Input: // Two Strings:
String str1 = ""stack"";
String Str2 = ""overflow"";","public static String longestString(String str1, String str2) {
 if (str1.length() > str2.length()) {
  return str1;
 }
 return str2;
}","### Instruction: 
 Write a Java function to compare two strings and print the longer string. 
 ### Input: // Two Strings:
String str1 = ""stack"";
String Str2 = ""overflow""; 
 ### Response:
 public static String longestString(String str1, String str2) {
 if (str1.length() > str2.length()) {
  return str1;
 }
 return str2;
}"
11134,"Implement a comparator method in Java to compare two objects of the same class.
Input: class Country {
    String name;
    double population;
    double area;
}","class CountryComparator implements Comparator<Country> {
    @Override
    public int compare(Country c1, Country c2) {
        //compare by population
        if (c1.population < c2.population) {
            return -1;
        } else if (c1.population > c2.population) {
            return 1;
        } else {
            return 0;
        }
    }
}","### Instruction: 
 Implement a comparator method in Java to compare two objects of the same class. 
 ### Input: class Country {
    String name;
    double population;
    double area;
} 
 ### Response:
 class CountryComparator implements Comparator<Country> {
    @Override
    public int compare(Country c1, Country c2) {
        //compare by population
        if (c1.population < c2.population) {
            return -1;
        } else if (c1.population > c2.population) {
            return 1;
        } else {
            return 0;
        }
    }
}"
11141,"Compile and execute this Java code.
Input: public class Main { 
 public static void main(String[] args) { 
 System.out.println(""Welcome to Java""); 
 } 
}","Compilation successful.

Welcome to Java","### Instruction: 
 Compile and execute this Java code. 
 ### Input: public class Main { 
 public static void main(String[] args) { 
 System.out.println(""Welcome to Java""); 
 } 
} 
 ### Response:
 Compilation successful.

Welcome to Java"
11161,"Write a Java program to insert a new node into a singly linked list.
Input: head -> 3 -> 4 -> 6 -> null","// Insert 8 after 4

public static Node insertNode(Node head, int data) 
{ 
    Node node = new Node(data); 
  
    // Empty List 
    if (head == null) 
    { 
        node.next=null; 
        head = node; 
        return head; 
    } 
  
    Node CurrNode = head; 
  
    while (CurrNode.data != 4) 
    { 
        CurrNode = CurrNode.next; 
    } 
  
    Node temp = CurrNode.next; 
  
    CurrNode.next = node; 
    node.next = temp; 
  
    return head; 
}","### Instruction: 
 Write a Java program to insert a new node into a singly linked list. 
 ### Input: head -> 3 -> 4 -> 6 -> null 
 ### Response:
 // Insert 8 after 4

public static Node insertNode(Node head, int data) 
{ 
    Node node = new Node(data); 
  
    // Empty List 
    if (head == null) 
    { 
        node.next=null; 
        head = node; 
        return head; 
    } 
  
    Node CurrNode = head; 
  
    while (CurrNode.data != 4) 
    { 
        CurrNode = CurrNode.next; 
    } 
  
    Node temp = CurrNode.next; 
  
    CurrNode.next = node; 
    node.next = temp; 
  
    return head; 
}"
11183,"Write a Java program to remove comments from the Java program.
Input: public class HelloWorld {
    /*
    This is a multiline comment.
    */
    public static void main(String[] args) {
        System.out.println(""Hello World!""); // This is a single line comment.
    }
}","public class HelloWorld {
    public static void main(String[] args) {
        System.out.println(""Hello World!""); 
    }
}","### Instruction: 
 Write a Java program to remove comments from the Java program. 
 ### Input: public class HelloWorld {
    /*
    This is a multiline comment.
    */
    public static void main(String[] args) {
        System.out.println(""Hello World!""); // This is a single line comment.
    }
} 
 ### Response:
 public class HelloWorld {
    public static void main(String[] args) {
        System.out.println(""Hello World!""); 
    }
}"
11208,Use Java to generate a string containing 1000 random characters of length 10.,"String chars = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"";
StringBuilder randomString = new StringBuilder();
Random rand = new Random();
for (int i = 0; i < 1000; i++){
 int randIndex = rand.nextInt(chars.length());
 randomString.append(chars.charAt(randIndex));
}
String result = randomString.toString();","### Instruction: 
 Use Java to generate a string containing 1000 random characters of length 10. 
 ### Response:
 String chars = ""ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890"";
StringBuilder randomString = new StringBuilder();
Random rand = new Random();
for (int i = 0; i < 1000; i++){
 int randIndex = rand.nextInt(chars.length());
 randomString.append(chars.charAt(randIndex));
}
String result = randomString.toString();"
11214,"Debug the following Java program to get the output ""Can you try again?
Input: public class TryAgain {
  public static void main (String[] args) {
     x = 4;
     System.out.println(x = 4);
  }
}","public class TryAgain {
  public static void main (String[] args) {
     int x = 4;
     System.out.println(""Can you try again?"");
  }
}","### Instruction: 
 Debug the following Java program to get the output ""Can you try again? 
 ### Input: public class TryAgain {
  public static void main (String[] args) {
     x = 4;
     System.out.println(x = 4);
  }
} 
 ### Response:
 public class TryAgain {
  public static void main (String[] args) {
     int x = 4;
     System.out.println(""Can you try again?"");
  }
}"
11220,Generate a correct Java program to swap two given numbers.,"public class Swap { 
  public static void main(String[] args) {
    int a = 10;
    int b = 20;
    System.out.println(""before swap: a = ""+a+"" b = ""+b);
    int temp = a; 
    a = b; 
    b = temp; 
    System.out.println(""after swap: a = ""+a+"" b = ""+b);
  }
}","### Instruction: 
 Generate a correct Java program to swap two given numbers. 
 ### Response:
 public class Swap { 
  public static void main(String[] args) {
    int a = 10;
    int b = 20;
    System.out.println(""before swap: a = ""+a+"" b = ""+b);
    int temp = a; 
    a = b; 
    b = temp; 
    System.out.println(""after swap: a = ""+a+"" b = ""+b);
  }
}"
11246,Write a Java program that prints all numbers between 1 to 100.,"public class PrintNumbers{
    public static void main(String[] args){
        // Prints numbers from 1 to 100
        for(int i = 1; i <= 100; i++){
            System.out.println(i); 
        }
    }
}","### Instruction: 
 Write a Java program that prints all numbers between 1 to 100. 
 ### Response:
 public class PrintNumbers{
    public static void main(String[] args){
        // Prints numbers from 1 to 100
        for(int i = 1; i <= 100; i++){
            System.out.println(i); 
        }
    }
}"
11254,"Generate a Java program that prints the sum of digits of a given number.
Input: 17","public class SumOfDigits {
    
    public static void main(String args[]) {
        int num = 17;
        int sum = 0;
  
        while(num > 0) 
        { 
            sum += num % 10; 
            num /= 10; 
        } 
        System.out.println(""Sum of Digits of the Number: "" +sum); 
    } 
}","### Instruction: 
 Generate a Java program that prints the sum of digits of a given number. 
 ### Input: 17 
 ### Response:
 public class SumOfDigits {
    
    public static void main(String args[]) {
        int num = 17;
        int sum = 0;
  
        while(num > 0) 
        { 
            sum += num % 10; 
            num /= 10; 
        } 
        System.out.println(""Sum of Digits of the Number: "" +sum); 
    } 
}"
11256,"Design a Java program to display the given integer in reverse.
Input: 6789","public class ReverseNumber { 
    public static void main(String[] args) 
    { 
        int num = 6789; 
        int reversed = 0; 
        while(num != 0) 
        { 
            int digit = num % 10; 
            reversed = reversed * 10 + digit; 
            num /= 10; 
        } 
  
        System.out.println(""Reversed Number: "" + reversed); 
    } 
}","### Instruction: 
 Design a Java program to display the given integer in reverse. 
 ### Input: 6789 
 ### Response:
 public class ReverseNumber { 
    public static void main(String[] args) 
    { 
        int num = 6789; 
        int reversed = 0; 
        while(num != 0) 
        { 
            int digit = num % 10; 
            reversed = reversed * 10 + digit; 
            num /= 10; 
        } 
  
        System.out.println(""Reversed Number: "" + reversed); 
    } 
}"
11283,"Create a Java program that print the Fibonacci sequence in the given range.
Input: min = 0, max = 10","public class Fibonacci {
    public static void main(String[] args) {
        int min = 0, max = 10;
        int prev = 0, next = 1;
        System.out.print(""Fibonacci Sequence in the given range:"");
        for (int i = 0; i <= max; i++) {
            if (i >= min) {
                System.out.print("" "" + prev);
            }
            int sum = prev + next;
            prev = next;
            next = sum;
        }
    }
}","### Instruction: 
 Create a Java program that print the Fibonacci sequence in the given range. 
 ### Input: min = 0, max = 10 
 ### Response:
 public class Fibonacci {
    public static void main(String[] args) {
        int min = 0, max = 10;
        int prev = 0, next = 1;
        System.out.print(""Fibonacci Sequence in the given range:"");
        for (int i = 0; i <= max; i++) {
            if (i >= min) {
                System.out.print("" "" + prev);
            }
            int sum = prev + next;
            prev = next;
            next = sum;
        }
    }
}"
11286,"Generate the for loop in Java for iterating from 0 to the given number.
Input: 4","for (int i = 0; i < 4; i++) {
   //code to be executed
}","### Instruction: 
 Generate the for loop in Java for iterating from 0 to the given number. 
 ### Input: 4 
 ### Response:
 for (int i = 0; i < 4; i++) {
   //code to be executed
}"
11352,"Design a Java class for a Car which has the following attributes: name, model, year, and price.","class Car {
 
 private String name;
 private String model; 
 private int year;
 private double price;
 
 //constructor to initialize Car object
 public Car(String name, String model, int year, double price) {
  this.name = name;
  this.model = model;
  this.year = year;
  this.price = price;
 }
 
 //getters and setters
 public String getName() {
  return name;
 }
 
 public void setName(String name) {
  this.name = name;
 }
 
 public String getModel() {
  return model;
 }
 
 public void setModel(String model) {
  this.model = model;
 }
 
 public int getYear() {
  return year;
 }
 
 public void setYear(int year) {
  this.year = year;
 } 
 
 public double getPrice() {
  return price;
 }
 
 public void setPrice(double price) {
  this.price = price;
 }
 
 @Override
 public String toString() {
  return ""Car: "" 
   + this.name 
   + "" "" + this.model 
   + "" ("" + this.year + ""), "" 
   + this.price;
 }
  
}","### Instruction: 
 Design a Java class for a Car which has the following attributes: name, model, year, and price. 
 ### Response:
 class Car {
 
 private String name;
 private String model; 
 private int year;
 private double price;
 
 //constructor to initialize Car object
 public Car(String name, String model, int year, double price) {
  this.name = name;
  this.model = model;
  this.year = year;
  this.price = price;
 }
 
 //getters and setters
 public String getName() {
  return name;
 }
 
 public void setName(String name) {
  this.name = name;
 }
 
 public String getModel() {
  return model;
 }
 
 public void setModel(String model) {
  this.model = model;
 }
 
 public int getYear() {
  return year;
 }
 
 public void setYear(int year) {
  this.year = year;
 } 
 
 public double getPrice() {
  return price;
 }
 
 public void setPrice(double price) {
  this.price = price;
 }
 
 @Override
 public String toString() {
  return ""Car: "" 
   + this.name 
   + "" "" + this.model 
   + "" ("" + this.year + ""), "" 
   + this.price;
 }
  
}"
11361,Design a data structure in Java to store and sort a list of customers by their age.,"public class Customer{
    private int age;
    private String name;

    public Customer(int age, String name) {
        this.age = age;
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public String getName() {
        return name;
    }
}

public class AgeSortedCustomerList {
    private List<Customer> customers = new ArrayList<>();

    public void add(Customer customer) {
        customers.add(customer);
    }

    public List<Customer> getSortedByAge(){
        customers.sort(Comparator.comparing(Customer::getAge));
        return customers;
    }

}","### Instruction: 
 Design a data structure in Java to store and sort a list of customers by their age. 
 ### Response:
 public class Customer{
    private int age;
    private String name;

    public Customer(int age, String name) {
        this.age = age;
        this.name = name;
    }

    public int getAge() {
        return age;
    }

    public String getName() {
        return name;
    }
}

public class AgeSortedCustomerList {
    private List<Customer> customers = new ArrayList<>();

    public void add(Customer customer) {
        customers.add(customer);
    }

    public List<Customer> getSortedByAge(){
        customers.sort(Comparator.comparing(Customer::getAge));
        return customers;
    }

}"
11399,"Create a Java class named ""MyClass"" with three methods - getName(), setName(), and displayName().","public class MyClass {
   private String name;
 
   // constructor
   public MyClass(String name) {
      this.name = name;
   }
 
   // getName
   public String getName() {
      return this.name;
   }
 
   // setName
   public void setName(String name) {
      this.name = name;
   }
 
   // displayName
   public void displayName() {
      System.out.println(""Name is: "" + this.name);
   }
}","### Instruction: 
 Create a Java class named ""MyClass"" with three methods - getName(), setName(), and displayName(). 
 ### Response:
 public class MyClass {
   private String name;
 
   // constructor
   public MyClass(String name) {
      this.name = name;
   }
 
   // getName
   public String getName() {
      return this.name;
   }
 
   // setName
   public void setName(String name) {
      this.name = name;
   }
 
   // displayName
   public void displayName() {
      System.out.println(""Name is: "" + this.name);
   }
}"
11422,Develop a Java code which assigns each element of an array to an individual variable.,"int[] myArray = {1,2,3};

int first = myArray[0];
int second = myArray[1];
int third = myArray[2];","### Instruction: 
 Develop a Java code which assigns each element of an array to an individual variable. 
 ### Response:
 int[] myArray = {1,2,3};

int first = myArray[0];
int second = myArray[1];
int third = myArray[2];"
11424,"Write a Java program to read in a list of integers and separate them into two lists of even and odd numbers.
Input: [1, 4, 6, 7, 8, 10, 12]","List even = [4, 6, 8, 10, 12]
List odd = [1, 7]","### Instruction: 
 Write a Java program to read in a list of integers and separate them into two lists of even and odd numbers. 
 ### Input: [1, 4, 6, 7, 8, 10, 12] 
 ### Response:
 List even = [4, 6, 8, 10, 12]
List odd = [1, 7]"
11425,"Use an object oriented approach to create an object in Java to store the temperature, humidity and wind speed from a weather forecast.","class WeatherData { 
    private int temperature; 
    private int humidity;
    private int windSpeed;
 
    // ... setter and getter methods
}","### Instruction: 
 Use an object oriented approach to create an object in Java to store the temperature, humidity and wind speed from a weather forecast. 
 ### Response:
 class WeatherData { 
    private int temperature; 
    private int humidity;
    private int windSpeed;
 
    // ... setter and getter methods
}"
11428,Use an object oriented approach to create a class in Java to store the cost and name of an item.,"class Item { 
    private String name; 
    private double cost;
 
    // ... setter and getter methods
}","### Instruction: 
 Use an object oriented approach to create a class in Java to store the cost and name of an item. 
 ### Response:
 class Item { 
    private String name; 
    private double cost;
 
    // ... setter and getter methods
}"
11443,Write a Java method to remove all whitespaces from a string,"public static String removeWhitespace(String str) {
  return str.replaceAll(""\\s"", """");
}","### Instruction: 
 Write a Java method to remove all whitespaces from a string 
 ### Response:
 public static String removeWhitespace(String str) {
  return str.replaceAll(""\\s"", """");
}"
11446,Write a Java program to get the day of the month from given a Date object,"public class DayFromDate {
    public static void main(String[] args) {
        Date date = new Date();
        System.out.println(""Day of the month: "" + date.getDate());
    }
}","### Instruction: 
 Write a Java program to get the day of the month from given a Date object 
 ### Response:
 public class DayFromDate {
    public static void main(String[] args) {
        Date date = new Date();
        System.out.println(""Day of the month: "" + date.getDate());
    }
}"
11469,"Implement a method in Java to generate a random float within the given range.
Input: min = 0.3
max = 0.7","/**
 * Generates a random float value within the given range (inclusive).
 * @param min the minimum value of the range
 * @param max the maximum value of the range
 * @return a random float value within the range
 */
public static float randomFloat(float min, float max) {
    Random rand = new Random();
    return rand.nextFloat() * (max - min) + min;
}","### Instruction: 
 Implement a method in Java to generate a random float within the given range. 
 ### Input: min = 0.3
max = 0.7 
 ### Response:
 /**
 * Generates a random float value within the given range (inclusive).
 * @param min the minimum value of the range
 * @param max the maximum value of the range
 * @return a random float value within the range
 */
public static float randomFloat(float min, float max) {
    Random rand = new Random();
    return rand.nextFloat() * (max - min) + min;
}"
11495,"Create a Java program to find a number in an array and print its index.
Input: int[] arr = {1, 2, 3, 4, 5};
int num = 3;","public class Main {
   public static void main(String[] args) {
      int[] arr = {1, 2, 3, 4, 5};
      int num = 3;
      
      int index = -1;
      for (int i = 0; i < arr.length; i++) {
        if (arr[i] == num) {
           index = i;
           break;
        }
      }
      
      if (index == -1) {
        System.out.println(""Number not found."");
      } 
      else {
        System.out.println(""Number found at index "" + index);
      }
   }
}","### Instruction: 
 Create a Java program to find a number in an array and print its index. 
 ### Input: int[] arr = {1, 2, 3, 4, 5};
int num = 3; 
 ### Response:
 public class Main {
   public static void main(String[] args) {
      int[] arr = {1, 2, 3, 4, 5};
      int num = 3;
      
      int index = -1;
      for (int i = 0; i < arr.length; i++) {
        if (arr[i] == num) {
           index = i;
           break;
        }
      }
      
      if (index == -1) {
        System.out.println(""Number not found."");
      } 
      else {
        System.out.println(""Number found at index "" + index);
      }
   }
}"
11515,"Create a Java program to print all natural numbers between 1 and 50, both inclusive.","public class Natural { 
    public static void main(String[] args) 
    { 
        int n = 1; 
        while (n <= 50) { 
            System.out.println(n); 
            n = n + 1; 
        } 
    } 
}","### Instruction: 
 Create a Java program to print all natural numbers between 1 and 50, both inclusive. 
 ### Response:
 public class Natural { 
    public static void main(String[] args) 
    { 
        int n = 1; 
        while (n <= 50) { 
            System.out.println(n); 
            n = n + 1; 
        } 
    } 
}"
11525,"How do the following Java methods work?
Input: public static void main(String[] args) 
{ 
    int[] arr = {2,4,6,8,10}; 
    int n = 2; 
    int result = binarySearch(arr, 0, arr.length-1, n); 
    if (result == -1) 
        System.out.println(""Element is not present""); 
    else
        System.out.println(""Element is present at index "" +  
                                             result); 
} 
  
static int binarySearch(int arr[], int l, int r, int x) 
{ 
    while (l <= r) 
    { 
        int m = l + (r-l)/2; 
        if (arr[m] == x) 
            return m;  
        if (arr[m] < x) 
            l = m + 1; 
        else
            r = m - 1; 
    } 
    return -1;  
}","The main method takes an array of integers and an element to search for. It calls binarySearch method which uses the binary search algorithm to search for the element in the given array. The algorithm starts by calculating the mid point of the given array. If the element at the mid point is equal to the element to search for, it returns the index of the mid point. If the element being searched for is less than the element at the mid point, the element can be searched in the left subarray by setting right boundary one less than mid point. If the element being searched for is greater than the element at the mid point, the element can be searched in the right subarray by setting the left boundary one greater than the mid point. The search continues until the element is found or whole array is searched. If the element is not present in the array,It returns -1.","### Instruction: 
 How do the following Java methods work? 
 ### Input: public static void main(String[] args) 
{ 
    int[] arr = {2,4,6,8,10}; 
    int n = 2; 
    int result = binarySearch(arr, 0, arr.length-1, n); 
    if (result == -1) 
        System.out.println(""Element is not present""); 
    else
        System.out.println(""Element is present at index "" +  
                                             result); 
} 
  
static int binarySearch(int arr[], int l, int r, int x) 
{ 
    while (l <= r) 
    { 
        int m = l + (r-l)/2; 
        if (arr[m] == x) 
            return m;  
        if (arr[m] < x) 
            l = m + 1; 
        else
            r = m - 1; 
    } 
    return -1;  
} 
 ### Response:
 The main method takes an array of integers and an element to search for. It calls binarySearch method which uses the binary search algorithm to search for the element in the given array. The algorithm starts by calculating the mid point of the given array. If the element at the mid point is equal to the element to search for, it returns the index of the mid point. If the element being searched for is less than the element at the mid point, the element can be searched in the left subarray by setting right boundary one less than mid point. If the element being searched for is greater than the element at the mid point, the element can be searched in the right subarray by setting the left boundary one greater than the mid point. The search continues until the element is found or whole array is searched. If the element is not present in the array,It returns -1."
11528,"What will be printed with the following Java code?
Input: String myString = ""Hello World"";

for (int i = 0; i < myString.length(); i++) {
    System.out.print(i + "" = "" + myString.charAt(i) + "" "");
}",0 = H 1 = e 2 = l 3 = l 4 = o 5 =   6 = W 7 = o 8 = r 9 = l 10 = d,"### Instruction: 
 What will be printed with the following Java code? 
 ### Input: String myString = ""Hello World"";

for (int i = 0; i < myString.length(); i++) {
    System.out.print(i + "" = "" + myString.charAt(i) + "" "");
} 
 ### Response:
 0 = H 1 = e 2 = l 3 = l 4 = o 5 =   6 = W 7 = o 8 = r 9 = l 10 = d"
11535,Create a dictionary in Java containing employee information with their names as the key and salary as the values.,"Map<String, Integer> employeeMap = new HashMap<>();
employeeMap.put(""John"", 1000);
employeeMap.put(""Amy"", 1200);
employeeMap.put(""Dad"", 1500);
employeeMap.put(""Mom"", 2000);","### Instruction: 
 Create a dictionary in Java containing employee information with their names as the key and salary as the values. 
 ### Response:
 Map<String, Integer> employeeMap = new HashMap<>();
employeeMap.put(""John"", 1000);
employeeMap.put(""Amy"", 1200);
employeeMap.put(""Dad"", 1500);
employeeMap.put(""Mom"", 2000);"
11541,Suggest a way to persistently store data in a Java program.,"A convenient way to persistently store data in a Java program is to use a database such as MySQL or SQLite. You can also use an API to store data in the cloud, such as AWS S3. Additionally, many Java libraries provide support for persistence such as JPA and Hibernate, which provide object-relational mapping and object-oriented querying capabilities.","### Instruction: 
 Suggest a way to persistently store data in a Java program. 
 ### Response:
 A convenient way to persistently store data in a Java program is to use a database such as MySQL or SQLite. You can also use an API to store data in the cloud, such as AWS S3. Additionally, many Java libraries provide support for persistence such as JPA and Hibernate, which provide object-relational mapping and object-oriented querying capabilities."
11558,Write a Java program to read in a string and print its length.,"import java.util.Scanner;

public class StringLength {
 public static void main(String[] args) {
  Scanner scanner = new Scanner(System.in);
  String inputString = scanner.nextLine();
  System.out.println(""Length of the string is: ""+ inputString.length());
 }
}","### Instruction: 
 Write a Java program to read in a string and print its length. 
 ### Response:
 import java.util.Scanner;

public class StringLength {
 public static void main(String[] args) {
  Scanner scanner = new Scanner(System.in);
  String inputString = scanner.nextLine();
  System.out.println(""Length of the string is: ""+ inputString.length());
 }
}"
11596,"Create a class in Java that assigns a value to a given variable.
Input: String variable = ""Hello world""","public class VariableAssignment {
  private String variable;
  
  public VariableAssignment(String variable) {
    this.variable = variable;
  }
  
  public String getVariable() {
    return variable;
  }
  
  public void setVariable(String variable) {
    this.variable = variable;
  }
}","### Instruction: 
 Create a class in Java that assigns a value to a given variable. 
 ### Input: String variable = ""Hello world"" 
 ### Response:
 public class VariableAssignment {
  private String variable;
  
  public VariableAssignment(String variable) {
    this.variable = variable;
  }
  
  public String getVariable() {
    return variable;
  }
  
  public void setVariable(String variable) {
    this.variable = variable;
  }
}"
11601,Write a method in Java for checking if a String is a palindrome.,"public static boolean isPalindrome(String str) { 
    int n = str.length(); 
    for (int i = 0; i < n/2; i++){ 
        if (str.charAt(i) != str.charAt(n-i-1)) 
            return false; 
    } 
    return true; 
}","### Instruction: 
 Write a method in Java for checking if a String is a palindrome. 
 ### Response:
 public static boolean isPalindrome(String str) { 
    int n = str.length(); 
    for (int i = 0; i < n/2; i++){ 
        if (str.charAt(i) != str.charAt(n-i-1)) 
            return false; 
    } 
    return true; 
}"
11602,"Create a function in Java that takes two numbers as arguments and prints their product.
Input: 10 and 8","public static void printProduct(int n1, int n2){
    System.out.println(n1 * n2);
}","### Instruction: 
 Create a function in Java that takes two numbers as arguments and prints their product. 
 ### Input: 10 and 8 
 ### Response:
 public static void printProduct(int n1, int n2){
    System.out.println(n1 * n2);
}"
11607,"Implement a function in Java that takes a character and a string as arguments and determines whether the character is present in the string or not.
Input: 'c' and ""programming""","public static boolean charInString(char c, String str) {
    for (int i = 0; i < str.length(); i++)
        if (str.charAt(i) == c)
            return true;
    return false;
}","### Instruction: 
 Implement a function in Java that takes a character and a string as arguments and determines whether the character is present in the string or not. 
 ### Input: 'c' and ""programming"" 
 ### Response:
 public static boolean charInString(char c, String str) {
    for (int i = 0; i < str.length(); i++)
        if (str.charAt(i) == c)
            return true;
    return false;
}"
11616,"Design a solution using Java to calculate the mean of all the numbers in a given array.
Input: [4, 7, 11, 15, 18, 21]","public static double mean(int[] array) { 
    double sum = 0; 
    int length = array.length; 

    // loop through each number and calculate the sum
    for (int num : array) 
        sum += num; 

    // calculate the mean and return it
    return sum/ length;
}","### Instruction: 
 Design a solution using Java to calculate the mean of all the numbers in a given array. 
 ### Input: [4, 7, 11, 15, 18, 21] 
 ### Response:
 public static double mean(int[] array) { 
    double sum = 0; 
    int length = array.length; 

    // loop through each number and calculate the sum
    for (int num : array) 
        sum += num; 

    // calculate the mean and return it
    return sum/ length;
}"
11624,"Code a method in Java to print out the elements of a 2D array.
Input: [[1,2,3], [4,5,6], [7,8,9]]","public class TwoDArray{
    public static void print2DArray(int[][] arr){
        for (int[] row : arr){
            for (int element : row){
                System.out.print(element+"" "");
            }
            System.out.println();
        }
    }
    
    public static void main(String[] args) {
        int[][] arr = { {1,2,3}, {4,5,6}, {7,8,9} };
        print2DArray(arr);
    }
}","### Instruction: 
 Code a method in Java to print out the elements of a 2D array. 
 ### Input: [[1,2,3], [4,5,6], [7,8,9]] 
 ### Response:
 public class TwoDArray{
    public static void print2DArray(int[][] arr){
        for (int[] row : arr){
            for (int element : row){
                System.out.print(element+"" "");
            }
            System.out.println();
        }
    }
    
    public static void main(String[] args) {
        int[][] arr = { {1,2,3}, {4,5,6}, {7,8,9} };
        print2DArray(arr);
    }
}"
11625,"Code a method in Java to sort an array.
Input: [2, 9, 4, 6, 5, 1]","public class SortExample{
    public static void insertionSort(int[] arr){
        int n = arr.length;
        for (int i=1; i<n; i++){
            int key = arr[i];
            int j = i - 1;
            while ( j>=0 && arr[j] > key){
                arr[j+1] = arr[j];
                j--;
            }
            arr[j+1] = key;
        }
    }
    
    public static void main(String[] args) {
        int[] arr = {2, 9, 4, 6, 5, 1};
        insertionSort(arr);
        for (int x : arr){
            System.out.print(x+"" "");
        }
    }
}","### Instruction: 
 Code a method in Java to sort an array. 
 ### Input: [2, 9, 4, 6, 5, 1] 
 ### Response:
 public class SortExample{
    public static void insertionSort(int[] arr){
        int n = arr.length;
        for (int i=1; i<n; i++){
            int key = arr[i];
            int j = i - 1;
            while ( j>=0 && arr[j] > key){
                arr[j+1] = arr[j];
                j--;
            }
            arr[j+1] = key;
        }
    }
    
    public static void main(String[] args) {
        int[] arr = {2, 9, 4, 6, 5, 1};
        insertionSort(arr);
        for (int x : arr){
            System.out.print(x+"" "");
        }
    }
}"
11632,Create a Java method to print all elements in an array in reverse order.,"public static void printReverse(int[] array) {
    for (int i = array.length - 1; i >= 0; i--) {
        System.out.println(array[i]);
    }
}","### Instruction: 
 Create a Java method to print all elements in an array in reverse order. 
 ### Response:
 public static void printReverse(int[] array) {
    for (int i = array.length - 1; i >= 0; i--) {
        System.out.println(array[i]);
    }
}"
11658,"Design a Java program to find the maximum of 3 numbers.
Input: 1, 2, 5","public class Maximum {

  public static int getMax(int num1, int num2, int num3) {
    int max = num1; 
    if (num2 > max) {
      max = num2;
    }
    if (num3 > max) {
      max = num3; 
    }
    return max; 
  }

  public static void main(String[] args) {
    int max = getMax(1,2,5);
    System.out.println(""Maximum is: "" + max);
  }

}","### Instruction: 
 Design a Java program to find the maximum of 3 numbers. 
 ### Input: 1, 2, 5 
 ### Response:
 public class Maximum {

  public static int getMax(int num1, int num2, int num3) {
    int max = num1; 
    if (num2 > max) {
      max = num2;
    }
    if (num3 > max) {
      max = num3; 
    }
    return max; 
  }

  public static void main(String[] args) {
    int max = getMax(1,2,5);
    System.out.println(""Maximum is: "" + max);
  }

}"
11711,"Create a function in Java to check if a given array contains duplicates.
Input: int[] arr = {1, 2, 3, 2, 4, 5};","public static boolean hasDuplicates(int[] arr) {
    for (int i = 0; i < arr.length; i++) {
        for (int j = i + 1; j < arr.length; j++) {
            if (arr[i] == arr[j])
                return true;
        }
    }
    return false;
}","### Instruction: 
 Create a function in Java to check if a given array contains duplicates. 
 ### Input: int[] arr = {1, 2, 3, 2, 4, 5}; 
 ### Response:
 public static boolean hasDuplicates(int[] arr) {
    for (int i = 0; i < arr.length; i++) {
        for (int j = i + 1; j < arr.length; j++) {
            if (arr[i] == arr[j])
                return true;
        }
    }
    return false;
}"
11722,"Using variable A, write a code snippet in Java to iterate through ArrayList and delete odd values.
Input: // ArrayList A
ArrayList<Integer> A = new ArrayList<>(Arrays.asList(1,2,3,4,5,6));","for(int i=0; i<A.size(); i++)
{
    if(A.get(i) %2 != 0)
    {
        A.remove(i);
        i--;
    }
}","### Instruction: 
 Using variable A, write a code snippet in Java to iterate through ArrayList and delete odd values. 
 ### Input: // ArrayList A
ArrayList<Integer> A = new ArrayList<>(Arrays.asList(1,2,3,4,5,6)); 
 ### Response:
 for(int i=0; i<A.size(); i++)
{
    if(A.get(i) %2 != 0)
    {
        A.remove(i);
        i--;
    }
}"
11740,Create a function in Java to generate Fibonacci numbers up to n.,"public class Fibonacci { 
    public static int fibonacci(int number){ 
        if(number == 1 || number == 2){ 
            return 1; 
        } 
        return fibonacci(number-1) + fibonacci(number -2); //tail recursion  
    } 
       
    public static void printFibonacci(int number){ 
        for(int i = 1; i <= number; i++){ 
            System.out.print(fibonacci(i) +"" ""); 
        } 
    } 
}","### Instruction: 
 Create a function in Java to generate Fibonacci numbers up to n. 
 ### Response:
 public class Fibonacci { 
    public static int fibonacci(int number){ 
        if(number == 1 || number == 2){ 
            return 1; 
        } 
        return fibonacci(number-1) + fibonacci(number -2); //tail recursion  
    } 
       
    public static void printFibonacci(int number){ 
        for(int i = 1; i <= number; i++){ 
            System.out.print(fibonacci(i) +"" ""); 
        } 
    } 
}"
11809,Create a Java program to print out Armstrong numbers in a given range.,"public static void armstrongInRange(int lower, int upper) 
{ 
    int num, originalNum, remainder, n = 0;
  
    // Calculates the number of digits a number has 
    for(originalNum = lower + 1; originalNum < upper; originalNum++) 
    { 
        num = originalNum; 
        while(num != 0) 
        { 
            num /= 10; 
            n++; 
        }  
          
        num = originalNum; 
        int sum = 0; 
          
        // Calculates the sum of the nth power of the digits 
        while(num != 0) 
        { 
            remainder = num % 10; 
            sum += Math.pow(remainder, n); 
            num /= 10; 
        } 
  
        // Checks if the sum is equal to the original number 
        if(sum == originalNum) 
            System.out.print(originalNum +  "" ""); 
    } 
}","### Instruction: 
 Create a Java program to print out Armstrong numbers in a given range. 
 ### Response:
 public static void armstrongInRange(int lower, int upper) 
{ 
    int num, originalNum, remainder, n = 0;
  
    // Calculates the number of digits a number has 
    for(originalNum = lower + 1; originalNum < upper; originalNum++) 
    { 
        num = originalNum; 
        while(num != 0) 
        { 
            num /= 10; 
            n++; 
        }  
          
        num = originalNum; 
        int sum = 0; 
          
        // Calculates the sum of the nth power of the digits 
        while(num != 0) 
        { 
            remainder = num % 10; 
            sum += Math.pow(remainder, n); 
            num /= 10; 
        } 
  
        // Checks if the sum is equal to the original number 
        if(sum == originalNum) 
            System.out.print(originalNum +  "" ""); 
    } 
}"
11840,Implement an algorithm in Java to count the number of ones in a binary number,"public static int countOnes(int num) 
{ 
    int count = 0; 
    while (num != 0) { 
        num = num & (num - 1); 
        count++; 
    } 
    return count; 
}","### Instruction: 
 Implement an algorithm in Java to count the number of ones in a binary number 
 ### Response:
 public static int countOnes(int num) 
{ 
    int count = 0; 
    while (num != 0) { 
        num = num & (num - 1); 
        count++; 
    } 
    return count; 
}"
11849,"Create a class in Java called Student with 3 instance variables - firstName, lastName, and age.","public class Student{
  String firstName;
  String lastName;
  int age;

  //constructor
  Student(String firstName, String lastName, int age){
    this.firstName = firstName;
    this.lastName = lastName;
    this.age = age;
  }
}","### Instruction: 
 Create a class in Java called Student with 3 instance variables - firstName, lastName, and age. 
 ### Response:
 public class Student{
  String firstName;
  String lastName;
  int age;

  //constructor
  Student(String firstName, String lastName, int age){
    this.firstName = firstName;
    this.lastName = lastName;
    this.age = age;
  }
}"
11873,Create a Java program to multiply two given matrices,"public class MatrixMultiplication 
{
    // Method to multiply two matrices 
    public static double[][] multiply(double[][] A,  
                                     double[][] B) 
    { 
        int aRows = A.length; 
        int aColumns = A[0].length; 
        int bRows = B.length; 
        int bColumns = B[0].length; 
   
        if (aColumns != bRows) {  
            throw new IllegalArgumentException(""A:Rows: "" + aColumns 
                      + "" did not match B:Columns "" + bRows + "".""); 
        } 
   
        double[][] C = new double[aRows][bColumns]; 
        for (int i = 0; i < aRows; i++) { 
            for (int j = 0; j < bColumns; j++) { 
                C[i][j] = 0.00000; 
            } 
        } 
   
        for (int i = 0; i < aRows; i++) { 
            for (int j = 0; j < bColumns; j++) { 
                for (int k = 0; k < aColumns; k++) { 
                    C[i][j] += A[i][k] * B[k][j]; 
                } 
            } 
        } 
   
        return C; 
    } 
}","### Instruction: 
 Create a Java program to multiply two given matrices 
 ### Response:
 public class MatrixMultiplication 
{
    // Method to multiply two matrices 
    public static double[][] multiply(double[][] A,  
                                     double[][] B) 
    { 
        int aRows = A.length; 
        int aColumns = A[0].length; 
        int bRows = B.length; 
        int bColumns = B[0].length; 
   
        if (aColumns != bRows) {  
            throw new IllegalArgumentException(""A:Rows: "" + aColumns 
                      + "" did not match B:Columns "" + bRows + "".""); 
        } 
   
        double[][] C = new double[aRows][bColumns]; 
        for (int i = 0; i < aRows; i++) { 
            for (int j = 0; j < bColumns; j++) { 
                C[i][j] = 0.00000; 
            } 
        } 
   
        for (int i = 0; i < aRows; i++) { 
            for (int j = 0; j < bColumns; j++) { 
                for (int k = 0; k < aColumns; k++) { 
                    C[i][j] += A[i][k] * B[k][j]; 
                } 
            } 
        } 
   
        return C; 
    } 
}"
11965,"Create a function in Java that takes in an array of numbers and calculates the sum of the elements.
Input: [1, 2, 3, 4, 5]","public class Sum {
 
  public static int getSum(int[] arr) {
  
    int sum = 0;
    for(int i=0; i < arr.length; i++)
        sum += arr[i];
    return sum;
  }
}","### Instruction: 
 Create a function in Java that takes in an array of numbers and calculates the sum of the elements. 
 ### Input: [1, 2, 3, 4, 5] 
 ### Response:
 public class Sum {
 
  public static int getSum(int[] arr) {
  
    int sum = 0;
    for(int i=0; i < arr.length; i++)
        sum += arr[i];
    return sum;
  }
}"
11994,"Write a Java program to display the area of a given circle.
Input: radius = 7","public class Circle {

    public static void main(String[] args) {
        double radius = 7.0;
        double circArea  = Math.PI * (radius * radius);

        System.out.println(""The area of the circle with radius"" + radius + "" is: "" + circArea);
    }
}","### Instruction: 
 Write a Java program to display the area of a given circle. 
 ### Input: radius = 7 
 ### Response:
 public class Circle {

    public static void main(String[] args) {
        double radius = 7.0;
        double circArea  = Math.PI * (radius * radius);

        System.out.println(""The area of the circle with radius"" + radius + "" is: "" + circArea);
    }
}"
12056,"Create a Java class that defines a circle with two double data fields, radius and area.","public class Circle {
 private double radius;
 private double area;

 public Circle(double radius) {
  this.radius = radius;
  this.area = Math.PI * Math.pow(this.radius, 2);
 }

 public double getRadius() {
  return this.radius;
 }

 public double getArea() {
  return this.area;
 }
}","### Instruction: 
 Create a Java class that defines a circle with two double data fields, radius and area. 
 ### Response:
 public class Circle {
 private double radius;
 private double area;

 public Circle(double radius) {
  this.radius = radius;
  this.area = Math.PI * Math.pow(this.radius, 2);
 }

 public double getRadius() {
  return this.radius;
 }

 public double getArea() {
  return this.area;
 }
}"
12084,"You need to develop a Java function to get the count of a given character in a given string.
Input: string = ""Hello World""
character = 'l'","public static int CountChar(String string, char character) 
{ 
    int count = 0; 
    for (int i=0; i<string.length(); i++) 
    { 
        if (string.charAt(i) == character) 
            count++; 
    } 
    return count; 
}","### Instruction: 
 You need to develop a Java function to get the count of a given character in a given string. 
 ### Input: string = ""Hello World""
character = 'l' 
 ### Response:
 public static int CountChar(String string, char character) 
{ 
    int count = 0; 
    for (int i=0; i<string.length(); i++) 
    { 
        if (string.charAt(i) == character) 
            count++; 
    } 
    return count; 
}"
12156,Write a Java program for binary search.,"public static int binarySearch(int[] arr, int target) { 
    int left = 0; 
    int right = arr.length - 1; 
    while (left <= right) { 
        int mid = left + (right - left)/2; 
        if (arr[mid] == target) { 
            return mid; 
        } else if (arr[mid] < target) { 
            left = mid + 1; 
        } else { 
            right = mid - 1; 
        } 
    } 
    return -1; 
}","### Instruction: 
 Write a Java program for binary search. 
 ### Response:
 public static int binarySearch(int[] arr, int target) { 
    int left = 0; 
    int right = arr.length - 1; 
    while (left <= right) { 
        int mid = left + (right - left)/2; 
        if (arr[mid] == target) { 
            return mid; 
        } else if (arr[mid] < target) { 
            left = mid + 1; 
        } else { 
            right = mid - 1; 
        } 
    } 
    return -1; 
}"
12168,Create a Hashtable in Java to store a list of key-value pair.,"import java.util.Hashtable;

public class HashtableExample {
     public static void main(String args[]) {
         Hashtable<Integer, String> ht = new Hashtable<Integer, String>();
 
         ht.put(1, ""Code"");
         ht.put(2, ""Learn"");
         ht.put(3, ""Project"");
         ht.put(4, ""University"");
 
         System.out.println(""Hashtable: "" + ht); 
     }
}","### Instruction: 
 Create a Hashtable in Java to store a list of key-value pair. 
 ### Response:
 import java.util.Hashtable;

public class HashtableExample {
     public static void main(String args[]) {
         Hashtable<Integer, String> ht = new Hashtable<Integer, String>();
 
         ht.put(1, ""Code"");
         ht.put(2, ""Learn"");
         ht.put(3, ""Project"");
         ht.put(4, ""University"");
 
         System.out.println(""Hashtable: "" + ht); 
     }
}"
12185,"Override the equals method for a Java class named Point.
Input: class Point {
    int x;
    int y;
}","public class Point {
    int x;
    int y;

    @Override
    public boolean equals(Object obj) {
        if (obj instanceof Point) {
            Point other = (Point) obj;
            return x == other.x && y == other.y;
        }
        return false;
    }
}","### Instruction: 
 Override the equals method for a Java class named Point. 
 ### Input: class Point {
    int x;
    int y;
} 
 ### Response:
 public class Point {
    int x;
    int y;

    @Override
    public boolean equals(Object obj) {
        if (obj instanceof Point) {
            Point other = (Point) obj;
            return x == other.x && y == other.y;
        }
        return false;
    }
}"
12211,Create a class in Java for a rectangle shape with length and breadth as attributes.,"public class Rectangle { 
  int length; 
  int breadth; 
 
  Rectangle(int l, int b) { 
    length = l; 
    breadth = b; 
  } 
 
  int calculateArea() { 
    return length * breadth; 
  } 
}","### Instruction: 
 Create a class in Java for a rectangle shape with length and breadth as attributes. 
 ### Response:
 public class Rectangle { 
  int length; 
  int breadth; 
 
  Rectangle(int l, int b) { 
    length = l; 
    breadth = b; 
  } 
 
  int calculateArea() { 
    return length * breadth; 
  } 
}"
12258,"Develop a function in Java that takes two integers as its arguments and prints out the maximum of the two.
Input: A = 25
B = 27","/**
 * Develop a function in Java that takes two integers as its arguments and prints out the maximum of the two.
 */
public class maximum {
  public static int maximum(int a, int b){
      if(a > b){
          return a;
      } else {
          return b;
      }
  }

  public static void main(String[] args) {
      int a = 25;
      int b = 27;
      int max = maximum(a, b);
      System.out.println(""Maximum of the two numbers is: "" + max);
  }
}","### Instruction: 
 Develop a function in Java that takes two integers as its arguments and prints out the maximum of the two. 
 ### Input: A = 25
B = 27 
 ### Response:
 /**
 * Develop a function in Java that takes two integers as its arguments and prints out the maximum of the two.
 */
public class maximum {
  public static int maximum(int a, int b){
      if(a > b){
          return a;
      } else {
          return b;
      }
  }

  public static void main(String[] args) {
      int a = 25;
      int b = 27;
      int max = maximum(a, b);
      System.out.println(""Maximum of the two numbers is: "" + max);
  }
}"
12267,"Create a script in Java that builds a string based on a given character repeated n number of times.
Input: Character = '*'
Number = 5","""""""
Create a script in Java that builds a string based on a given character repeated n number of times.
""""""
public class StringBuilder {

    public static String buildString(char c, int n){
        StringBuilder sb = new StringBuilder();
        
        for(int i = 0; i < n; i++){
            sb.append(c);
        }
        
        return sb.toString();
    }
    
    public static void main(String[] args) {
        char c = '*';
        int n = 5;
        System.out.println(buildString(c, n));
    }
}","### Instruction: 
 Create a script in Java that builds a string based on a given character repeated n number of times. 
 ### Input: Character = '*'
Number = 5 
 ### Response:
 """"""
Create a script in Java that builds a string based on a given character repeated n number of times.
""""""
public class StringBuilder {

    public static String buildString(char c, int n){
        StringBuilder sb = new StringBuilder();
        
        for(int i = 0; i < n; i++){
            sb.append(c);
        }
        
        return sb.toString();
    }
    
    public static void main(String[] args) {
        char c = '*';
        int n = 5;
        System.out.println(buildString(c, n));
    }
}"
12356,"Write a Java program to find out the longest word from a sentence.
Input: String sentence = ""This is a sample sentence""","public class LongestWord { 
  
    // Function to find longest word in the sentence 
    static String findLongestWord(String str) { 
  
        String longestWord = """"; 
        String[] words = str.split("" ""); 
        for (int i = 0; i < words.length; i++) { 
            if (words[i].length() > longestWord.length()) { 
                longestWord = words[i]; 
            } 
        } 
        return longestWord; 
    } 
  
    public static void main(String[] args) 
    { 
        String str = ""This is a sample sentence""; 
        System.out.println(findLongestWord(str)); 
    } 
}","### Instruction: 
 Write a Java program to find out the longest word from a sentence. 
 ### Input: String sentence = ""This is a sample sentence"" 
 ### Response:
 public class LongestWord { 
  
    // Function to find longest word in the sentence 
    static String findLongestWord(String str) { 
  
        String longestWord = """"; 
        String[] words = str.split("" ""); 
        for (int i = 0; i < words.length; i++) { 
            if (words[i].length() > longestWord.length()) { 
                longestWord = words[i]; 
            } 
        } 
        return longestWord; 
    } 
  
    public static void main(String[] args) 
    { 
        String str = ""This is a sample sentence""; 
        System.out.println(findLongestWord(str)); 
    } 
}"
12385,"Convert the following code written in Java to C++.
Input: String s = ""It's raining today"";","std::string s = ""It's raining today"";","### Instruction: 
 Convert the following code written in Java to C++. 
 ### Input: String s = ""It's raining today""; 
 ### Response:
 std::string s = ""It's raining today"";"
12416,"Create a Java program to compare two strings and check if they are equal or not.
Input: String s1 = ""Hello"";
String s2 = ""World"";","public static boolean compareStrings(String s1, String s2) {
    return s1.equals(s2);
}","### Instruction: 
 Create a Java program to compare two strings and check if they are equal or not. 
 ### Input: String s1 = ""Hello"";
String s2 = ""World""; 
 ### Response:
 public static boolean compareStrings(String s1, String s2) {
    return s1.equals(s2);
}"
12437,"Write a Java program to print the Fibonacci sequence starting from given number.
Input: Starting Number: 10","public class Fibonacci { 
 
    public static void main(String[] args) { 
  
        int n1 = 10, n2 = 0, n3, i; 

        System.out.print(n1 + "" ""); 
        for (i = 1; i <= 8; ++i) { 
            n3 = n1 + n2; 
            System.out.print(n3 + "" ""); 
            n1 = n2; 
            n2 = n3; 
        } 
    } 
}","### Instruction: 
 Write a Java program to print the Fibonacci sequence starting from given number. 
 ### Input: Starting Number: 10 
 ### Response:
 public class Fibonacci { 
 
    public static void main(String[] args) { 
  
        int n1 = 10, n2 = 0, n3, i; 

        System.out.print(n1 + "" ""); 
        for (i = 1; i <= 8; ++i) { 
            n3 = n1 + n2; 
            System.out.print(n3 + "" ""); 
            n1 = n2; 
            n2 = n3; 
        } 
    } 
}"
12438,"Given a 2D array of integers, write a Java method to find the sum of an hourglass pattern.
Input: The 2D array of integers are:
[[1, 1, 1, 0, 0, 0], 
[0, 1, 0, 0, 0, 0], 
[1, 1, 1, 0, 0, 0],
[0, 0, 2, 4, 4, 0], 
[0, 0, 0, 2, 0, 0], 
[0, 0, 1, 2, 4, 0]]","public static int findSumOfHourglass(int[][] arr){ 
    int sum = 0;
    for(int i = 0; i < arr.length - 2; i++){ 
        for(int j = 0; j < arr[i].length - 2; j++){ 
            int tempSum = arr[i][j] + arr[i][j+1] + arr[i][j+2] + 
                arr[i+1][j+1] + 
                arr[i+2][j] + arr[i+2][j+1] + arr[i+2][j+2]; 
            if(sum < tempSum) 
                sum = tempSum; 
        } 
    } 
    return sum; 
}","### Instruction: 
 Given a 2D array of integers, write a Java method to find the sum of an hourglass pattern. 
 ### Input: The 2D array of integers are:
[[1, 1, 1, 0, 0, 0], 
[0, 1, 0, 0, 0, 0], 
[1, 1, 1, 0, 0, 0],
[0, 0, 2, 4, 4, 0], 
[0, 0, 0, 2, 0, 0], 
[0, 0, 1, 2, 4, 0]] 
 ### Response:
 public static int findSumOfHourglass(int[][] arr){ 
    int sum = 0;
    for(int i = 0; i < arr.length - 2; i++){ 
        for(int j = 0; j < arr[i].length - 2; j++){ 
            int tempSum = arr[i][j] + arr[i][j+1] + arr[i][j+2] + 
                arr[i+1][j+1] + 
                arr[i+2][j] + arr[i+2][j+1] + arr[i+2][j+2]; 
            if(sum < tempSum) 
                sum = tempSum; 
        } 
    } 
    return sum; 
}"
12445,"Given two linked lists, write a Java program to merge them.
Input: The two linked lists are:
List1 (1 -> 4 -> 5 -> 8 -> 10) 
List2 (2 -> 3 -> 6 -> 7 -> 9)","public static ListNode mergeLinkedLists(ListNode head1, ListNode head2) {  
    if(head1 == null)  
        return head2;  
    if(head2 == null)  
        return head1;  
  
    ListNode mergedList;  
  
    if(head1.val < head2.val) {  
        mergedList = head1;  
        mergedList.next = mergeLinkedLists(head1.next, head2);  
    }  
    else {  
        mergedList = head2;  
        mergedList.next = mergeLinkedLists(head1, head2.next);  
    }  
  
    return mergedList;  
}","### Instruction: 
 Given two linked lists, write a Java program to merge them. 
 ### Input: The two linked lists are:
List1 (1 -> 4 -> 5 -> 8 -> 10) 
List2 (2 -> 3 -> 6 -> 7 -> 9) 
 ### Response:
 public static ListNode mergeLinkedLists(ListNode head1, ListNode head2) {  
    if(head1 == null)  
        return head2;  
    if(head2 == null)  
        return head1;  
  
    ListNode mergedList;  
  
    if(head1.val < head2.val) {  
        mergedList = head1;  
        mergedList.next = mergeLinkedLists(head1.next, head2);  
    }  
    else {  
        mergedList = head2;  
        mergedList.next = mergeLinkedLists(head1, head2.next);  
    }  
  
    return mergedList;  
}"
12447,"Generate a code in Java to compute the average of 5 numbers.
Input: Compute the average of 8, 5, 10, 3 and 9","public class Average { 
    public static void main(String args[]) 
    { 
        double nums[] = {8, 5, 10, 3, 9}; 
        double result = 0; 
        int i; 
  
        for (i=0; i<5; ++i) { 
            result = result + nums[i]; 
        } 
        System.out.println(""Average is "" + result / 5); 
    } 
}","### Instruction: 
 Generate a code in Java to compute the average of 5 numbers. 
 ### Input: Compute the average of 8, 5, 10, 3 and 9 
 ### Response:
 public class Average { 
    public static void main(String args[]) 
    { 
        double nums[] = {8, 5, 10, 3, 9}; 
        double result = 0; 
        int i; 
  
        for (i=0; i<5; ++i) { 
            result = result + nums[i]; 
        } 
        System.out.println(""Average is "" + result / 5); 
    } 
}"
12469,Construct an array of 10 elements in Java and initialize each element to 0.,"int[] array = new int[10];
for (int i = 0; i < array.length; i++) {
    array[i] = 0;
}","### Instruction: 
 Construct an array of 10 elements in Java and initialize each element to 0. 
 ### Response:
 int[] array = new int[10];
for (int i = 0; i < array.length; i++) {
    array[i] = 0;
}"
12472,Construct a class in Java that has two methods called 'sayHello' and 'sayGoodbye'.,"class HelloGoodbye {
    public static void sayHello() {
        System.out.println(""Hello!"");
    }
    public static void sayGoodbye() {
        System.out.println(""Goodbye!"");
    }
}","### Instruction: 
 Construct a class in Java that has two methods called 'sayHello' and 'sayGoodbye'. 
 ### Response:
 class HelloGoodbye {
    public static void sayHello() {
        System.out.println(""Hello!"");
    }
    public static void sayGoodbye() {
        System.out.println(""Goodbye!"");
    }
}"
12482,"Create a Java program to implement a doubly linked list with the following operations: insert, delete, display.","class Node { 
    int data; 
    Node previous; 
    Node next;  
    public Node(int data) { 
        this.data = data; 
        this.previous = null; 
        this.next = null; 
    } 
} 
  
class DoublyLinkedList { 
    Node head; 
  
    // Inserts a new Node at front of the list 
    public void push(int new_data) 
    { 
        Node new_node = new Node(new_data); 
  
        new_node.next = head; 
        new_node.previous = null; 
  
        if (head != null) 
            head.previous = new_node; 
  
        head = new_node; 
    } 
  
    // Delete a node from the list 
    void deleteNode(Node node_ptr) 
    { 
        // If node to be deleted is head node 
        if (head == node_ptr) 
            head = node_ptr.next; 
  
        // Change next only if node to be deleted  
        // is NOT the last node 
        if (node_ptr.next != null) 
            node_ptr.next.previous = node_ptr.previous; 
  
        // Change prev only if node to be deleted  
        // is NOT the first node 
        if (node_ptr.previous != null) 
            node_ptr.previous.next = node_ptr.next; 
    } 
  
    // Display linked list 
    public void display() 
    { 
        Node last = null; 
        System.out.println(""Doubly Linked List in forward \n""); 
        while (head != null) { 
            System.out.print(head.data + "" <=> ""); 
            last = head; 
            head = head.next; 
        } 
        System.out.println(""null\n""); 
  
        System.out.println(""Doubly Linked List in reverse \n""); 
        while (last != null) { 
            System.out.print(last.data + "" <=> ""); 
            last = last.previous; 
        } 
        System.out.println(""null\n""); 
    } 
}","### Instruction: 
 Create a Java program to implement a doubly linked list with the following operations: insert, delete, display. 
 ### Response:
 class Node { 
    int data; 
    Node previous; 
    Node next;  
    public Node(int data) { 
        this.data = data; 
        this.previous = null; 
        this.next = null; 
    } 
} 
  
class DoublyLinkedList { 
    Node head; 
  
    // Inserts a new Node at front of the list 
    public void push(int new_data) 
    { 
        Node new_node = new Node(new_data); 
  
        new_node.next = head; 
        new_node.previous = null; 
  
        if (head != null) 
            head.previous = new_node; 
  
        head = new_node; 
    } 
  
    // Delete a node from the list 
    void deleteNode(Node node_ptr) 
    { 
        // If node to be deleted is head node 
        if (head == node_ptr) 
            head = node_ptr.next; 
  
        // Change next only if node to be deleted  
        // is NOT the last node 
        if (node_ptr.next != null) 
            node_ptr.next.previous = node_ptr.previous; 
  
        // Change prev only if node to be deleted  
        // is NOT the first node 
        if (node_ptr.previous != null) 
            node_ptr.previous.next = node_ptr.next; 
    } 
  
    // Display linked list 
    public void display() 
    { 
        Node last = null; 
        System.out.println(""Doubly Linked List in forward \n""); 
        while (head != null) { 
            System.out.print(head.data + "" <=> ""); 
            last = head; 
            head = head.next; 
        } 
        System.out.println(""null\n""); 
  
        System.out.println(""Doubly Linked List in reverse \n""); 
        while (last != null) { 
            System.out.print(last.data + "" <=> ""); 
            last = last.previous; 
        } 
        System.out.println(""null\n""); 
    } 
}"
12489,"Create a function in Java to convert a string of comma-separated values into an array.
Input: data = ""Banana, Apple, Apricot""","public static String[] convertStringToArray(String data) {
 
    String[] elements = data.split("","");
 
    // Trim all the elements
    for (int i = 0; i < elements.length; i++) {
        elements[i] = elements[i].trim();
    }
 
    return elements;
}","### Instruction: 
 Create a function in Java to convert a string of comma-separated values into an array. 
 ### Input: data = ""Banana, Apple, Apricot"" 
 ### Response:
 public static String[] convertStringToArray(String data) {
 
    String[] elements = data.split("","");
 
    // Trim all the elements
    for (int i = 0; i < elements.length; i++) {
        elements[i] = elements[i].trim();
    }
 
    return elements;
}"
12494,Create a class in Java that encapsulates a student's name and grade point average (GPA).,"public class Student {
 
 private String name;
 private double gpa;
 
 public Student(String name, double gpa) {
  this.name = name;
  this.gpa = gpa;
 }
 
 public String getName() {
  return name;
 }
 
 public double getGPA() {
  return gpa;
 }
}","### Instruction: 
 Create a class in Java that encapsulates a student's name and grade point average (GPA). 
 ### Response:
 public class Student {
 
 private String name;
 private double gpa;
 
 public Student(String name, double gpa) {
  this.name = name;
  this.gpa = gpa;
 }
 
 public String getName() {
  return name;
 }
 
 public double getGPA() {
  return gpa;
 }
}"
12530,Write a Java code to read a string from the user and print it reversed.,"import java.util.Scanner;

public class ReverseString 
{
    public static void main(String[] args) 
    {
        Scanner in = new Scanner(System.in);
        System.out.print(""Enter a string: "");
        String str = in.nextLine();
        in.close();

        char[] arr = str.toCharArray();

        for (int i = arr.length - 1; i >= 0; i--) 
        {
            System.out.print(arr[i]);
        }
    }
}","### Instruction: 
 Write a Java code to read a string from the user and print it reversed. 
 ### Response:
 import java.util.Scanner;

public class ReverseString 
{
    public static void main(String[] args) 
    {
        Scanner in = new Scanner(System.in);
        System.out.print(""Enter a string: "");
        String str = in.nextLine();
        in.close();

        char[] arr = str.toCharArray();

        for (int i = arr.length - 1; i >= 0; i--) 
        {
            System.out.print(arr[i]);
        }
    }
}"
12532,Write a function in Java to generate all possible strings of length n drawn from 0–9.,"import java.util.ArrayList;

public class GenerateStrings {

    public static ArrayList<String> generateStrings(int n){
        ArrayList<String> stringList = new ArrayList<>();
        
        char[] string = new char[n];
		generateStringUtil(string, n, 0, stringList);
		return stringList;
    }
    
    public static void generateStringUtil(char[] string, int n, int i, ArrayList<String> stringList){
        if(i == n){
            stringList.add(String.valueOf(string));
            return;
        }
        
        for(int j = 0; j < 10; j++){
            char c = (char) (j + '0'); 
            string[i] = c;
            generateStringUtil(string, n, i+1, stringList);
        }
    }
    
    public static void main(String[] args) {
        ArrayList<String> strings = generateStrings(3);
        System.out.println(strings);
    }
}","### Instruction: 
 Write a function in Java to generate all possible strings of length n drawn from 0–9. 
 ### Response:
 import java.util.ArrayList;

public class GenerateStrings {

    public static ArrayList<String> generateStrings(int n){
        ArrayList<String> stringList = new ArrayList<>();
        
        char[] string = new char[n];
		generateStringUtil(string, n, 0, stringList);
		return stringList;
    }
    
    public static void generateStringUtil(char[] string, int n, int i, ArrayList<String> stringList){
        if(i == n){
            stringList.add(String.valueOf(string));
            return;
        }
        
        for(int j = 0; j < 10; j++){
            char c = (char) (j + '0'); 
            string[i] = c;
            generateStringUtil(string, n, i+1, stringList);
        }
    }
    
    public static void main(String[] args) {
        ArrayList<String> strings = generateStrings(3);
        System.out.println(strings);
    }
}"
12548,"Create a function in Java to convert a given timestamp into readable date and time.
Input: 1586714115","public static String convertTimeStampToDateTime(long timestamp) {
    Date date = new Date(timestamp * 1000L);
    SimpleDateFormat sdf = new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss z"");
    return sdf.format(date);
}","### Instruction: 
 Create a function in Java to convert a given timestamp into readable date and time. 
 ### Input: 1586714115 
 ### Response:
 public static String convertTimeStampToDateTime(long timestamp) {
    Date date = new Date(timestamp * 1000L);
    SimpleDateFormat sdf = new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss z"");
    return sdf.format(date);
}"
12570,Create a for loop in Java to print out the integers from 10 to 1 in decreasing order.,"for(int i=10; i>=1; i--)
{
    System.out.println(i);
}","### Instruction: 
 Create a for loop in Java to print out the integers from 10 to 1 in decreasing order. 
 ### Response:
 for(int i=10; i>=1; i--)
{
    System.out.println(i);
}"
12573,Write a class in Java that contains two method to add and subtract two numbers.,"public class Calculator
{
    public int add(int a, int b)
    {
        return a + b;
    }
 
    public int subtract(int a, int b)
    {
        return a - b;
    }
}","### Instruction: 
 Write a class in Java that contains two method to add and subtract two numbers. 
 ### Response:
 public class Calculator
{
    public int add(int a, int b)
    {
        return a + b;
    }
 
    public int subtract(int a, int b)
    {
        return a - b;
    }
}"
12617,"Design a class in Java to represent a student, with their name and grade fields.","public class Student {

    String name;
    String grade;

    public Student(String name, String grade) {
        this.name = name;
        this.grade = grade;
    }

    public String getName() {
        return this.name;
    }

    public String getGrade() {
        return this.grade;
    }

}","### Instruction: 
 Design a class in Java to represent a student, with their name and grade fields. 
 ### Response:
 public class Student {

    String name;
    String grade;

    public Student(String name, String grade) {
        this.name = name;
        this.grade = grade;
    }

    public String getName() {
        return this.name;
    }

    public String getGrade() {
        return this.grade;
    }

}"
12674,Implement a method in Java to reverse a number,"public class ReverseNumber {

    public static int reverseNumber(int num) {
        int reversed = 0;
        while(num > 0) {
            reversed *= 10;
            reversed += num % 10;
            num /= 10;
        }
        return reversed;
    }
}","### Instruction: 
 Implement a method in Java to reverse a number 
 ### Response:
 public class ReverseNumber {

    public static int reverseNumber(int num) {
        int reversed = 0;
        while(num > 0) {
            reversed *= 10;
            reversed += num % 10;
            num /= 10;
        }
        return reversed;
    }
}"
12682,What is multithreading in Java and why is it used?,"Multithreading in Java is a process which allows multiple threads to run concurrently, allowing applications to utilize multiple CPU cores and execute operations simultaneously. It helps to improve the performance of applications by allowing them to complete operations quickly and efficiently.","### Instruction: 
 What is multithreading in Java and why is it used? 
 ### Response:
 Multithreading in Java is a process which allows multiple threads to run concurrently, allowing applications to utilize multiple CPU cores and execute operations simultaneously. It helps to improve the performance of applications by allowing them to complete operations quickly and efficiently."
12694,"Write code in Java for a user input prompt that states ""Please enter a number"".","Scanner input = new Scanner(System.in);

System.out.println(""Please enter a number: "");
int number = input.nextInt();","### Instruction: 
 Write code in Java for a user input prompt that states ""Please enter a number"". 
 ### Response:
 Scanner input = new Scanner(System.in);

System.out.println(""Please enter a number: "");
int number = input.nextInt();"
12713,"Write a code in Java to sort given list items in ascending order.
Input: my_list = [9, 4, 7, 2, 6]","for (int i = 0; i < my_list.length; i++) { 
        for (int j = i + 1; j < my_list.length; j++) { 
            if (my_list[i] > my_list[j]) { 
                int temp = my_list[i]; 
                my_list[i] = my_list[j]; 
                my_list[j] = temp; 
            } 
        } 
    }","### Instruction: 
 Write a code in Java to sort given list items in ascending order. 
 ### Input: my_list = [9, 4, 7, 2, 6] 
 ### Response:
 for (int i = 0; i < my_list.length; i++) { 
        for (int j = i + 1; j < my_list.length; j++) { 
            if (my_list[i] > my_list[j]) { 
                int temp = my_list[i]; 
                my_list[i] = my_list[j]; 
                my_list[j] = temp; 
            } 
        } 
    }"
12719,Design a class in Java for creating a 2D point.,"public class Point {
  double x,y;
  
  public Point(double x, double y) {
    this.x = x; 
    this.y = y; 
  }
  
  public double getX() { return x; }
  public double getY() { return y; }
  public void setX(double x) { this.x = x; }
  public void setY(double y) { this.y = y; }
  
  public double distance(Point other) {
    return Math.sqrt(Math.pow(x - other.getX(), 2) + 
                     Math.pow(y - other.getY(), 2)); 
  }
}","### Instruction: 
 Design a class in Java for creating a 2D point. 
 ### Response:
 public class Point {
  double x,y;
  
  public Point(double x, double y) {
    this.x = x; 
    this.y = y; 
  }
  
  public double getX() { return x; }
  public double getY() { return y; }
  public void setX(double x) { this.x = x; }
  public void setY(double y) { this.y = y; }
  
  public double distance(Point other) {
    return Math.sqrt(Math.pow(x - other.getX(), 2) + 
                     Math.pow(y - other.getY(), 2)); 
  }
}"
12756,"Create a Java program to delete an element for a given position in an array.
Input: [1, 3, 5, 6, 8], position=2","public static int[] deleteElement(int[] arr, int pos) {
 int n = arr.length;
 int i;
 
 // Removing the element at a given position
 for (i = pos; i < n - 1; i++)
  arr[i] = arr[i+1];
 
 // Returning the resulting array
 return arr;
}

public static void main(String[] args) {
 int[] arr = {1, 3, 5, 6, 8};
 int pos = 2;
 int[] new_arr = deleteElement(arr, pos);
 
 System.out.println(""Array after deletion:"");
 for(int i=0; i<new_arr.length; i++)
  System.out.print(new_arr[i]+"" "");
}","### Instruction: 
 Create a Java program to delete an element for a given position in an array. 
 ### Input: [1, 3, 5, 6, 8], position=2 
 ### Response:
 public static int[] deleteElement(int[] arr, int pos) {
 int n = arr.length;
 int i;
 
 // Removing the element at a given position
 for (i = pos; i < n - 1; i++)
  arr[i] = arr[i+1];
 
 // Returning the resulting array
 return arr;
}

public static void main(String[] args) {
 int[] arr = {1, 3, 5, 6, 8};
 int pos = 2;
 int[] new_arr = deleteElement(arr, pos);
 
 System.out.println(""Array after deletion:"");
 for(int i=0; i<new_arr.length; i++)
  System.out.print(new_arr[i]+"" "");
}"
12836,"Given an array of strings and an integer, write a function in Java to return a new array that contains the strings at each index less than the specified integer.
Input: String[] array = {""one"", ""two"", ""three"", ""four"", ""five""};
int integer = 3;","public static String[] filterArray(String[] array, int n) {
    List<String> filteredArray = new ArrayList<String>();

    for (int i = 0; i < array.length; i++) {
        if (i < n) {
            filteredArray.add(array[i]);
        }
    }

    String[] newArray = new String[filteredArray.size()];
    for (int i = 0; i < newArray.length; i++) {
        newArray[i] = filteredArray.get(i);
    }

    return newArray;
}","### Instruction: 
 Given an array of strings and an integer, write a function in Java to return a new array that contains the strings at each index less than the specified integer. 
 ### Input: String[] array = {""one"", ""two"", ""three"", ""four"", ""five""};
int integer = 3; 
 ### Response:
 public static String[] filterArray(String[] array, int n) {
    List<String> filteredArray = new ArrayList<String>();

    for (int i = 0; i < array.length; i++) {
        if (i < n) {
            filteredArray.add(array[i]);
        }
    }

    String[] newArray = new String[filteredArray.size()];
    for (int i = 0; i < newArray.length; i++) {
        newArray[i] = filteredArray.get(i);
    }

    return newArray;
}"
12864,"Write a Java code to create a HashMap and add elements into it.
Input: //Given Key and Value
// key: ""name""
// value: ""John""","HashMap<String, String> map = new HashMap<>();

map.put(""name"", ""John"");","### Instruction: 
 Write a Java code to create a HashMap and add elements into it. 
 ### Input: //Given Key and Value
// key: ""name""
// value: ""John"" 
 ### Response:
 HashMap<String, String> map = new HashMap<>();

map.put(""name"", ""John"");"
12890,"Produce the Java equivalent of the following PHP code block.
Input: $arr = array(1, 2, 3, 4);
foreach ($arr as $element) {
  echo $element;
}","int[] arr = {1, 2, 3, 4};
for (int element : arr) {
  System.out.println(element);
}","### Instruction: 
 Produce the Java equivalent of the following PHP code block. 
 ### Input: $arr = array(1, 2, 3, 4);
foreach ($arr as $element) {
  echo $element;
} 
 ### Response:
 int[] arr = {1, 2, 3, 4};
for (int element : arr) {
  System.out.println(element);
}"
12895,"Create a class in Java which stores the details of a book (title, author, ISBN).","class Book {
    String title;
    String author;
    String isbn;
    
    public Book(String title, String author, String isbn) {
        this.title = title;
        this.author = author;
        this.isbn = isbn;
    }
}","### Instruction: 
 Create a class in Java which stores the details of a book (title, author, ISBN). 
 ### Response:
 class Book {
    String title;
    String author;
    String isbn;
    
    public Book(String title, String author, String isbn) {
        this.title = title;
        this.author = author;
        this.isbn = isbn;
    }
}"
12896,"Write a Java program which prints out the maximum element in an array.
Input: nums = [6, 4, 7, 2, 8]","public static int maxElement(int[] nums) {
	int max = 0;
	for (int i = 0; i < nums.length; i++)
		max = Math.max(nums[i], max);
    return max;
}","### Instruction: 
 Write a Java program which prints out the maximum element in an array. 
 ### Input: nums = [6, 4, 7, 2, 8] 
 ### Response:
 public static int maxElement(int[] nums) {
	int max = 0;
	for (int i = 0; i < nums.length; i++)
		max = Math.max(nums[i], max);
    return max;
}"
12980,"Design an algorithm in Java to reverse a list of integers.
Input: list = [1,2,3,4,5]","public static void reverseList(List<Integer> list) 
{
    Collections.reverse(list); 
}","### Instruction: 
 Design an algorithm in Java to reverse a list of integers. 
 ### Input: list = [1,2,3,4,5] 
 ### Response:
 public static void reverseList(List<Integer> list) 
{
    Collections.reverse(list); 
}"
13002,"Create a customer class in Java that can be used to store information about customers.
Input: Create a class with field names: id (integer), firstName (text), lastName (text), email (text), address (text)","public class Customer { 
	 
    private int id; 
    private String firstName; 
    private String lastName; 
	private String email; 
    private String address;  
	
    // getter and setter methods 
    public int getId() { 
        return id; 
    } 
    public void setId(int id) { 
        this.id = id; 
    } 
    public String getFirstName() { 
        return firstName; 
    } 
    public void setFirstName(String firstName) { 
        this.firstName = firstName; 
    } 
	public String getLastName() { 
        return lastName; 
    } 
    public void setLastName(String lastName) { 
        this.lastName = lastName; 
    }
	public String getEmail() { 
        return email; 
    } 
    public void setEmail(String email) { 
        this.email = email; 
    }
	public String getAddress() { 
        return address; 
    } 
    public void setAddress(String address) { 
        this.address = address; 
    } 

}","### Instruction: 
 Create a customer class in Java that can be used to store information about customers. 
 ### Input: Create a class with field names: id (integer), firstName (text), lastName (text), email (text), address (text) 
 ### Response:
 public class Customer { 
	 
    private int id; 
    private String firstName; 
    private String lastName; 
	private String email; 
    private String address;  
	
    // getter and setter methods 
    public int getId() { 
        return id; 
    } 
    public void setId(int id) { 
        this.id = id; 
    } 
    public String getFirstName() { 
        return firstName; 
    } 
    public void setFirstName(String firstName) { 
        this.firstName = firstName; 
    } 
	public String getLastName() { 
        return lastName; 
    } 
    public void setLastName(String lastName) { 
        this.lastName = lastName; 
    }
	public String getEmail() { 
        return email; 
    } 
    public void setEmail(String email) { 
        this.email = email; 
    }
	public String getAddress() { 
        return address; 
    } 
    public void setAddress(String address) { 
        this.address = address; 
    } 

}"
13007,"Write a Java method to check if a string is a palindrome (same forwards and backwards).
Input: string = ""racecar""","""""""
Java method to check if a string is a palindrome 
""""""

public static boolean isPalindrome(String s) {
    //base case
    if(s.length() == 0 || s.length() == 1)
        return true; 
    if(s.charAt(0) == s.charAt(s.length()-1))
        return isPalindrome(s.substring(1, s.length()-1));

    //if not match 
    return false; 
}","### Instruction: 
 Write a Java method to check if a string is a palindrome (same forwards and backwards). 
 ### Input: string = ""racecar"" 
 ### Response:
 """"""
Java method to check if a string is a palindrome 
""""""

public static boolean isPalindrome(String s) {
    //base case
    if(s.length() == 0 || s.length() == 1)
        return true; 
    if(s.charAt(0) == s.charAt(s.length()-1))
        return isPalindrome(s.substring(1, s.length()-1));

    //if not match 
    return false; 
}"
13008,"Design a class in Java that stores the number of letters, numbers, and special characters in a given string.","""""""
Java class to store the number of letters, numbers and special characters in a given string
""""""

public class StringInfo {
    // Instance Variables 
    int letterCount;
    int numberCount;
    int specialCharCount;

    // Constructor to initialize all the instance variables
    public StringInfo() {
        this.letterCount = 0;
        this.numberCount = 0;
        this.specialCharCount = 0;
    }

    // A method to find the count of letters, numbers and special characters in a given string
    public void findCounts(String str) {
        // Loop through each character in the string
        for (char c : str.toCharArray()) {
            if (Character.isLetter(c)) {
                letterCount++;
            } else if (Character.isDigit(c)) {
                numberCount++;
            } else {
                specialCharCount++;
            }
        }
    }

    // Accessor methods to get the count of each type of character
    public int getLetterCount() {
        return letterCount;
    }

    public int getNumberCount() {
        return numberCount;
    }

    public int getSpecialCharCount() {
        return specialCharCount;
    }
}","### Instruction: 
 Design a class in Java that stores the number of letters, numbers, and special characters in a given string. 
 ### Response:
 """"""
Java class to store the number of letters, numbers and special characters in a given string
""""""

public class StringInfo {
    // Instance Variables 
    int letterCount;
    int numberCount;
    int specialCharCount;

    // Constructor to initialize all the instance variables
    public StringInfo() {
        this.letterCount = 0;
        this.numberCount = 0;
        this.specialCharCount = 0;
    }

    // A method to find the count of letters, numbers and special characters in a given string
    public void findCounts(String str) {
        // Loop through each character in the string
        for (char c : str.toCharArray()) {
            if (Character.isLetter(c)) {
                letterCount++;
            } else if (Character.isDigit(c)) {
                numberCount++;
            } else {
                specialCharCount++;
            }
        }
    }

    // Accessor methods to get the count of each type of character
    public int getLetterCount() {
        return letterCount;
    }

    public int getNumberCount() {
        return numberCount;
    }

    public int getSpecialCharCount() {
        return specialCharCount;
    }
}"
13020,"Modify the following Java program to print ""Hello world!"" without using a System.out.print statement.
Input: class HelloWorld {

   public static void main(String args[]) {
      System.out.print(""Hello world!"");
   }
}","class HelloWorld {

   public static void main(String args[]) {
      System.out.println(""Hello world!"");
   }
}","### Instruction: 
 Modify the following Java program to print ""Hello world!"" without using a System.out.print statement. 
 ### Input: class HelloWorld {

   public static void main(String args[]) {
      System.out.print(""Hello world!"");
   }
} 
 ### Response:
 class HelloWorld {

   public static void main(String args[]) {
      System.out.println(""Hello world!"");
   }
}"
13051,Implement a Java code to print the first 10 multiples of a given number,"public class Multiples 
{ 
    public static void main(String[] args) 
    { 
        int number = 5; 
        for (int i = 1; i <= 10; i++)  
        { 
            System.out.println(number*i); 
        } 
    } 
}","### Instruction: 
 Implement a Java code to print the first 10 multiples of a given number 
 ### Response:
 public class Multiples 
{ 
    public static void main(String[] args) 
    { 
        int number = 5; 
        for (int i = 1; i <= 10; i++)  
        { 
            System.out.println(number*i); 
        } 
    } 
}"
13076,Create a function in Java to remove all the values equal to the given number from an array.,"public static int[] removeFromArray(int[] arr, int num){
    int[] newArr = new int[arr.length];
    int newIndex = 0;
    
    for(int i = 0; i < arr.length; i++){
        if(arr[i] != num){
            newArr[newIndex] = arr[i];
            newIndex++;
        }
    }
    return Arrays.copyOfRange(newArr, 0, newIndex);
}","### Instruction: 
 Create a function in Java to remove all the values equal to the given number from an array. 
 ### Response:
 public static int[] removeFromArray(int[] arr, int num){
    int[] newArr = new int[arr.length];
    int newIndex = 0;
    
    for(int i = 0; i < arr.length; i++){
        if(arr[i] != num){
            newArr[newIndex] = arr[i];
            newIndex++;
        }
    }
    return Arrays.copyOfRange(newArr, 0, newIndex);
}"
13125,Write a function in Java which takes an array of integers and calculates the average value.,"public static double calculateAverage(int[] array)
{
    double sum = 0; 
    for(int i = 0; i < array.length; i++) {
        sum += array[i];
    }
    return sum / array.length;
}","### Instruction: 
 Write a function in Java which takes an array of integers and calculates the average value. 
 ### Response:
 public static double calculateAverage(int[] array)
{
    double sum = 0; 
    for(int i = 0; i < array.length; i++) {
        sum += array[i];
    }
    return sum / array.length;
}"
13155,"Write a class definition in Java to create a Person object with the properties age, name, and hobby.","public class Person {
  private int age;
  private String name;
  private String hobby;
  
  //constructors 
  public Person(int age, String name, String hobby) {
    this.age = age;
    this.name = name;
    this.hobby = hobby;
  } 
  
  //getters
  public int getAge() {
    return age;
  }  
  
  public String getName() {
    return name;
  }
  
  public String getHobby() {
    return hobby;
  }
  
  //setters
  public void setAge(int age) {
    this.age = age;
  }
  
  public void setName(String name) {
    this.name = name;
  }
  
  public void setHobby(String hobby) {
    this.hobby = hobby;
  }
  
}","### Instruction: 
 Write a class definition in Java to create a Person object with the properties age, name, and hobby. 
 ### Response:
 public class Person {
  private int age;
  private String name;
  private String hobby;
  
  //constructors 
  public Person(int age, String name, String hobby) {
    this.age = age;
    this.name = name;
    this.hobby = hobby;
  } 
  
  //getters
  public int getAge() {
    return age;
  }  
  
  public String getName() {
    return name;
  }
  
  public String getHobby() {
    return hobby;
  }
  
  //setters
  public void setAge(int age) {
    this.age = age;
  }
  
  public void setName(String name) {
    this.name = name;
  }
  
  public void setHobby(String hobby) {
    this.hobby = hobby;
  }
  
}"
13160,Write a Java class to implement a priority queue data structure.,"public class PriorityQueue {

  private int size;
  private int[] data;

  public PriorityQueue(int capacity) {
    this.size = 0;
    this.data = new int[capacity];
  }

  public void add(int item) {
    if (this.size == this.data.length) {
      throw new IllegalStateException(""The queue is full!"");
    }
    this.data[this.size+1]  = item;
    this.size++;
  }

  public int peek() {
    if (this.size == 0) {
      throw new IllegalStateException(""The queue is empty!"");
    }
    return this.data[this.size-1];
  }

  public int poll() {
    int item = peek();
    this.data[this.size-1] = 0;
    this.size--;
    return item;
  }

  public int size() {
    return this.size;
  }

}","### Instruction: 
 Write a Java class to implement a priority queue data structure. 
 ### Response:
 public class PriorityQueue {

  private int size;
  private int[] data;

  public PriorityQueue(int capacity) {
    this.size = 0;
    this.data = new int[capacity];
  }

  public void add(int item) {
    if (this.size == this.data.length) {
      throw new IllegalStateException(""The queue is full!"");
    }
    this.data[this.size+1]  = item;
    this.size++;
  }

  public int peek() {
    if (this.size == 0) {
      throw new IllegalStateException(""The queue is empty!"");
    }
    return this.data[this.size-1];
  }

  public int poll() {
    int item = peek();
    this.data[this.size-1] = 0;
    this.size--;
    return item;
  }

  public int size() {
    return this.size;
  }

}"
13185,Compile a Java program using the command line.,javac filename.java,"### Instruction: 
 Compile a Java program using the command line. 
 ### Response:
 javac filename.java"
13275,"Write a Java program to generate a schedule for students with a given set of available IDs.
Input: IDs to be scheduled [1, 2, 3]","import java.util.ArrayList;
import java.util.List;

public class ScheduleGenerator {
 
 public static void main(String[] args) {
   List<Integer> ids = new ArrayList<Integer>(); 
  
   ids.add(1); 
   ids.add(2);
   ids.add(3);
  
   System.out.println(generateSchedule(ids));
 }
 
 public static List<Integer> generateSchedule(List<Integer> ids) {
   List<Integer> schedule = new ArrayList<Integer>();
   for (int id : ids) {
    schedule.add(id);
   }
   // Add your code here to generate a customized schedule
 
   return schedule;
 }
}","### Instruction: 
 Write a Java program to generate a schedule for students with a given set of available IDs. 
 ### Input: IDs to be scheduled [1, 2, 3] 
 ### Response:
 import java.util.ArrayList;
import java.util.List;

public class ScheduleGenerator {
 
 public static void main(String[] args) {
   List<Integer> ids = new ArrayList<Integer>(); 
  
   ids.add(1); 
   ids.add(2);
   ids.add(3);
  
   System.out.println(generateSchedule(ids));
 }
 
 public static List<Integer> generateSchedule(List<Integer> ids) {
   List<Integer> schedule = new ArrayList<Integer>();
   for (int id : ids) {
    schedule.add(id);
   }
   // Add your code here to generate a customized schedule
 
   return schedule;
 }
}"
13278,Create a Java class to represent a new type of vehicle called hovercar.,"public class Hovercar {
 
  // Properties
  private String color;
  private int maxSpeed;
  private int currentSpeed;
 
  // Constructor
  public Hovercar(String color, int maxSpeed) {
    this.color = color;
    this.maxSpeed = maxSpeed;
    this.currentSpeed = 0;
  }
 
  // Getters and Setters
  public String getColor() {
    return color;
  }
 
  public void setColor(String color) {
    this.color = color;
  }
 
  public int getMaxSpeed() {
    return maxSpeed;
  }
 
  public void setMaxSpeed(int maxSpeed) {
    this.maxSpeed = maxSpeed;
  }
 
  public int getCurrentSpeed() {
    return currentSpeed;
  }
 
  public void setCurrentSpeed(int currentSpeed) {
    if (currentSpeed > maxSpeed || currentSpeed < 0) {
      this.currentSpeed = 0;
    } else {
      this.currentSpeed = currentSpeed;
    }
  }
}","### Instruction: 
 Create a Java class to represent a new type of vehicle called hovercar. 
 ### Response:
 public class Hovercar {
 
  // Properties
  private String color;
  private int maxSpeed;
  private int currentSpeed;
 
  // Constructor
  public Hovercar(String color, int maxSpeed) {
    this.color = color;
    this.maxSpeed = maxSpeed;
    this.currentSpeed = 0;
  }
 
  // Getters and Setters
  public String getColor() {
    return color;
  }
 
  public void setColor(String color) {
    this.color = color;
  }
 
  public int getMaxSpeed() {
    return maxSpeed;
  }
 
  public void setMaxSpeed(int maxSpeed) {
    this.maxSpeed = maxSpeed;
  }
 
  public int getCurrentSpeed() {
    return currentSpeed;
  }
 
  public void setCurrentSpeed(int currentSpeed) {
    if (currentSpeed > maxSpeed || currentSpeed < 0) {
      this.currentSpeed = 0;
    } else {
      this.currentSpeed = currentSpeed;
    }
  }
}"
13280,Define a Java annotation for a class.,"@interface MyAnnotation {
   String author() default ""unknown"";
   int date();
}","### Instruction: 
 Define a Java annotation for a class. 
 ### Response:
 @interface MyAnnotation {
   String author() default ""unknown"";
   int date();
}"
13284,Create a Java program to take an integer input from the user and print its factorial.,"import java.util.Scanner;

public class Factorial {
 public static void main(String[] args) {
  Scanner sc = new Scanner(System.in);
  System.out.print(""Enter a number: "");
  int n = sc.nextInt();

  int factorial = 1;
  for (int i = 1; i <= n; i++) {
   factorial = factorial * i;
  }

  System.out.println(""The factorial of "" + n + "" is "" + factorial);
 }
}","### Instruction: 
 Create a Java program to take an integer input from the user and print its factorial. 
 ### Response:
 import java.util.Scanner;

public class Factorial {
 public static void main(String[] args) {
  Scanner sc = new Scanner(System.in);
  System.out.print(""Enter a number: "");
  int n = sc.nextInt();

  int factorial = 1;
  for (int i = 1; i <= n; i++) {
   factorial = factorial * i;
  }

  System.out.println(""The factorial of "" + n + "" is "" + factorial);
 }
}"
13386,"Convert this regex expression from python to java syntax.
Input: pattern = r""[A-Za-z0-9_]+""","String pattern = ""[A-Za-z0-9_]+"";","### Instruction: 
 Convert this regex expression from python to java syntax. 
 ### Input: pattern = r""[A-Za-z0-9_]+"" 
 ### Response:
 String pattern = ""[A-Za-z0-9_]+"";"
13419,Create a Java program to print out factorials from 1 to 10.,"public class Factorial {
    public static void main(String[] args) {
        for (int i = 1; i <= 10; ++i) {
            System.out.println(i + ""! = "" + factorial(i));
        }
    }
    public static long factorial(int n) {
        if (n == 0)
            return 1;
        else
            return n * factorial(n - 1);
    }
}","### Instruction: 
 Create a Java program to print out factorials from 1 to 10. 
 ### Response:
 public class Factorial {
    public static void main(String[] args) {
        for (int i = 1; i <= 10; ++i) {
            System.out.println(i + ""! = "" + factorial(i));
        }
    }
    public static long factorial(int n) {
        if (n == 0)
            return 1;
        else
            return n * factorial(n - 1);
    }
}"
13447,Calculate the value of 3^4 using Java code.,"int result = (int)Math.pow(3, 4);","### Instruction: 
 Calculate the value of 3^4 using Java code. 
 ### Response:
 int result = (int)Math.pow(3, 4);"
13490,Write an algorithm in Java to check if a number is a prime number. A prime number is an integer greater than 1 that is only divisible by 1 and itself.,"public static boolean isPrime(int n) 
{ 
    // Corner cases 
    if (n <= 1) 
        return false; 
    if (n <= 3) 
        return true; 
  
    // This is checked so that we can skip 
    // middle five numbers in below loop 
    if (n % 2 == 0 || n % 3 == 0) 
        return false; 
  
    for (int i = 5; i * i <= n; i = i + 6) 
        if (n % i == 0 || n % (i + 2) == 0) 
            return false; 
  
    return true; 
}","### Instruction: 
 Write an algorithm in Java to check if a number is a prime number. A prime number is an integer greater than 1 that is only divisible by 1 and itself. 
 ### Response:
 public static boolean isPrime(int n) 
{ 
    // Corner cases 
    if (n <= 1) 
        return false; 
    if (n <= 3) 
        return true; 
  
    // This is checked so that we can skip 
    // middle five numbers in below loop 
    if (n % 2 == 0 || n % 3 == 0) 
        return false; 
  
    for (int i = 5; i * i <= n; i = i + 6) 
        if (n % i == 0 || n % (i + 2) == 0) 
            return false; 
  
    return true; 
}"
13498,"Write a Java code that adds two numbers, a and b, and returns their sum.
Input: int a = 2
int b = 3","public int sum(int a, int b) {
  return (a + b);
}","### Instruction: 
 Write a Java code that adds two numbers, a and b, and returns their sum. 
 ### Input: int a = 2
int b = 3 
 ### Response:
 public int sum(int a, int b) {
  return (a + b);
}"
13515,Write a simple Java class,"public class MyClass {
    public static void main(String[] args) {
        System.out.println(""Hello World!"");
    }
}","### Instruction: 
 Write a simple Java class 
 ### Response:
 public class MyClass {
    public static void main(String[] args) {
        System.out.println(""Hello World!"");
    }
}"
13541,Create a Java program to sort an array of integers by implementing the Selection Sort technique.,"public static void selectionSort(int[] arr) { 
    int n = arr.length; 
  
    for (int i = 0; i < n-1; i++) 
    { 
        int min_idx = i; 
        for (int j = i+1; j < n; j++) 
            if (arr[j] < arr[min_idx]) 
                min_idx = j; 
  
        int temp = arr[min_idx]; 
        arr[min_idx] = arr[i]; 
        arr[i] = temp; 
    } 
}","### Instruction: 
 Create a Java program to sort an array of integers by implementing the Selection Sort technique. 
 ### Response:
 public static void selectionSort(int[] arr) { 
    int n = arr.length; 
  
    for (int i = 0; i < n-1; i++) 
    { 
        int min_idx = i; 
        for (int j = i+1; j < n; j++) 
            if (arr[j] < arr[min_idx]) 
                min_idx = j; 
  
        int temp = arr[min_idx]; 
        arr[min_idx] = arr[i]; 
        arr[i] = temp; 
    } 
}"
13576,"Write a Java program to display a pyramid with the given height.
Input: height = 3","public class Pyramid 
{ 

    public static void printPyramid(int height) 
    { 
        int i, j; 
        for (i=0; i<height; i++) 
        { 
            for (j=0; j<=i; j++) 
            { 
                System.out.print(""* ""); 
            } 
            System.out.println(); 
        } 
    } 
    public static void main(String args[]) 
    { 
        int height = 3; 
        printPyramid(height); 
    } 
}","### Instruction: 
 Write a Java program to display a pyramid with the given height. 
 ### Input: height = 3 
 ### Response:
 public class Pyramid 
{ 

    public static void printPyramid(int height) 
    { 
        int i, j; 
        for (i=0; i<height; i++) 
        { 
            for (j=0; j<=i; j++) 
            { 
                System.out.print(""* ""); 
            } 
            System.out.println(); 
        } 
    } 
    public static void main(String args[]) 
    { 
        int height = 3; 
        printPyramid(height); 
    } 
}"
13603,"Write Java code to create a class called Card with two string fields, rank and suit.","public class Card {
 
    private String rank;
    private String suit;
 
    // constructor
    public Card(String rank, String suit) {
        this.rank = rank;
        this.suit = suit;
    }
 
    // getters
    public String getRank() {
        return rank;
    }
 
    public String getSuit() {
        return suit;
    }
 
}","### Instruction: 
 Write Java code to create a class called Card with two string fields, rank and suit. 
 ### Response:
 public class Card {
 
    private String rank;
    private String suit;
 
    // constructor
    public Card(String rank, String suit) {
        this.rank = rank;
        this.suit = suit;
    }
 
    // getters
    public String getRank() {
        return rank;
    }
 
    public String getSuit() {
        return suit;
    }
 
}"
13614,Use the Java language to print out ‘Hello World’.,"public class HelloWorld {

    public static void main(String[] args) {
        System.out.println(""Hello World!"");
    }    
}","### Instruction: 
 Use the Java language to print out ‘Hello World’. 
 ### Response:
 public class HelloWorld {

    public static void main(String[] args) {
        System.out.println(""Hello World!"");
    }    
}"
13636,"Design a class in Java to represent a bank account that has a balance, a name, and an account number.","public class BankAccount {
    private String name;
    private String accountNumber;
    private double balance;

    public BankAccount(String name, String accountNumber, double balance) {
        this.name = name;
        this.accountNumber = accountNumber;
        this.balance = balance;
    }

    public void deposit(double amount) {
        balance += amount;
    }

    public void withdraw(double amount) {
        balance -= amount;
    }

    public double getBalance() {
        return balance;
    }

    public String getAccountNumber() {
        return accountNumber;
    }

    public String getName() {
        return name;
    }
}","### Instruction: 
 Design a class in Java to represent a bank account that has a balance, a name, and an account number. 
 ### Response:
 public class BankAccount {
    private String name;
    private String accountNumber;
    private double balance;

    public BankAccount(String name, String accountNumber, double balance) {
        this.name = name;
        this.accountNumber = accountNumber;
        this.balance = balance;
    }

    public void deposit(double amount) {
        balance += amount;
    }

    public void withdraw(double amount) {
        balance -= amount;
    }

    public double getBalance() {
        return balance;
    }

    public String getAccountNumber() {
        return accountNumber;
    }

    public String getName() {
        return name;
    }
}"
13764,"Create a for-loop structure in Java that prints out each index in the array A from 0 to the length of A minus 1.
Input: int[] A = {1, 2, 3, 4, 5}","for(int i = 0; i < A.length; i++) {
    System.out.println(""A["" + i + ""] = "" + A[i]);
}","### Instruction: 
 Create a for-loop structure in Java that prints out each index in the array A from 0 to the length of A minus 1. 
 ### Input: int[] A = {1, 2, 3, 4, 5} 
 ### Response:
 for(int i = 0; i < A.length; i++) {
    System.out.println(""A["" + i + ""] = "" + A[i]);
}"
13783,"Write an if-else statement in Java to check if a given number is greater than or equal to 15.
Input: Number: 9","int number = 9;

if (number >= 15) {
    System.out.println(""Number is greater than or equal to 15"");
} else {
    System.out.println(""Number is less than 15"");
}","### Instruction: 
 Write an if-else statement in Java to check if a given number is greater than or equal to 15. 
 ### Input: Number: 9 
 ### Response:
 int number = 9;

if (number >= 15) {
    System.out.println(""Number is greater than or equal to 15"");
} else {
    System.out.println(""Number is less than 15"");
}"
13789,Create a thread-safe Java method that increments a given counter.,"public static synchronized void incrementCounter(int counter) {
  counter += 1;
}","### Instruction: 
 Create a thread-safe Java method that increments a given counter. 
 ### Response:
 public static synchronized void incrementCounter(int counter) {
  counter += 1;
}"
13848,"Create a Java function that takes an integer array as a parameter and prints out the maximum element of the array.
Input: [1, 5, 9, 10, 12]","public static void printMax(int[] arr) {
    int max = arr[0];
    for (int i = 1; i < arr.length;i++) {
        max = (arr[i] > max) ? arr[i] : max;
    }
    System.out.println(max);
}","### Instruction: 
 Create a Java function that takes an integer array as a parameter and prints out the maximum element of the array. 
 ### Input: [1, 5, 9, 10, 12] 
 ### Response:
 public static void printMax(int[] arr) {
    int max = arr[0];
    for (int i = 1; i < arr.length;i++) {
        max = (arr[i] > max) ? arr[i] : max;
    }
    System.out.println(max);
}"
13857,"Write a Java program to take in 3 strings and combine them into one.
Input: string1 = ""hello""
string2 = ""world""
string3 = ""!""","public class CombineStrings {
    public static void main(String[] args) {
        String string1 = ""hello"";
        String string2 = ""world"";
        String string3 = ""!"";
        String output = string1 + string2 + string3 ;
        System.out.println(output); //hello world!
    }
}","### Instruction: 
 Write a Java program to take in 3 strings and combine them into one. 
 ### Input: string1 = ""hello""
string2 = ""world""
string3 = ""!"" 
 ### Response:
 public class CombineStrings {
    public static void main(String[] args) {
        String string1 = ""hello"";
        String string2 = ""world"";
        String string3 = ""!"";
        String output = string1 + string2 + string3 ;
        System.out.println(output); //hello world!
    }
}"
13859,Create a Java program to determine whether a given string is a palindrome. A palindrome is a string which reads the same forwards and backwards.,"public class Palindrome {
    public static boolean isPalindrome(String s) {
        int i = 0, j = s.length()-1; 
        while (i < j) { 
            if (s.charAt(i) != s.charAt(j)) 
                return false; 
            i++; 
            j--; 
        } 
  
        return true; 
    } 
 
    public static void main(String[] args) {
        String s = ""madam"";
        if (isPalindrome(s)) 
            System.out.println(""The string is a palindrome.""); 
        else
            System.out.println(""The string is not a palindrome.""); 
    }
 
}","### Instruction: 
 Create a Java program to determine whether a given string is a palindrome. A palindrome is a string which reads the same forwards and backwards. 
 ### Response:
 public class Palindrome {
    public static boolean isPalindrome(String s) {
        int i = 0, j = s.length()-1; 
        while (i < j) { 
            if (s.charAt(i) != s.charAt(j)) 
                return false; 
            i++; 
            j--; 
        } 
  
        return true; 
    } 
 
    public static void main(String[] args) {
        String s = ""madam"";
        if (isPalindrome(s)) 
            System.out.println(""The string is a palindrome.""); 
        else
            System.out.println(""The string is not a palindrome.""); 
    }
 
}"
13873,Construct a for loop in Java for iterating through an array.,"for (int i = 0; i < array.length; i++) {
    System.out.println(array[i]);
}","### Instruction: 
 Construct a for loop in Java for iterating through an array. 
 ### Response:
 for (int i = 0; i < array.length; i++) {
    System.out.println(array[i]);
}"
13885,Write some Java code to fill in an array of size n with all consecutive numbers from 1 to n.,"public void fill(int[] array, int n) { 
    for (int i = 0; i < n; i++) { 
        array[i] = i + 1; 
    } 
}","### Instruction: 
 Write some Java code to fill in an array of size n with all consecutive numbers from 1 to n. 
 ### Response:
 public void fill(int[] array, int n) { 
    for (int i = 0; i < n; i++) { 
        array[i] = i + 1; 
    } 
}"
13887,"Rewrite the following Java code into SQL to select all the distinct elements from a table.
Input: String sql = ""SELECT DISTINCT * FROM table_name"";",SELECT DISTINCT * FROM table_name;,"### Instruction: 
 Rewrite the following Java code into SQL to select all the distinct elements from a table. 
 ### Input: String sql = ""SELECT DISTINCT * FROM table_name""; 
 ### Response:
 SELECT DISTINCT * FROM table_name;"
13893,Create a Java program that prints a 10x10 multiplication table.,"class MultiplicationTable {
  public static void main(String[] args) {
    System.out.print(""  "");
    for(int i=1; i<=10; i++)
      System.out.printf(""%4d"", i);
    System.out.println();

    for(int i=1; i<=10; i++) {
      System.out.print(i + "" "");
      for(int j=1; j<=10; j++)
        System.out.printf(""%4d"", i * j);
      System.out.println();
    }
  }
}","### Instruction: 
 Create a Java program that prints a 10x10 multiplication table. 
 ### Response:
 class MultiplicationTable {
  public static void main(String[] args) {
    System.out.print(""  "");
    for(int i=1; i<=10; i++)
      System.out.printf(""%4d"", i);
    System.out.println();

    for(int i=1; i<=10; i++) {
      System.out.print(i + "" "");
      for(int j=1; j<=10; j++)
        System.out.printf(""%4d"", i * j);
      System.out.println();
    }
  }
}"
13897,Explain the main differences between Java and Python.,"The main differences between Java and Python include speed of development, execution speed, type safety, readability and syntax ease, standard libraries, and code scalability. Java is more popular in enterprise applications and is generally faster to develop than Python because of its statically typed language. Java has a JVM (Java Virtual Machine) making it faster to compile and execute than Python, which is dynamically typed. Java is more type-safe and easier to debug, while Python is more readable and easier to learn. Python also has wider range of standard libraries than Java, making development faster. Python is more scalable than Java, making it applicable for larger projects.","### Instruction: 
 Explain the main differences between Java and Python. 
 ### Response:
 The main differences between Java and Python include speed of development, execution speed, type safety, readability and syntax ease, standard libraries, and code scalability. Java is more popular in enterprise applications and is generally faster to develop than Python because of its statically typed language. Java has a JVM (Java Virtual Machine) making it faster to compile and execute than Python, which is dynamically typed. Java is more type-safe and easier to debug, while Python is more readable and easier to learn. Python also has wider range of standard libraries than Java, making development faster. Python is more scalable than Java, making it applicable for larger projects."
13906,"Write a Java statement that takes a string as an argument and prints it out.
Input: String s = ""Hello World!"";",System.out.println(s);,"### Instruction: 
 Write a Java statement that takes a string as an argument and prints it out. 
 ### Input: String s = ""Hello World!""; 
 ### Response:
 System.out.println(s);"
13910,Write a Java program to output the first ten numbers of the Fibonacci sequence.,"class Fibonacci {  
    public void printFibonacciNumbers(int n) { 
    int first = 0;
    int second = 1; 
    System.out.print(first + "" "" + second);  
    for (int i = 2; i < n; i++) { 
        int third = first + second; 
        System.out.print("" ""+third); 
        first = second; 
        second = third; 
    }
    }
}","### Instruction: 
 Write a Java program to output the first ten numbers of the Fibonacci sequence. 
 ### Response:
 class Fibonacci {  
    public void printFibonacciNumbers(int n) { 
    int first = 0;
    int second = 1; 
    System.out.print(first + "" "" + second);  
    for (int i = 2; i < n; i++) { 
        int third = first + second; 
        System.out.print("" ""+third); 
        first = second; 
        second = third; 
    }
    }
}"
14011,"Create a Java program that removes duplicate elements from an array.
Input: int arr[] = {12, 11, 12, 11, 13, 11};","import java.util.HashSet;

public class RemoveDuplicates {
 public static int[] removeDuplicates(int arr[]) 
    { 
        // HashSet for removing duplicates
        HashSet<Integer> set = new HashSet<>();
  
        // adding elements to HashSet 
        for(int i=0; i<arr.length; i++) 
            set.add(arr[i]); 
  
        // Converting HashSet to array
        int i=0;
        int new_arr[] = new int[set.size()];
        for (Integer val : set)  
            new_arr[i++] = val; 
        return new_arr; 
    } 
}","### Instruction: 
 Create a Java program that removes duplicate elements from an array. 
 ### Input: int arr[] = {12, 11, 12, 11, 13, 11}; 
 ### Response:
 import java.util.HashSet;

public class RemoveDuplicates {
 public static int[] removeDuplicates(int arr[]) 
    { 
        // HashSet for removing duplicates
        HashSet<Integer> set = new HashSet<>();
  
        // adding elements to HashSet 
        for(int i=0; i<arr.length; i++) 
            set.add(arr[i]); 
  
        // Converting HashSet to array
        int i=0;
        int new_arr[] = new int[set.size()];
        for (Integer val : set)  
            new_arr[i++] = val; 
        return new_arr; 
    } 
}"
14070,Write a Java method to decide if one point is inside a given rectangle or not.,"public static boolean isPointInsideRectangle(Point p, Rectangle r) {
    return (p.getX() <= r.getMaxX() && p.getX() >= r.getMinX() 
            && p.getY() <= r.getMaxY() && p.getY() >= r.getMinY());
}","### Instruction: 
 Write a Java method to decide if one point is inside a given rectangle or not. 
 ### Response:
 public static boolean isPointInsideRectangle(Point p, Rectangle r) {
    return (p.getX() <= r.getMaxX() && p.getX() >= r.getMinX() 
            && p.getY() <= r.getMaxY() && p.getY() >= r.getMinY());
}"
14110,"Write a Java code snippet to swap two given values.
Input: int a = 10;
int b = 20;","int temp = a;
a = b;
b = temp;","### Instruction: 
 Write a Java code snippet to swap two given values. 
 ### Input: int a = 10;
int b = 20; 
 ### Response:
 int temp = a;
a = b;
b = temp;"
14136,Create a class in Java that stores a student's ID and name.,"public class Student { 
    int id; 
    String name; 
  
    Student(int id, String name) { 
        this.id = id; 
        this.name = name; 
    } 
}","### Instruction: 
 Create a class in Java that stores a student's ID and name. 
 ### Response:
 public class Student { 
    int id; 
    String name; 
  
    Student(int id, String name) { 
        this.id = id; 
        this.name = name; 
    } 
}"
14189,"In the given Java program replace the line number 3 with a line that outputs the remainder of dividing 10 by 3.
Input: public class Main {
    public static void main(String[] args) {
        // Code to be replaced
    }
}","public class Main {
    public static void main(String[] args) {
        System.out.println(10 % 3);
    }
}","### Instruction: 
 In the given Java program replace the line number 3 with a line that outputs the remainder of dividing 10 by 3. 
 ### Input: public class Main {
    public static void main(String[] args) {
        // Code to be replaced
    }
} 
 ### Response:
 public class Main {
    public static void main(String[] args) {
        System.out.println(10 % 3);
    }
}"
14193,"Create a class in Java with private variables, getter and setter method, and constructor.","public class MyClass {
    private int variable1;
    private int variable2;
    
    public MyClass(int variable1, int variable2) {
        this.variable1 = variable1;
        this.variable2 = variable2;
    }
    
    public int getVariable1() {
        return variable1;
    }
    
    public void setVariable1(int variable1) {
        this.variable1 = variable1;
    }
    
    public int getVariable2() {
        return variable2;
    }
    
    public void setVariable2(int variable2) {
        this.variable2 = variable2;
    }
}","### Instruction: 
 Create a class in Java with private variables, getter and setter method, and constructor. 
 ### Response:
 public class MyClass {
    private int variable1;
    private int variable2;
    
    public MyClass(int variable1, int variable2) {
        this.variable1 = variable1;
        this.variable2 = variable2;
    }
    
    public int getVariable1() {
        return variable1;
    }
    
    public void setVariable1(int variable1) {
        this.variable1 = variable1;
    }
    
    public int getVariable2() {
        return variable2;
    }
    
    public void setVariable2(int variable2) {
        this.variable2 = variable2;
    }
}"
14205,"Write a Java program for sorting a given list of numbers in descending order.
Input: unsortedList = [7, 6, 5, 4, 3, 2, 1]","import java.util.Arrays; 

public class SortList { 
    public static void main(String[] args) 
    { 
        int unsortedList[] = {7, 6, 5, 4, 3, 2, 1}; 
        Arrays.sort(unsortedList);
  
        int n = unsortedList.length; 
        for (int i=n-1; i>=0; i--) 
            System.out.print(unsortedList[i]+"" ""); 
    } 
}","### Instruction: 
 Write a Java program for sorting a given list of numbers in descending order. 
 ### Input: unsortedList = [7, 6, 5, 4, 3, 2, 1] 
 ### Response:
 import java.util.Arrays; 

public class SortList { 
    public static void main(String[] args) 
    { 
        int unsortedList[] = {7, 6, 5, 4, 3, 2, 1}; 
        Arrays.sort(unsortedList);
  
        int n = unsortedList.length; 
        for (int i=n-1; i>=0; i--) 
            System.out.print(unsortedList[i]+"" ""); 
    } 
}"
14208,"Write a Java function for reversing a given array of integers.
Input: arr = [1,2,3,4,5,6]","public static void reverse(int arr[])  
{
    int i, j;
    int n = arr.length;    
    for (i = 0; i < n/2; i++)
    {
        j = n - i - 1;
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    } 
}","### Instruction: 
 Write a Java function for reversing a given array of integers. 
 ### Input: arr = [1,2,3,4,5,6] 
 ### Response:
 public static void reverse(int arr[])  
{
    int i, j;
    int n = arr.length;    
    for (i = 0; i < n/2; i++)
    {
        j = n - i - 1;
        int temp = arr[i];
        arr[i] = arr[j];
        arr[j] = temp;
    } 
}"
14215,"Modify the following Java code to print the second element in a given array.
Input: int[] arr = {1, 2, 3, 4, 5};","int[] arr = {1, 2, 3, 4, 5};
System.out.println(arr[1]);","### Instruction: 
 Modify the following Java code to print the second element in a given array. 
 ### Input: int[] arr = {1, 2, 3, 4, 5}; 
 ### Response:
 int[] arr = {1, 2, 3, 4, 5};
System.out.println(arr[1]);"
14219,Create a Java method that takes a decimal number as an argument and returns its binary equivalent.,"public static String decToBinary(int n)  
{  
    String s="""";  
    while(n > 0)  
    {  
        int a = n % 2;  
        s = a + s;  
        n = n / 2;  
    }  
    return s;  
}","### Instruction: 
 Create a Java method that takes a decimal number as an argument and returns its binary equivalent. 
 ### Response:
 public static String decToBinary(int n)  
{  
    String s="""";  
    while(n > 0)  
    {  
        int a = n % 2;  
        s = a + s;  
        n = n / 2;  
    }  
    return s;  
}"
14223,What is the name of the method used in Java to compare two strings?,The method used in Java to compare two strings is the .equals() method.,"### Instruction: 
 What is the name of the method used in Java to compare two strings? 
 ### Response:
 The method used in Java to compare two strings is the .equals() method."
14227,"Write a Java program to create a class for a circle, with a parameter for the radius, and methods for calculating the area and circumference of a circle.","public class Circle {
  double radius;
  
  public Circle(double r){
    this.radius = r;
  }
  
  public double area(){
    return (Math.PI * Math.pow(this.radius, 2));
  }
  
  public double circumference(){
    return (2 * Math.PI * this.radius);
  }
}","### Instruction: 
 Write a Java program to create a class for a circle, with a parameter for the radius, and methods for calculating the area and circumference of a circle. 
 ### Response:
 public class Circle {
  double radius;
  
  public Circle(double r){
    this.radius = r;
  }
  
  public double area(){
    return (Math.PI * Math.pow(this.radius, 2));
  }
  
  public double circumference(){
    return (2 * Math.PI * this.radius);
  }
}"
14243,"Design a Java method that takes an integer as an argument and prints its negative equivalent.
Input: int x = 5;","public static void printNegativeNumber(int x) {
    System.out.println(-x);
}

printNegativeNumber(x); // -5","### Instruction: 
 Design a Java method that takes an integer as an argument and prints its negative equivalent. 
 ### Input: int x = 5; 
 ### Response:
 public static void printNegativeNumber(int x) {
    System.out.println(-x);
}

printNegativeNumber(x); // -5"
14296,Write a Java program to find all pairs of integers from an array whose sum equals a given number.,"public static List<int[]> findSumPairs(int[] arr, int target) {
    List<int[]> pairs = new ArrayList<>();
 
    Map<Integer, Integer> numFreqMap = new HashMap<>();
    for (int value : arr) {
        numFreqMap.put(value, numFreqMap.getOrDefault(value, 0) + 1);
    }
    
    for (int value : arr) {
        int targetSubValue = target - value;
 
        if (numFreqMap.containsKey(targetSubValue)) {
            int targetSubValueFreq = numFreqMap.get(targetSubValue);
 
            if (targetSubValue == value) {
                if (targetSubValueFreq >= 2) {
                    int[] pair = {value, targetSubValue};
                    pairs.add(pair);
                }
            } else {
                int[] pair = {value, targetSubValue};
                pairs.add(pair);
            }
 
            numFreqMap.put(targetSubValue, 0);
        }
    }
 
    return pairs;
}","### Instruction: 
 Write a Java program to find all pairs of integers from an array whose sum equals a given number. 
 ### Response:
 public static List<int[]> findSumPairs(int[] arr, int target) {
    List<int[]> pairs = new ArrayList<>();
 
    Map<Integer, Integer> numFreqMap = new HashMap<>();
    for (int value : arr) {
        numFreqMap.put(value, numFreqMap.getOrDefault(value, 0) + 1);
    }
    
    for (int value : arr) {
        int targetSubValue = target - value;
 
        if (numFreqMap.containsKey(targetSubValue)) {
            int targetSubValueFreq = numFreqMap.get(targetSubValue);
 
            if (targetSubValue == value) {
                if (targetSubValueFreq >= 2) {
                    int[] pair = {value, targetSubValue};
                    pairs.add(pair);
                }
            } else {
                int[] pair = {value, targetSubValue};
                pairs.add(pair);
            }
 
            numFreqMap.put(targetSubValue, 0);
        }
    }
 
    return pairs;
}"
14310,Construct a program in Java to sort an array of String objects.,"public class StringSort { 
  
    public static void sortStringArray(String[] arr) 
    { 
        // Sorting strings 
        Arrays.sort(arr); 
  
        // Displaying the strings after sorting 
        System.out.println(""Strings in sorted order: ""); 
        for (int i = 0; i < arr.length; i++) 
            System.out.println(arr[i]); 
    } 
}","### Instruction: 
 Construct a program in Java to sort an array of String objects. 
 ### Response:
 public class StringSort { 
  
    public static void sortStringArray(String[] arr) 
    { 
        // Sorting strings 
        Arrays.sort(arr); 
  
        // Displaying the strings after sorting 
        System.out.println(""Strings in sorted order: ""); 
        for (int i = 0; i < arr.length; i++) 
            System.out.println(arr[i]); 
    } 
}"
14315,Describe the different thread states in Java programming.,"In Java, threads can be in one of the following states: NEW, RUNNABLE, BLOCKED, WAITING, TIMED_WAITING or TERMINATED. The NEW state means that the thread has been created but not yet started. RUNNABLE means that the thread is running. BLOCKED means that the thread is waiting to acquire a lock. WAITING and TIMED_WAITING means that the thread is waiting for another thread to perform a particular action. Lastly, TERMINATED is the state when the thread has finished execution.","### Instruction: 
 Describe the different thread states in Java programming. 
 ### Response:
 In Java, threads can be in one of the following states: NEW, RUNNABLE, BLOCKED, WAITING, TIMED_WAITING or TERMINATED. The NEW state means that the thread has been created but not yet started. RUNNABLE means that the thread is running. BLOCKED means that the thread is waiting to acquire a lock. WAITING and TIMED_WAITING means that the thread is waiting for another thread to perform a particular action. Lastly, TERMINATED is the state when the thread has finished execution."
14332,Create a Java program for finding the largest number among three integers.,"public class LargestNumber 
{
    public static int getLargestNumber(int num1, int num2, int num3)
    {
        int greater;
        if( num1 > num2 && num1 > num3)
         greater = num1;
        
        else if( num2 > num1 && num2 > num3)
         greater = num2;
         
        else
         greater = num3;
         
        return greater;
    }
 
    public static void main(String[] args) 
    {
        int num1 = 10, num2 = 14, num3 = 12;
        System.out.println(""Largest number among "" + num1 + "", "" + num2 + "" and "" + num3 + "" is "" + getLargestNumber(num1, num2, num3));
    }
}","### Instruction: 
 Create a Java program for finding the largest number among three integers. 
 ### Response:
 public class LargestNumber 
{
    public static int getLargestNumber(int num1, int num2, int num3)
    {
        int greater;
        if( num1 > num2 && num1 > num3)
         greater = num1;
        
        else if( num2 > num1 && num2 > num3)
         greater = num2;
         
        else
         greater = num3;
         
        return greater;
    }
 
    public static void main(String[] args) 
    {
        int num1 = 10, num2 = 14, num3 = 12;
        System.out.println(""Largest number among "" + num1 + "", "" + num2 + "" and "" + num3 + "" is "" + getLargestNumber(num1, num2, num3));
    }
}"
14390,"Write a code in Java to print out the power of two of the given number.
Input: Number: 4","""""""
Write a code in Java to print out the power of two of the given number
""""""

public class TwoPower 
{
    public static void main(String[] args) 
    {
        int number = 4;
        double res = Math.pow(2,number);
        System.out.println(""2 to the power of "" + number + "" is "" + res);
    }
}","### Instruction: 
 Write a code in Java to print out the power of two of the given number. 
 ### Input: Number: 4 
 ### Response:
 """"""
Write a code in Java to print out the power of two of the given number
""""""

public class TwoPower 
{
    public static void main(String[] args) 
    {
        int number = 4;
        double res = Math.pow(2,number);
        System.out.println(""2 to the power of "" + number + "" is "" + res);
    }
}"
14460,"Gather the source code of a web page using a Java program.
Input: String url = ""https://www.example.com"";","try {
    URL page = new URL(url);
    URLConnection conn = page.openConnection();
    BufferedReader in = new BufferedReader(
                     new InputStreamReader(conn.getInputStream())
    );

    String line;
    while ((line = in.readLine()) != null) {
        System.out.println(line);
    }

    in.close();
} catch (IOException e) {
    System.err.println(""An IOException was caught!"");
    e.printStackTrace();
}","### Instruction: 
 Gather the source code of a web page using a Java program. 
 ### Input: String url = ""https://www.example.com""; 
 ### Response:
 try {
    URL page = new URL(url);
    URLConnection conn = page.openConnection();
    BufferedReader in = new BufferedReader(
                     new InputStreamReader(conn.getInputStream())
    );

    String line;
    while ((line = in.readLine()) != null) {
        System.out.println(line);
    }

    in.close();
} catch (IOException e) {
    System.err.println(""An IOException was caught!"");
    e.printStackTrace();
}"
14478,"Write a function in Java to sum up all the elements in a two-dimensional array
Input: int arr[][]={{1,2,3},{4,5,6}};","public static int findSum(int[][] array) {  
    int sum=0;  
    for(int i=0;i<array.length;i++){
      for(int j=0;j<array[i].length;j++){
        sum = sum+array[i][j];
      }
    }
    return sum;  
}","### Instruction: 
 Write a function in Java to sum up all the elements in a two-dimensional array 
 ### Input: int arr[][]={{1,2,3},{4,5,6}}; 
 ### Response:
 public static int findSum(int[][] array) {  
    int sum=0;  
    for(int i=0;i<array.length;i++){
      for(int j=0;j<array[i].length;j++){
        sum = sum+array[i][j];
      }
    }
    return sum;  
}"
14491,Write a code in Java for creating an instance of an interface.,"MyInterface myInterface = new MyInterface() {
    @Override
    public void myMethod() {
        // Implement your code here
    }
};","### Instruction: 
 Write a code in Java for creating an instance of an interface. 
 ### Response:
 MyInterface myInterface = new MyInterface() {
    @Override
    public void myMethod() {
        // Implement your code here
    }
};"
14530,Develop a function in Java to display the prime numbers between 0 and 100.,"public static void printPrimeNumbers(int n) {

    for (int i = 2; i < n; i++) {
        boolean isPrime = true;
        for (int j = 2; j < i; j++) {
            if (i % j == 0 ) {
                isPrime = false;
           
            }
        }
            
        if (isPrime) {
            System.out.print(i + "" "");
        }
    }
}","### Instruction: 
 Develop a function in Java to display the prime numbers between 0 and 100. 
 ### Response:
 public static void printPrimeNumbers(int n) {

    for (int i = 2; i < n; i++) {
        boolean isPrime = true;
        for (int j = 2; j < i; j++) {
            if (i % j == 0 ) {
                isPrime = false;
           
            }
        }
            
        if (isPrime) {
            System.out.print(i + "" "");
        }
    }
}"
14557,Create a Java class for representing a student object.,"public class Student {
    private String id;
    private String name;
    private int age;
    
    public Student(String id, String name, int age) {
        this.id = id;
        this.name = name;
        this.age = age;
    }

     public String getId() {
         return id;
     }

     public void setId(String id) {
        this.id = id;
     }

     public String getName() {
        return name;
     }

     public void setName(String name) {
        this.name = name;
     }

     public int getAge() {
        return age;
     }

     public void setAge(int age) {
        this.age = age;
     }
 }","### Instruction: 
 Create a Java class for representing a student object. 
 ### Response:
 public class Student {
    private String id;
    private String name;
    private int age;
    
    public Student(String id, String name, int age) {
        this.id = id;
        this.name = name;
        this.age = age;
    }

     public String getId() {
         return id;
     }

     public void setId(String id) {
        this.id = id;
     }

     public String getName() {
        return name;
     }

     public void setName(String name) {
        this.name = name;
     }

     public int getAge() {
        return age;
     }

     public void setAge(int age) {
        this.age = age;
     }
 }"
14577,Create a Java program to print out the multiplication table for the first 10 numbers,"public class MultiplicationTable {
 public static void main(String[] args) {
  for (int i = 1; i <= 10; i++) {
   for (int j = 1; j <= 10; j++) {
    System.out.print(i * j + "" "");
   }
   System.out.println();
  }
 }
}","### Instruction: 
 Create a Java program to print out the multiplication table for the first 10 numbers 
 ### Response:
 public class MultiplicationTable {
 public static void main(String[] args) {
  for (int i = 1; i <= 10; i++) {
   for (int j = 1; j <= 10; j++) {
    System.out.print(i * j + "" "");
   }
   System.out.println();
  }
 }
}"
14602,Create a Java program to compute the volume of a cube.,"public class CubeVolume {
 
    public static void main(String[] args) {
        double sideLenght = 10; 
        double volume;
 
        volume = sideLenght * sideLenght * sideLenght;
 
        System.out.println(""Volume of a cube with side lenght ""+ sideLenght +"" is: "" + volume);
    }
}","### Instruction: 
 Create a Java program to compute the volume of a cube. 
 ### Response:
 public class CubeVolume {
 
    public static void main(String[] args) {
        double sideLenght = 10; 
        double volume;
 
        volume = sideLenght * sideLenght * sideLenght;
 
        System.out.println(""Volume of a cube with side lenght ""+ sideLenght +"" is: "" + volume);
    }
}"
14628,"Write a Java program that creates two arrays and prints out the difference in number of elements between them.
Input: int[] arr1 = {1, 2, 3, 4, 5};
int[] arr2 = {1, 2, 3};","public class ArraySizeDiff {
    public static void main(String[] args) {
        int[] arr1 = {1, 2, 3, 4, 5};
        int[] arr2 = {1, 2, 3};

        int diff = arr1.length - arr2.length;
        System.out.println(""Difference in number of elements between the two arrays is: "" + diff);
    }
}","### Instruction: 
 Write a Java program that creates two arrays and prints out the difference in number of elements between them. 
 ### Input: int[] arr1 = {1, 2, 3, 4, 5};
int[] arr2 = {1, 2, 3}; 
 ### Response:
 public class ArraySizeDiff {
    public static void main(String[] args) {
        int[] arr1 = {1, 2, 3, 4, 5};
        int[] arr2 = {1, 2, 3};

        int diff = arr1.length - arr2.length;
        System.out.println(""Difference in number of elements between the two arrays is: "" + diff);
    }
}"
14647,"Create a java program that checks if a given string has any special characters
Input: String str = ""This is a string!""","public class CheckSpecialChar {

    public static void main(String[] args) {
        String str = ""This is a string!"";
        boolean flag = false;
        String specialChar = ""[^a-zA-Z0-9]"";
        if(str.matches(specialChar))
        {
            flag = true;
        }
        System.out.println(""Does the string contains special character : "" + flag);
    }

}","### Instruction: 
 Create a java program that checks if a given string has any special characters 
 ### Input: String str = ""This is a string!"" 
 ### Response:
 public class CheckSpecialChar {

    public static void main(String[] args) {
        String str = ""This is a string!"";
        boolean flag = false;
        String specialChar = ""[^a-zA-Z0-9]"";
        if(str.matches(specialChar))
        {
            flag = true;
        }
        System.out.println(""Does the string contains special character : "" + flag);
    }

}"
14652,Create two classes 'Circle' and 'Rectangle' in Java which print the circumference and area of their respective shapes.,"class Circle {
	private double radius;

	public Circle(double radius) {
		this.radius = radius;
	}

	public double getCircumference() {	
		return 2 * Math.PI * this.radius;
	}

	public double getArea() {
		return Math.PI * this.radius * this.radius;	
	}
}

class Rectangle {
	private double width;
	private double length;

	public Rectangle(double width, double length) {
		this.width = width;
		this.length = length;
	}

	public double getCircumference() {
		return 2*(this.width + this.length);
	}

	public double getArea() {
		return this.width * this.length;
	}
}","### Instruction: 
 Create two classes 'Circle' and 'Rectangle' in Java which print the circumference and area of their respective shapes. 
 ### Response:
 class Circle {
	private double radius;

	public Circle(double radius) {
		this.radius = radius;
	}

	public double getCircumference() {	
		return 2 * Math.PI * this.radius;
	}

	public double getArea() {
		return Math.PI * this.radius * this.radius;	
	}
}

class Rectangle {
	private double width;
	private double length;

	public Rectangle(double width, double length) {
		this.width = width;
		this.length = length;
	}

	public double getCircumference() {
		return 2*(this.width + this.length);
	}

	public double getArea() {
		return this.width * this.length;
	}
}"
14654,Write a function in Java to instantiate an Employee class with a given name and age.,"public class Employee {
	private String name;
	private int age;
	
	public Employee(String name, int age) {
		this.name = name;
		this.age = age;
	}
	
	public String getName() {
		return name;
	}
	
	public int getAge() {
		return age;
	}
	
	public void setName(String name) {
		this.name = name;
	}
	
	public void setAge(int age) {
		this.age = age;
	}
}","### Instruction: 
 Write a function in Java to instantiate an Employee class with a given name and age. 
 ### Response:
 public class Employee {
	private String name;
	private int age;
	
	public Employee(String name, int age) {
		this.name = name;
		this.age = age;
	}
	
	public String getName() {
		return name;
	}
	
	public int getAge() {
		return age;
	}
	
	public void setName(String name) {
		this.name = name;
	}
	
	public void setAge(int age) {
		this.age = age;
	}
}"
14697,Generate a Java program to sort an array of n elements in ascending order,"public static void sort(int arr[]) 
{ 
    int n = arr.length; 
  
    // Build heap (rearrange array) 
    for (int i = n / 2 - 1; i >= 0; i--) 
        heapify(arr, n, i); 
  
    // One by one extract an element from heap 
    for (int i=n-1; i>=0; i--) 
    { 
        // Move current root to end 
        int temp = arr[0]; 
        arr[0] = arr[i]; 
        arr[i] = temp; 
  
        // call max heapify on the reduced heap 
        heapify(arr, i, 0); 
    } 
} 
  
// To heapify a subtree rooted with node i which is 
// an index in arr[]. n is size of heap 
static void heapify(int arr[], int n, int i) 
{ 
    int largest = i; // Initialize largest as root 
    int l = 2*i + 1; // left = 2*i + 1 
    int r = 2*i + 2; // right = 2*i + 2 
  
    // If left child is larger than root 
    if (l < n && arr[l] > arr[largest]) 
        largest = l; 
  
    // If right child is larger than largest so far 
    if (r < n && arr[r] > arr[largest]) 
        largest = r; 
  
    // If largest is not root 
    if (largest != i) 
    { 
        int swap = arr[i]; 
        arr[i] = arr[largest]; 
        arr[largest] = swap; 
  
        // Recursively heapify the affected sub-tree 
        heapify(arr, n, largest); 
    } 
}","### Instruction: 
 Generate a Java program to sort an array of n elements in ascending order 
 ### Response:
 public static void sort(int arr[]) 
{ 
    int n = arr.length; 
  
    // Build heap (rearrange array) 
    for (int i = n / 2 - 1; i >= 0; i--) 
        heapify(arr, n, i); 
  
    // One by one extract an element from heap 
    for (int i=n-1; i>=0; i--) 
    { 
        // Move current root to end 
        int temp = arr[0]; 
        arr[0] = arr[i]; 
        arr[i] = temp; 
  
        // call max heapify on the reduced heap 
        heapify(arr, i, 0); 
    } 
} 
  
// To heapify a subtree rooted with node i which is 
// an index in arr[]. n is size of heap 
static void heapify(int arr[], int n, int i) 
{ 
    int largest = i; // Initialize largest as root 
    int l = 2*i + 1; // left = 2*i + 1 
    int r = 2*i + 2; // right = 2*i + 2 
  
    // If left child is larger than root 
    if (l < n && arr[l] > arr[largest]) 
        largest = l; 
  
    // If right child is larger than largest so far 
    if (r < n && arr[r] > arr[largest]) 
        largest = r; 
  
    // If largest is not root 
    if (largest != i) 
    { 
        int swap = arr[i]; 
        arr[i] = arr[largest]; 
        arr[largest] = swap; 
  
        // Recursively heapify the affected sub-tree 
        heapify(arr, n, largest); 
    } 
}"
14723,"Create a Java class called Student that contains a first name, last name and age.","public class Student {
    private String firstName;
    private String lastName;
    private int age;
      
    public Student(String firstName, String lastName, int age) {
        this.firstName = firstName;
        this.lastName = lastName;
        this.age = age;
    }
   
    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        if(age<0) {
            throw new IllegalArgumentException(""age must be >= 0"");
        }
        this.age = age;
	}
}","### Instruction: 
 Create a Java class called Student that contains a first name, last name and age. 
 ### Response:
 public class Student {
    private String firstName;
    private String lastName;
    private int age;
      
    public Student(String firstName, String lastName, int age) {
        this.firstName = firstName;
        this.lastName = lastName;
        this.age = age;
    }
   
    public String getFirstName() {
        return firstName;
    }

    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    public String getLastName() {
        return lastName;
    }

    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    public int getAge() {
        return age;
    }

    public void setAge(int age) {
        if(age<0) {
            throw new IllegalArgumentException(""age must be >= 0"");
        }
        this.age = age;
	}
}"
14747,"Create a Java class which sorts the given array of numbers.
Input: [9, 2, 4, 3, 6, 1]","class ArraySort { 
  
    void sort(int arr[]) { 
        int n = arr.length; 
  
        // One by one move boundary of unsorted subarray 
        for (int i = 0; i < n-1; i++) { 
            
            // Find the minimum element in unsorted array 
            int min_index = i; 
            for (int j = i+1; j < n; j++) 
                if (arr[j] < arr[min_index]) 
                    min_index = j; 
  
            // Swap the found minimum element with the first element 
            int temp = arr[min_index]; 
            arr[min_index] = arr[i]; 
            arr[i] = temp; 
        } 
    } 
  
    // Prints the array 
    void printArray(int arr[]) { 
        int n = arr.length; 
        for (int i=0; i<n; ++i) 
            System.out.print(arr[i] + "" ""); 
        System.out.println(); 
    } 
  
    // Driver code to test above 
    public static void main(String args[]) 
    { 
        ArraySort ob = new ArraySort(); 
        int arr[] = {9, 2, 4, 3, 6, 1}; 
        ob.sort(arr); 
        System.out.println(""Sorted array""); 
        ob.printArray(arr); 
    } 
}","### Instruction: 
 Create a Java class which sorts the given array of numbers. 
 ### Input: [9, 2, 4, 3, 6, 1] 
 ### Response:
 class ArraySort { 
  
    void sort(int arr[]) { 
        int n = arr.length; 
  
        // One by one move boundary of unsorted subarray 
        for (int i = 0; i < n-1; i++) { 
            
            // Find the minimum element in unsorted array 
            int min_index = i; 
            for (int j = i+1; j < n; j++) 
                if (arr[j] < arr[min_index]) 
                    min_index = j; 
  
            // Swap the found minimum element with the first element 
            int temp = arr[min_index]; 
            arr[min_index] = arr[i]; 
            arr[i] = temp; 
        } 
    } 
  
    // Prints the array 
    void printArray(int arr[]) { 
        int n = arr.length; 
        for (int i=0; i<n; ++i) 
            System.out.print(arr[i] + "" ""); 
        System.out.println(); 
    } 
  
    // Driver code to test above 
    public static void main(String args[]) 
    { 
        ArraySort ob = new ArraySort(); 
        int arr[] = {9, 2, 4, 3, 6, 1}; 
        ob.sort(arr); 
        System.out.println(""Sorted array""); 
        ob.printArray(arr); 
    } 
}"
14792,"Write a Java program to remove n characters from a given string, starting from a specified position.
Input: str = ""This is a sample string""
  n = 5
  pos = 8","public static String removeCharAt(String s, int pos, int n) 
    { 
        return s.substring(0, pos) + s.substring(pos + n); 
    } 
  
    // Driver Code 
    public static void main(String[] args) 
    { 
        String str = ""This is a sample string""; 
        int n = 5; 
        int pos = 8; 
  
        System.out.println(removeCharAt(str, pos, n)); 
    }","### Instruction: 
 Write a Java program to remove n characters from a given string, starting from a specified position. 
 ### Input: str = ""This is a sample string""
  n = 5
  pos = 8 
 ### Response:
 public static String removeCharAt(String s, int pos, int n) 
    { 
        return s.substring(0, pos) + s.substring(pos + n); 
    } 
  
    // Driver Code 
    public static void main(String[] args) 
    { 
        String str = ""This is a sample string""; 
        int n = 5; 
        int pos = 8; 
  
        System.out.println(removeCharAt(str, pos, n)); 
    }"
14902,Write a Java program to print all the Armstrong numbers between 100 to 500. An Armstrong number is a number that is equal to the sum of its own digits each raised to the power of the total number of digits.,"public class ArmstrongNumbers {
 
    public static void main(String[] args) {
 
        int min = 100;
        int max = 500;
 
        for (int number = min; number <= max; number++) {
            int digits = 0;
            int result = 0;
            int originalNumber = number;
 
            while (originalNumber != 0) {
                originalNumber /= 10;
                digits++;
            }
 
            originalNumber = number;
 
            while (originalNumber != 0) {
                int remainder = originalNumber % 10;
                result += Math.pow(remainder, digits);
                originalNumber /= 10;
            }
            if (result == number) {
                System.out.println(number);
            }
        }
    }
}","### Instruction: 
 Write a Java program to print all the Armstrong numbers between 100 to 500. An Armstrong number is a number that is equal to the sum of its own digits each raised to the power of the total number of digits. 
 ### Response:
 public class ArmstrongNumbers {
 
    public static void main(String[] args) {
 
        int min = 100;
        int max = 500;
 
        for (int number = min; number <= max; number++) {
            int digits = 0;
            int result = 0;
            int originalNumber = number;
 
            while (originalNumber != 0) {
                originalNumber /= 10;
                digits++;
            }
 
            originalNumber = number;
 
            while (originalNumber != 0) {
                int remainder = originalNumber % 10;
                result += Math.pow(remainder, digits);
                originalNumber /= 10;
            }
            if (result == number) {
                System.out.println(number);
            }
        }
    }
}"
14908,Write a Java code to create a thread and process the tasks in separate threads.,"public class Main {
  public static void main(String[] args)  
  { 
    Thread thread1 = new Thread(new Runnable(){ 
            public void run(){ 
                //task 1
            } 
        });  
    Thread thread2 = new Thread(new Runnable(){ 
            public void run(){ 
                //task 2
            } 
        }); 
    thread1.start(); 
    thread2.start(); 
  }
}","### Instruction: 
 Write a Java code to create a thread and process the tasks in separate threads. 
 ### Response:
 public class Main {
  public static void main(String[] args)  
  { 
    Thread thread1 = new Thread(new Runnable(){ 
            public void run(){ 
                //task 1
            } 
        });  
    Thread thread2 = new Thread(new Runnable(){ 
            public void run(){ 
                //task 2
            } 
        }); 
    thread1.start(); 
    thread2.start(); 
  }
}"
14936,Create a method in Java that takes two integers and finds the maximum of them.,"public static int findMax(int num1, int num2) {
   return (num1 > num2) ? num1 : num2;
}","### Instruction: 
 Create a method in Java that takes two integers and finds the maximum of them. 
 ### Response:
 public static int findMax(int num1, int num2) {
   return (num1 > num2) ? num1 : num2;
}"
14945,Create a Java method to interpret a given string into an integer.,"public static int stringToInteger(String s) { 
    int result = 0; 
    int power = 0; 
    for (int i = s.length() - 1; i >= 0; i--) { 
       char ch = s.charAt(i); 
       result += (ch - '0') * Math.pow(10, power); 
        power++; 
    } 
    return result; 
}","### Instruction: 
 Create a Java method to interpret a given string into an integer. 
 ### Response:
 public static int stringToInteger(String s) { 
    int result = 0; 
    int power = 0; 
    for (int i = s.length() - 1; i >= 0; i--) { 
       char ch = s.charAt(i); 
       result += (ch - '0') * Math.pow(10, power); 
        power++; 
    } 
    return result; 
}"
14947,Create a Java class with an empty constructor and a parameterized constructor,"public class TestConstructor {
 
    public TestConstructor() {
    }
 
    public TestConstructor(int n) {
        // code to run when constructor with parameter is called 
    }
}","### Instruction: 
 Create a Java class with an empty constructor and a parameterized constructor 
 ### Response:
 public class TestConstructor {
 
    public TestConstructor() {
    }
 
    public TestConstructor(int n) {
        // code to run when constructor with parameter is called 
    }
}"
14950,"Write a Java program that takes an array of integers and prints the numbers that are divisible by 5
Input: [10, 20, 25, 15]","// Create the array of integers
int[] numbers = {10, 20, 25, 15};
 
// Iterate over array and print numbers divisible by 5
for (int number : numbers) {
  if (number % 5 == 0) {
    System.out.println(number);
  }
}
 
// Output: 10 20 25","### Instruction: 
 Write a Java program that takes an array of integers and prints the numbers that are divisible by 5 
 ### Input: [10, 20, 25, 15] 
 ### Response:
 // Create the array of integers
int[] numbers = {10, 20, 25, 15};
 
// Iterate over array and print numbers divisible by 5
for (int number : numbers) {
  if (number % 5 == 0) {
    System.out.println(number);
  }
}
 
// Output: 10 20 25"
14961,"Implement a data structure in Java that implements a stack with the following methods: 'push', 'pop', 'peek', and 'isEmpty'.","import java.util.*;
 
public class StackImplementation {
 
    private Stack<Integer> stack;
 
    public StackImplementation() {
        stack = new Stack<>();
    }
 
    public void push(int x) {
        stack.push(x);
    }
 
    public int pop() {
        if (stack.isEmpty()) {
            System.out.println(""Stack is empty"");
            return -1;
        }
        return stack.pop();
    }
 
    public int peek() {
        if (stack.isEmpty()) {
            System.out.println(""Stack is empty"");
            return -1;
        }
        return stack.peek();
    }
 
    public boolean isEmpty() {
        return stack.isEmpty();
    }
}","### Instruction: 
 Implement a data structure in Java that implements a stack with the following methods: 'push', 'pop', 'peek', and 'isEmpty'. 
 ### Response:
 import java.util.*;
 
public class StackImplementation {
 
    private Stack<Integer> stack;
 
    public StackImplementation() {
        stack = new Stack<>();
    }
 
    public void push(int x) {
        stack.push(x);
    }
 
    public int pop() {
        if (stack.isEmpty()) {
            System.out.println(""Stack is empty"");
            return -1;
        }
        return stack.pop();
    }
 
    public int peek() {
        if (stack.isEmpty()) {
            System.out.println(""Stack is empty"");
            return -1;
        }
        return stack.peek();
    }
 
    public boolean isEmpty() {
        return stack.isEmpty();
    }
}"
15001,Write a RabbitMQ consumer in Java to listen to a particular queue.,"import com.rabbitmq.client.ConnectionFactory;
import com.rabbitmq.client.Connection;
import com.rabbitmq.client.Channel;
import com.rabbitmq.client.DeliverCallback;

public class Consumer {

  public static void main(String[] args) throws Exception {
    // establish a connection to the RabbitMQ broker
    ConnectionFactory factory = new ConnectionFactory();
    factory.setHost(""hostname"");
    Connection connection = factory.newConnection();
    Channel channel = connection.createChannel();
    
    // declare a queue
    String queueName = ""myQueue"";
    channel.queueDeclare(queueName, false, false, false, null);

    // set up a consumer that will listen to the declared queue
    DeliverCallback deliverCallback = (consumerTag, delivery) -> {
      String message = new String(delivery.getBody());
      System.out.println(""Received '"" + message + ""'"");
    };
    channel.basicConsume(queueName, true, deliverCallback, consumerTag -> { });
  }
}","### Instruction: 
 Write a RabbitMQ consumer in Java to listen to a particular queue. 
 ### Response:
 import com.rabbitmq.client.ConnectionFactory;
import com.rabbitmq.client.Connection;
import com.rabbitmq.client.Channel;
import com.rabbitmq.client.DeliverCallback;

public class Consumer {

  public static void main(String[] args) throws Exception {
    // establish a connection to the RabbitMQ broker
    ConnectionFactory factory = new ConnectionFactory();
    factory.setHost(""hostname"");
    Connection connection = factory.newConnection();
    Channel channel = connection.createChannel();
    
    // declare a queue
    String queueName = ""myQueue"";
    channel.queueDeclare(queueName, false, false, false, null);

    // set up a consumer that will listen to the declared queue
    DeliverCallback deliverCallback = (consumerTag, delivery) -> {
      String message = new String(delivery.getBody());
      System.out.println(""Received '"" + message + ""'"");
    };
    channel.basicConsume(queueName, true, deliverCallback, consumerTag -> { });
  }
}"
15006,Create a class in Java with three private fields and three public functions to access those fields.,"public class MyClass{
    private int num;
    private double dbl; 
    private char c;

    public int getNum(){
        return num;
    }
    public void setNum(int num){
        this.num = num;
    }
    public double getDbl(){
        return dbl;
    }
    public void setDbl(double dbl){
        this.dbl = dbl;
    }
    public char getChar(){
        return c;
    }
    public void setChar(char c){
        this.c = c;
    }
}","### Instruction: 
 Create a class in Java with three private fields and three public functions to access those fields. 
 ### Response:
 public class MyClass{
    private int num;
    private double dbl; 
    private char c;

    public int getNum(){
        return num;
    }
    public void setNum(int num){
        this.num = num;
    }
    public double getDbl(){
        return dbl;
    }
    public void setDbl(double dbl){
        this.dbl = dbl;
    }
    public char getChar(){
        return c;
    }
    public void setChar(char c){
        this.c = c;
    }
}"
15087,"Write the output for the following Java program.
Input: public class OddNumber {
  public static void main(String[] args) {
    for(int i=10; i<20; i++) {
      if(i % 2 == 1) {
        System.out.println(i);
      }
    }
  }
}","11
13
15
17
19","### Instruction: 
 Write the output for the following Java program. 
 ### Input: public class OddNumber {
  public static void main(String[] args) {
    for(int i=10; i<20; i++) {
      if(i % 2 == 1) {
        System.out.println(i);
      }
    }
  }
} 
 ### Response:
 11
13
15
17
19"
15104,Write a Java code snippet to check whether or not a number is a prime.,"public static boolean isPrime(int number) { 
    if (number == 2 || number == 3) return true; 
    if (number % 2 == 0 || number % 3 == 0) return false; 
    int sqrtN = (int)Math.sqrt(number) + 1; 
    for (int i = 6; i <= sqrtN; i += 6) { 
        if (number % (i - 1) == 0 || number % (i + 1) == 0) 
            return false; 
    } 
  
    return true; 
}","### Instruction: 
 Write a Java code snippet to check whether or not a number is a prime. 
 ### Response:
 public static boolean isPrime(int number) { 
    if (number == 2 || number == 3) return true; 
    if (number % 2 == 0 || number % 3 == 0) return false; 
    int sqrtN = (int)Math.sqrt(number) + 1; 
    for (int i = 6; i <= sqrtN; i += 6) { 
        if (number % (i - 1) == 0 || number % (i + 1) == 0) 
            return false; 
    } 
  
    return true; 
}"
15112,"Write a Java program to print the elements (i, j) of a two dimensional array.
Input: int[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}","for (int i = 0; i < matrix.length; i++) {
    for (int j = 0; j < matrix[i].length; j++)
        System.out.print(matrix[i][j] + "" "");
    System.out.println();
}","### Instruction: 
 Write a Java program to print the elements (i, j) of a two dimensional array. 
 ### Input: int[][] matrix = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}} 
 ### Response:
 for (int i = 0; i < matrix.length; i++) {
    for (int j = 0; j < matrix[i].length; j++)
        System.out.print(matrix[i][j] + "" "");
    System.out.println();
}"
15120,Generate a function in Java to calculate the minimum of two values,"public int minValue(int a, int b) { 
  if (a < b) {
    return a;
  } else {
    return b;
  }
}","### Instruction: 
 Generate a function in Java to calculate the minimum of two values 
 ### Response:
 public int minValue(int a, int b) { 
  if (a < b) {
    return a;
  } else {
    return b;
  }
}"
15126,"Compile a given Java program.
Input: A java program containing the following lines

class Sample { 
    public static void main(String args[]) { 
        System.out.println(""Hello World""); 
    } 
}",javac Sample.java,"### Instruction: 
 Compile a given Java program. 
 ### Input: A java program containing the following lines

class Sample { 
    public static void main(String args[]) { 
        System.out.println(""Hello World""); 
    } 
} 
 ### Response:
 javac Sample.java"
15156,"Edit the following Java code so that it will output the length of a string
Input: String name = ""John""","String name = ""John""; 
System.out.println(""Length of string is: "" + name.length());","### Instruction: 
 Edit the following Java code so that it will output the length of a string 
 ### Input: String name = ""John"" 
 ### Response:
 String name = ""John""; 
System.out.println(""Length of string is: "" + name.length());"
15212,What is the purpose of Java virtual machine?,"The purpose of the Java virtual machine (JVM) is to provide a runtime environment for Java applications, in which programs are able to run independently of the underlying operating system. It is responsible for providing a secure and portable environment for the Java program's execution, as well as for providing several useful features, such as garbage collection and memory management. Additionally, it is also capable of providing platform independence, as it is capable of running bytecode on any platform, regardless of the underlying operating system and hardware.","### Instruction: 
 What is the purpose of Java virtual machine? 
 ### Response:
 The purpose of the Java virtual machine (JVM) is to provide a runtime environment for Java applications, in which programs are able to run independently of the underlying operating system. It is responsible for providing a secure and portable environment for the Java program's execution, as well as for providing several useful features, such as garbage collection and memory management. Additionally, it is also capable of providing platform independence, as it is capable of running bytecode on any platform, regardless of the underlying operating system and hardware."
15242,Create a function in Java to print out all substrings of an input string.,"public static void printSubstrings(String str) {
    for (int i = 0; i < str.length(); i++) { 
        for (int j = i + 1; j <= str.length(); j++) { 
            System.out.println(str.substring(i, j)); 
        } 
    } 
}","### Instruction: 
 Create a function in Java to print out all substrings of an input string. 
 ### Response:
 public static void printSubstrings(String str) {
    for (int i = 0; i < str.length(); i++) { 
        for (int j = i + 1; j <= str.length(); j++) { 
            System.out.println(str.substring(i, j)); 
        } 
    } 
}"
15291,"Debug this Java code and explain what was wrong.
Input: public static int add(int a, int b){
  int c = a b;
  return c;
}","The code contained a syntax error. In the second line of the code, the operator being used was ""b"" instead of ""+"". The correct line should be ""int c = a + b;"". This error was causing the program to return the wrong value, as it was attempting to perform the wrong calculation.","### Instruction: 
 Debug this Java code and explain what was wrong. 
 ### Input: public static int add(int a, int b){
  int c = a b;
  return c;
} 
 ### Response:
 The code contained a syntax error. In the second line of the code, the operator being used was ""b"" instead of ""+"". The correct line should be ""int c = a + b;"". This error was causing the program to return the wrong value, as it was attempting to perform the wrong calculation."
15324,"Add a class ""MyClass"" to the given Java code and then create two objects for that class.
Input: public class Demo {
   public static void main(String[] args) {
   }
}","public class Demo {
   public static void main(String[] args) {
      MyClass m1 = new MyClass();
      MyClass m2 = new MyClass();
   }
}

class MyClass {
  
}","### Instruction: 
 Add a class ""MyClass"" to the given Java code and then create two objects for that class. 
 ### Input: public class Demo {
   public static void main(String[] args) {
   }
} 
 ### Response:
 public class Demo {
   public static void main(String[] args) {
      MyClass m1 = new MyClass();
      MyClass m2 = new MyClass();
   }
}

class MyClass {
  
}"
15347,"Create a class in Java for a student and define variables for name, date of birth and grade.","public class Student {
    private String name;
    private Date dob;
    private int grade;

    public Student(String name, Date dob, int grade) {
        this.name = name;
        this.dob = dob;
        this.grade = grade;
    }

    // Additional methods/Getters and Setters
}","### Instruction: 
 Create a class in Java for a student and define variables for name, date of birth and grade. 
 ### Response:
 public class Student {
    private String name;
    private Date dob;
    private int grade;

    public Student(String name, Date dob, int grade) {
        this.name = name;
        this.dob = dob;
        this.grade = grade;
    }

    // Additional methods/Getters and Setters
}"
15350,Design a Java program to find the longest increasing sub-sequence of an array.,"public static int longestIncreasingSubsequence(int[] arr) {
  int[] dp = new int[arr.length];
  int maxLength = 1;
  
  dp[0] = 1;
  
  for (int i=1; i<arr.length; i++) {
      int maxVal = 0;
      for (int j=0; j<i; j++) {
          if (arr[j] < arr[i] && dp[j] > maxVal) {
              maxVal = dp[j];
          }
      }
      dp[i] = maxVal + 1;
      if (dp[i] > maxLength) {
          maxLength = dp[i];
      }
  }
  
  return maxLength;
}","### Instruction: 
 Design a Java program to find the longest increasing sub-sequence of an array. 
 ### Response:
 public static int longestIncreasingSubsequence(int[] arr) {
  int[] dp = new int[arr.length];
  int maxLength = 1;
  
  dp[0] = 1;
  
  for (int i=1; i<arr.length; i++) {
      int maxVal = 0;
      for (int j=0; j<i; j++) {
          if (arr[j] < arr[i] && dp[j] > maxVal) {
              maxVal = dp[j];
          }
      }
      dp[i] = maxVal + 1;
      if (dp[i] > maxLength) {
          maxLength = dp[i];
      }
  }
  
  return maxLength;
}"
15371,Write a java code to accept a student name and display a greeting.,"import java.util.Scanner;

public class GreetStudent {
    public static void main(String[] args) {
        // Create a Scanner object
        Scanner scanner = new Scanner(System.in);
  
        // Accept a student name
        System.out.println(""Please enter student name:"");
        String studentName = scanner.nextLine();

        // Display a greeting
        System.out.println(""Hello, "" + studentName + ""!"");
    }
}","### Instruction: 
 Write a java code to accept a student name and display a greeting. 
 ### Response:
 import java.util.Scanner;

public class GreetStudent {
    public static void main(String[] args) {
        // Create a Scanner object
        Scanner scanner = new Scanner(System.in);
  
        // Accept a student name
        System.out.println(""Please enter student name:"");
        String studentName = scanner.nextLine();

        // Display a greeting
        System.out.println(""Hello, "" + studentName + ""!"");
    }
}"
15380,Generate a code in Java for sorting an array using Mergesort.,"public static void sortMerge (int [] array)  
{  
    //Array must have more than one element
    if (array.length > 1)  
    {
        int len = array.length;  

        //Split vector into two halves
        int mid = len/2;  
        int left [] = Arrays.copyOfRange (array, 0, mid);   
        int right [] = Arrays.copyOfRange (array, mid, len);  
       
        //Sort each half
        sortMerge (left);   
        sortMerge (right);    
         
        //Merge the sorted halves
        int i = 0;  
        int j = 0;  
        int k = 0;  
        while (i<left.length && j<right.length) 
        {  
            if (left[i]<right[j])  
            {  
                array[k]= left[i];  
                k++;  
                i++;  
            }  
            else   
            {  
                array [k] = right[j];  
                k++;  
                j++;  
            }  
        }  
        while (i<left.length)  
        {  
            array[k] = left[i];  
            k++;  
            i++;  
        }    
        while (j<right.length)  
        {  
            array[k] = right[j];  
            k++;  
            j++;  
        }  
    }  
}","### Instruction: 
 Generate a code in Java for sorting an array using Mergesort. 
 ### Response:
 public static void sortMerge (int [] array)  
{  
    //Array must have more than one element
    if (array.length > 1)  
    {
        int len = array.length;  

        //Split vector into two halves
        int mid = len/2;  
        int left [] = Arrays.copyOfRange (array, 0, mid);   
        int right [] = Arrays.copyOfRange (array, mid, len);  
       
        //Sort each half
        sortMerge (left);   
        sortMerge (right);    
         
        //Merge the sorted halves
        int i = 0;  
        int j = 0;  
        int k = 0;  
        while (i<left.length && j<right.length) 
        {  
            if (left[i]<right[j])  
            {  
                array[k]= left[i];  
                k++;  
                i++;  
            }  
            else   
            {  
                array [k] = right[j];  
                k++;  
                j++;  
            }  
        }  
        while (i<left.length)  
        {  
            array[k] = left[i];  
            k++;  
            i++;  
        }    
        while (j<right.length)  
        {  
            array[k] = right[j];  
            k++;  
            j++;  
        }  
    }  
}"
15382,Write a script in Java for printing the first n Fibonacci numbers.,"public class Fibonacci 
{ 
    static int fib(int n) 
    { 
    	int f[] = new int[n+2]; // 1 extra to handle case, n = 0 
   	 	int i; 

    	/* 0th and 1st number of the series are 0 and 1*/
    	f[0] = 0; 
    	f[1] = 1; 
  
    	for (i = 2; i <= n; i++) 
    	{ 
    		f[i] = f[i-1] + f[i-2]; 
    	} 
  
    	return f[n]; 
    } 

    public static void main (String args[]) 
    { 
    	int n = 5; 
    	System.out.println(fib(n)); 
    } 
}","### Instruction: 
 Write a script in Java for printing the first n Fibonacci numbers. 
 ### Response:
 public class Fibonacci 
{ 
    static int fib(int n) 
    { 
    	int f[] = new int[n+2]; // 1 extra to handle case, n = 0 
   	 	int i; 

    	/* 0th and 1st number of the series are 0 and 1*/
    	f[0] = 0; 
    	f[1] = 1; 
  
    	for (i = 2; i <= n; i++) 
    	{ 
    		f[i] = f[i-1] + f[i-2]; 
    	} 
  
    	return f[n]; 
    } 

    public static void main (String args[]) 
    { 
    	int n = 5; 
    	System.out.println(fib(n)); 
    } 
}"
15393,Generate a Java program to get the maximum number from a given array.,"public class MaxNumber {

    public static int getMaxNumber(int[] arr) {
        int max = arr[0];
        for (int i = 1; i < arr.length; i++) {
            if (arr[i] > max) {
                max = arr[i];
            }
        }
        return max;
    }
}","### Instruction: 
 Generate a Java program to get the maximum number from a given array. 
 ### Response:
 public class MaxNumber {

    public static int getMaxNumber(int[] arr) {
        int max = arr[0];
        for (int i = 1; i < arr.length; i++) {
            if (arr[i] > max) {
                max = arr[i];
            }
        }
        return max;
    }
}"
15398,"Given a string, write a Java program to verify if it is a valid email address.","public static boolean isValidEmail(String email){
    String emailRegex = ""^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$""; 
     Pattern pat = Pattern.compile(emailRegex); 
    if (email == null) 
        return false; 
    return pat.matcher(email).matches(); 
}","### Instruction: 
 Given a string, write a Java program to verify if it is a valid email address. 
 ### Response:
 public static boolean isValidEmail(String email){
    String emailRegex = ""^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$""; 
     Pattern pat = Pattern.compile(emailRegex); 
    if (email == null) 
        return false; 
    return pat.matcher(email).matches(); 
}"
15430,"Write a Java class to represent a student record with a student_name, grade and score fields.","public class StudentRecord {
 private String studentName;
 private int grade;
 private double score;

 public StudentRecord(String studentName, int grade, double score) {
  this.studentName = studentName;
  this.grade = grade;
  this.score = score;
 }

 public String getStudentName() {
  return studentName;
 }

 public int getGrade() {
  return grade;
 }

 public double getScore() {
  return score;
 }

 public void setStudentName(String studentName) {
  this.studentName = studentName;
 }

 public void setGrade(int grade) {
  this.grade = grade;
 }

 public void setScore(double score) {
  this.score = score;
 }
}","### Instruction: 
 Write a Java class to represent a student record with a student_name, grade and score fields. 
 ### Response:
 public class StudentRecord {
 private String studentName;
 private int grade;
 private double score;

 public StudentRecord(String studentName, int grade, double score) {
  this.studentName = studentName;
  this.grade = grade;
  this.score = score;
 }

 public String getStudentName() {
  return studentName;
 }

 public int getGrade() {
  return grade;
 }

 public double getScore() {
  return score;
 }

 public void setStudentName(String studentName) {
  this.studentName = studentName;
 }

 public void setGrade(int grade) {
  this.grade = grade;
 }

 public void setScore(double score) {
  this.score = score;
 }
}"
15439,"Develop a function in Java that, given a positive number, returns the factorial of that number.
Input: num = 5","public static int factorial(int num){
    if (num == 0){ 
        return 1;
    }
    else{
        int factorial = num * factorial(num - 1);
        return factorial;
    }
}","### Instruction: 
 Develop a function in Java that, given a positive number, returns the factorial of that number. 
 ### Input: num = 5 
 ### Response:
 public static int factorial(int num){
    if (num == 0){ 
        return 1;
    }
    else{
        int factorial = num * factorial(num - 1);
        return factorial;
    }
}"
15489,"Create a class in Java called Employee with the following fields (name, ID, department).","class Employee { 
  
    // Field 
    String name; 
    int id; 
    String department; 
  
    // Constructor 
    Employee(String name, int id, String department) 
    { 
        this.name = name; 
        this.id = id; 
        this.department = department; 
    } 
}","### Instruction: 
 Create a class in Java called Employee with the following fields (name, ID, department). 
 ### Response:
 class Employee { 
  
    // Field 
    String name; 
    int id; 
    String department; 
  
    // Constructor 
    Employee(String name, int id, String department) 
    { 
        this.name = name; 
        this.id = id; 
        this.department = department; 
    } 
}"
15511,Write a function in Java that can be used to search an array and return the index of the element.,"public static int searchArray(int[] arr, int x) {
    for(int i = 0; i < arr.length; i++) {
        if (arr[i] == x)
            return i;
    }
    return -1;
}","### Instruction: 
 Write a function in Java that can be used to search an array and return the index of the element. 
 ### Response:
 public static int searchArray(int[] arr, int x) {
    for(int i = 0; i < arr.length; i++) {
        if (arr[i] == x)
            return i;
    }
    return -1;
}"
15539,"Produce a Java program that converts miles to kilometers.
Input: Miles: 10","class MilesToKilometers {
 public static void main(String[] args) {
 
 // Convert miles to kilometers
 double miles = 10;
 double kilometers = miles * 1.60934;
 
 System.out.println(""Miles: "" + miles);
 System.out.println(""Kilometers: "" + kilometers);
 }
}","### Instruction: 
 Produce a Java program that converts miles to kilometers. 
 ### Input: Miles: 10 
 ### Response:
 class MilesToKilometers {
 public static void main(String[] args) {
 
 // Convert miles to kilometers
 double miles = 10;
 double kilometers = miles * 1.60934;
 
 System.out.println(""Miles: "" + miles);
 System.out.println(""Kilometers: "" + kilometers);
 }
}"
15567,"Code an algorithm in Java to check if a given array contains duplicate elements.
Input: arr = [3, 6, 5, 4, 6, 9]","public static boolean checkDuplicates(int[] arr) {
	Set<Integer> set = new HashSet<>();
	for(int number : arr ) {
		if(!set.add(number)) { 
			return true;
		} 
	} 
	return false;
}","### Instruction: 
 Code an algorithm in Java to check if a given array contains duplicate elements. 
 ### Input: arr = [3, 6, 5, 4, 6, 9] 
 ### Response:
 public static boolean checkDuplicates(int[] arr) {
	Set<Integer> set = new HashSet<>();
	for(int number : arr ) {
		if(!set.add(number)) { 
			return true;
		} 
	} 
	return false;
}"
15575,"debug the following code in Java to list all the prime numbers until 50
Input: class Main {
    public static void main(String[] args) {
        for(int i = 0; i < 50; i++) {
            if (isPrime(i)) {
                System.out.println(i);
            }
        }
    }
    static boolean isPrime(int n){

    }
}","class Main {
    public static void main(String[] args) {
        for(int i = 0; i < 50; i++) {
            if (isPrime(i)) {
                System.out.println(i);
            }
        }
    } 
    static boolean isPrime(int n){
        if (n <= 1) { 
            return false; 
        } 
        for (int i = 2; i < n; i++) { 
            if (n % i == 0) { 
                return false; 
            } 
        } 
    return true; 
    } 
}","### Instruction: 
 debug the following code in Java to list all the prime numbers until 50 
 ### Input: class Main {
    public static void main(String[] args) {
        for(int i = 0; i < 50; i++) {
            if (isPrime(i)) {
                System.out.println(i);
            }
        }
    }
    static boolean isPrime(int n){

    }
} 
 ### Response:
 class Main {
    public static void main(String[] args) {
        for(int i = 0; i < 50; i++) {
            if (isPrime(i)) {
                System.out.println(i);
            }
        }
    } 
    static boolean isPrime(int n){
        if (n <= 1) { 
            return false; 
        } 
        for (int i = 2; i < n; i++) { 
            if (n % i == 0) { 
                return false; 
            } 
        } 
    return true; 
    } 
}"
15577,Write a Java program to ask the user to enter a number and then find and print the corresponding Fibonacci number.,"public class Fibonacci{
	public static int findFibonacci(int n){
		if(n == 0){
			return 0;
		}
		if(n == 1){
			return 1;
		}
		return findFibonacci(n-1) + findFibonacci(n-2);
	}
	
	public static void main(String args[]){
		Scanner in = new Scanner(System.in);
		System.out.println(""Enter a number:"");
		int n = in.nextInt();
		System.out.println(""The Fibonacci number is "" +
							findFibonacci(n));
	}
}","### Instruction: 
 Write a Java program to ask the user to enter a number and then find and print the corresponding Fibonacci number. 
 ### Response:
 public class Fibonacci{
	public static int findFibonacci(int n){
		if(n == 0){
			return 0;
		}
		if(n == 1){
			return 1;
		}
		return findFibonacci(n-1) + findFibonacci(n-2);
	}
	
	public static void main(String args[]){
		Scanner in = new Scanner(System.in);
		System.out.println(""Enter a number:"");
		int n = in.nextInt();
		System.out.println(""The Fibonacci number is "" +
							findFibonacci(n));
	}
}"
15605,Create a new Java program that prints out all the prime numbers between 2 and 1000.,"public class PrimeNumbers {
 public static void main(String[] args) {
  System.out.println(""Prime numbers between 2 and 1000 are:"");
  int count;
 
  for(int i=2; i<=1000; i++){
      count=0;
      for(int j=2; j<i; j++){
          if(i%j==0){
              count++;
              break;
          }
      }
      if(count==0)
          System.out.print(i + "" "");
  }
 }
}","### Instruction: 
 Create a new Java program that prints out all the prime numbers between 2 and 1000. 
 ### Response:
 public class PrimeNumbers {
 public static void main(String[] args) {
  System.out.println(""Prime numbers between 2 and 1000 are:"");
  int count;
 
  for(int i=2; i<=1000; i++){
      count=0;
      for(int j=2; j<i; j++){
          if(i%j==0){
              count++;
              break;
          }
      }
      if(count==0)
          System.out.print(i + "" "");
  }
 }
}"
15697,"Create a program in Java to create a simple calculator that has the ability to add, subtract, multiply, and divide numbers.","public class Calculator { 
  
   // Function to add two numbers 
   public int add(int num1, int num2) { 
        return num1 + num2; 
    } 
  
    // Function to subtract two numbers 
    public int subtract(int num1, int num2) { 
        return num1 - num2; 
    } 
  
    // Function to multiply two numbers 
    public int multiply(int num1, int num2) { 
        return num1 * num2; 
    } 
  
    // Function to divide two numbers 
    public int divide(int num1, int num2) { 
        return num1 / num2; 
    } 
}","### Instruction: 
 Create a program in Java to create a simple calculator that has the ability to add, subtract, multiply, and divide numbers. 
 ### Response:
 public class Calculator { 
  
   // Function to add two numbers 
   public int add(int num1, int num2) { 
        return num1 + num2; 
    } 
  
    // Function to subtract two numbers 
    public int subtract(int num1, int num2) { 
        return num1 - num2; 
    } 
  
    // Function to multiply two numbers 
    public int multiply(int num1, int num2) { 
        return num1 * num2; 
    } 
  
    // Function to divide two numbers 
    public int divide(int num1, int num2) { 
        return num1 / num2; 
    } 
}"
15735,"Develop a Java program that counts the frequency of a given word in a sentence.
Input: Input: sentence = ""I am learning to code"" , word = ""code""","public class CountFrequency {
   static int countFrequency(String sentence, String word) 
    {
        int frequency = 0;
        String[] words = sentence.split("" "");
        for (String w : words) 
        {
            if (w.equals(word)) 
                frequency++; 
        }
        return frequency;
    }
    public static void main(String[] args) {
        String sentence = ""I am learning to code"";
        String word = ""code"";
        System.out.println(countFrequency(sentence,word));
    }
}","### Instruction: 
 Develop a Java program that counts the frequency of a given word in a sentence. 
 ### Input: Input: sentence = ""I am learning to code"" , word = ""code"" 
 ### Response:
 public class CountFrequency {
   static int countFrequency(String sentence, String word) 
    {
        int frequency = 0;
        String[] words = sentence.split("" "");
        for (String w : words) 
        {
            if (w.equals(word)) 
                frequency++; 
        }
        return frequency;
    }
    public static void main(String[] args) {
        String sentence = ""I am learning to code"";
        String word = ""code"";
        System.out.println(countFrequency(sentence,word));
    }
}"
15791,"Write a Java statement to declare a string variable, “str”, and initialize it with a value “Good morning!”.","String str = ""Good morning!"";","### Instruction: 
 Write a Java statement to declare a string variable, “str”, and initialize it with a value “Good morning!”. 
 ### Response:
 String str = ""Good morning!"";"
15801,Implement a Java class for a LinkedList.,"public class LinkedList {
    private Node head; // head of the list 
    // linked list Node. 
    // This inner class is made static 
    // so that main() can access it 
    static class Node { 
        int data; 
        Node next; 
        // Constructor 
        Node(int d) 
        { 
            data = d; 
            next = null; 
        } 
    } 
  
    public void append(int new_data) 
    { 
        // allocate new Node 
        Node new_node = new Node(new_data); 
        // if the Linked List is empty, 
        // then make the new Node as head 
        if (head == null) { 
            head = new Node(new_data); 
            return; 
        } 
  
        // This new Node is going to be the last node, so make next of 
        // it as null 
        new_node.next = null; 
        // Else traverse till the last Node 
        Node last = head; 
        while (last.next != null) 
            last = last.next; 
        // Change the next of last Node 
        last.next = new_node; 
        return; 
    }
}","### Instruction: 
 Implement a Java class for a LinkedList. 
 ### Response:
 public class LinkedList {
    private Node head; // head of the list 
    // linked list Node. 
    // This inner class is made static 
    // so that main() can access it 
    static class Node { 
        int data; 
        Node next; 
        // Constructor 
        Node(int d) 
        { 
            data = d; 
            next = null; 
        } 
    } 
  
    public void append(int new_data) 
    { 
        // allocate new Node 
        Node new_node = new Node(new_data); 
        // if the Linked List is empty, 
        // then make the new Node as head 
        if (head == null) { 
            head = new Node(new_data); 
            return; 
        } 
  
        // This new Node is going to be the last node, so make next of 
        // it as null 
        new_node.next = null; 
        // Else traverse till the last Node 
        Node last = head; 
        while (last.next != null) 
            last = last.next; 
        // Change the next of last Node 
        last.next = new_node; 
        return; 
    }
}"
15803,Generate a Java program to read two numbers from the user and print their sum.,"import java.util.Scanner;
  
public class SumOfTwoNumbers 
{
    public static void main(String[] args) 
    {
        Scanner scanner = new Scanner(System.in);
        int num1, num2, sum;
        System.out.print(""Enter first number:"");
        num1 = scanner.nextInt();
        
        System.out.print(""Enter second number:"");
        num2 = scanner.nextInt();
        
        scanner.close();
        sum = num1 + num2;
        System.out.println(""Sum of both numbers :"" + sum);
    }
}","### Instruction: 
 Generate a Java program to read two numbers from the user and print their sum. 
 ### Response:
 import java.util.Scanner;
  
public class SumOfTwoNumbers 
{
    public static void main(String[] args) 
    {
        Scanner scanner = new Scanner(System.in);
        int num1, num2, sum;
        System.out.print(""Enter first number:"");
        num1 = scanner.nextInt();
        
        System.out.print(""Enter second number:"");
        num2 = scanner.nextInt();
        
        scanner.close();
        sum = num1 + num2;
        System.out.println(""Sum of both numbers :"" + sum);
    }
}"
15806,Generate a program in Java that reads two strings and checks if the strings are equal.,"public class StringEquality { 
	public static void main(String[] args) { 
		// two strings 
		String s1, s2; 

		s1 = ""Hello""; 
		s2 = ""Hello""; 

		if (s1.equals(s2)) 
			System.out.println(""Strings are equal.""); 
		else
			System.out.println(""Strings are not equal.""); 
	} 
}","### Instruction: 
 Generate a program in Java that reads two strings and checks if the strings are equal. 
 ### Response:
 public class StringEquality { 
	public static void main(String[] args) { 
		// two strings 
		String s1, s2; 

		s1 = ""Hello""; 
		s2 = ""Hello""; 

		if (s1.equals(s2)) 
			System.out.println(""Strings are equal.""); 
		else
			System.out.println(""Strings are not equal.""); 
	} 
}"
15809,Create an algorithm in Java for maximum subarray problem.,"public static int maxSubArraySum(int a[]) 
{ 
    int size = a.length; 
    int maxSoFar = Integer.MIN_VALUE, maxEndingHere = 0; 
  
    for (int i = 0; i < size; i++) 
    { 
        maxEndingHere = maxEndingHere + a[i]; 
        if (maxSoFar < maxEndingHere) 
            maxSoFar = maxEndingHere; 
        if (maxEndingHere < 0) 
            maxEndingHere = 0; 
    } 
    return maxSoFar; 
}","### Instruction: 
 Create an algorithm in Java for maximum subarray problem. 
 ### Response:
 public static int maxSubArraySum(int a[]) 
{ 
    int size = a.length; 
    int maxSoFar = Integer.MIN_VALUE, maxEndingHere = 0; 
  
    for (int i = 0; i < size; i++) 
    { 
        maxEndingHere = maxEndingHere + a[i]; 
        if (maxSoFar < maxEndingHere) 
            maxSoFar = maxEndingHere; 
        if (maxEndingHere < 0) 
            maxEndingHere = 0; 
    } 
    return maxSoFar; 
}"
15839,Write a Java code snippet to print out the current system time.,"long currentTimeMillis = System.currentTimeMillis();
SimpleDateFormat sdf = new SimpleDateFormat(""MMM dd,yyyy HH:mm:ss"");    
Date resultdate = new Date(currentTimeMillis);
System.out.println(sdf.format(resultdate));  //Result: Dec 01,2020 13:55:42","### Instruction: 
 Write a Java code snippet to print out the current system time. 
 ### Response:
 long currentTimeMillis = System.currentTimeMillis();
SimpleDateFormat sdf = new SimpleDateFormat(""MMM dd,yyyy HH:mm:ss"");    
Date resultdate = new Date(currentTimeMillis);
System.out.println(sdf.format(resultdate));  //Result: Dec 01,2020 13:55:42"
15870,Create a Java program that takes input from a user and prints it out.,"import java.util.Scanner;

public class Echo {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        String line = input.nextLine();
        
        System.out.println(line);
    }
}","### Instruction: 
 Create a Java program that takes input from a user and prints it out. 
 ### Response:
 import java.util.Scanner;

public class Echo {
    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        String line = input.nextLine();
        
        System.out.println(line);
    }
}"
15874,"Place the missing code in the following Java program to print ""Hello World!"".
Input: public class HelloWorld {

public static void main(String[] args) {
~

}

}","public class HelloWorld {

public static void main(String[] args) {
 System.out.println(""Hello World!"");

}

}","### Instruction: 
 Place the missing code in the following Java program to print ""Hello World!"". 
 ### Input: public class HelloWorld {

public static void main(String[] args) {
~

}

} 
 ### Response:
 public class HelloWorld {

public static void main(String[] args) {
 System.out.println(""Hello World!"");

}

}"
15888,"Use the Java StringBuilder class to append three strings to a single string.
Input: String1: ""Hello,"" 
String2: "" world!"" 
String3: "" Have a nice day!""","StringBuilder sb = new StringBuilder();
sb.append(""Hello,"");
sb.append("" world!"");
sb.append("" Have a nice day!"");
String finalString = sb.toString();","### Instruction: 
 Use the Java StringBuilder class to append three strings to a single string. 
 ### Input: String1: ""Hello,"" 
String2: "" world!"" 
String3: "" Have a nice day!"" 
 ### Response:
 StringBuilder sb = new StringBuilder();
sb.append(""Hello,"");
sb.append("" world!"");
sb.append("" Have a nice day!"");
String finalString = sb.toString();"
15903,"Create a Java program that takes in a String and returns a String with the letters of the original String reversed.
Input: string = ""Hello""","public static String reverseString(String s) 
{
    StringBuilder sb = new StringBuilder();
    
    for (int i = s.length() - 1; i >= 0; i--)
    {
        sb.append(s.charAt(i));
    }
    
    return sb.toString();
}","### Instruction: 
 Create a Java program that takes in a String and returns a String with the letters of the original String reversed. 
 ### Input: string = ""Hello"" 
 ### Response:
 public static String reverseString(String s) 
{
    StringBuilder sb = new StringBuilder();
    
    for (int i = s.length() - 1; i >= 0; i--)
    {
        sb.append(s.charAt(i));
    }
    
    return sb.toString();
}"
15990,Identify the differences between Java and JavaScript languages.,Java is a compiled language while JavaScript is interpreted. Java is a class-based language while JavaScript is a prototype-based language. Java is statically typed while JavaScript is dynamically typed. Java supports method overloading while JavaScript does not.,"### Instruction: 
 Identify the differences between Java and JavaScript languages. 
 ### Response:
 Java is a compiled language while JavaScript is interpreted. Java is a class-based language while JavaScript is a prototype-based language. Java is statically typed while JavaScript is dynamically typed. Java supports method overloading while JavaScript does not."
16028,"Write a function in Java to calculate the total number of possible combinations of a given list of items.
Input: [‘cat’, ‘dog’, ‘horse’]","public static int calculateCombinations(List<String> items){
            int totalCombinations = 0;

            for(int i = 0; i < Math.pow(2, items.size()); i++){
                int count = 0;
                String combination = """";
                for(int j = 0; j < items.size(); j++){
                    if( (i & (1 << j)) > 0){
                        count++;
                        combination += items.get(j) + "" "";
                    }
                }
                if(count == items.size()){
                    totalCombinations++;
                    System.out.println(combination);
                }
            }
            return totalCombinations;
        }","### Instruction: 
 Write a function in Java to calculate the total number of possible combinations of a given list of items. 
 ### Input: [‘cat’, ‘dog’, ‘horse’] 
 ### Response:
 public static int calculateCombinations(List<String> items){
            int totalCombinations = 0;

            for(int i = 0; i < Math.pow(2, items.size()); i++){
                int count = 0;
                String combination = """";
                for(int j = 0; j < items.size(); j++){
                    if( (i & (1 << j)) > 0){
                        count++;
                        combination += items.get(j) + "" "";
                    }
                }
                if(count == items.size()){
                    totalCombinations++;
                    System.out.println(combination);
                }
            }
            return totalCombinations;
        }"
16075,"Design a Java code to create a method that counts the number of elements in a given array.
Input: int[] array = {2, 4, 6, 8}","public static int countArrayElements(int[] input) {
    int count = 0;
    for (int element : input) {
        count++;
    }
    return count;
}

int arraySize = countArrayElements(array); // prints 4","### Instruction: 
 Design a Java code to create a method that counts the number of elements in a given array. 
 ### Input: int[] array = {2, 4, 6, 8} 
 ### Response:
 public static int countArrayElements(int[] input) {
    int count = 0;
    for (int element : input) {
        count++;
    }
    return count;
}

int arraySize = countArrayElements(array); // prints 4"
16083,"Given an array of numbers, code a Java code to find out the highest number.
Input: int arr[] = {20, 35, -15, 7, 55, 1, -22}","public static int findHighestNumber (int[] numbers) {
 
    int highestNumber = Integer.MIN_VALUE;
 
    for (int currentNumber : numbers) {
        highestNumber = Math.max(currentNumber, highestNumber);
    }
 
    return highestNumber;
}

int highestNumber = findHighestNumber(arr); // prints 55","### Instruction: 
 Given an array of numbers, code a Java code to find out the highest number. 
 ### Input: int arr[] = {20, 35, -15, 7, 55, 1, -22} 
 ### Response:
 public static int findHighestNumber (int[] numbers) {
 
    int highestNumber = Integer.MIN_VALUE;
 
    for (int currentNumber : numbers) {
        highestNumber = Math.max(currentNumber, highestNumber);
    }
 
    return highestNumber;
}

int highestNumber = findHighestNumber(arr); // prints 55"
16090,Identify the ‘time complexity’ of an algorithm written in Java that calculates average of all elements in a list.,The time complexity of the algorithm is O(n) since it needs to loop through all the elements in the list in order to calculate the average.,"### Instruction: 
 Identify the ‘time complexity’ of an algorithm written in Java that calculates average of all elements in a list. 
 ### Response:
 The time complexity of the algorithm is O(n) since it needs to loop through all the elements in the list in order to calculate the average."
16120,Write a function in Java to delete duplicate elements.,"public static List<Integer> removeDuplicates(int[] arr) {
    List<Integer> uniqueList = new ArrayList<>();
    for (int i : arr) {
        if (!uniqueList.contains(i)) {
            uniqueList.add(i);
        }
    }
    return uniqueList;
}","### Instruction: 
 Write a function in Java to delete duplicate elements. 
 ### Response:
 public static List<Integer> removeDuplicates(int[] arr) {
    List<Integer> uniqueList = new ArrayList<>();
    for (int i : arr) {
        if (!uniqueList.contains(i)) {
            uniqueList.add(i);
        }
    }
    return uniqueList;
}"
16144,"Create a Java program to output the Fibonacci series upto the given number.
Input: Number: 10","public class Fibonacci {
    public static void main(String[] args) {
        int num = 10;
        int first = 0; 
        int second = 1;
        
        System.out.println(""Fibonacci Series of "" + num + "" numbers:"");
        for (int i = 0; i < num; i++) {
            System.out.print(first + "" "");
            int sum = first + second;
            first = second;
            second = sum;
        }
    }
}","### Instruction: 
 Create a Java program to output the Fibonacci series upto the given number. 
 ### Input: Number: 10 
 ### Response:
 public class Fibonacci {
    public static void main(String[] args) {
        int num = 10;
        int first = 0; 
        int second = 1;
        
        System.out.println(""Fibonacci Series of "" + num + "" numbers:"");
        for (int i = 0; i < num; i++) {
            System.out.print(first + "" "");
            int sum = first + second;
            first = second;
            second = sum;
        }
    }
}"
16147,"Write a Java program that prints a rating out of 10 based on user input.
Input: Input value: 7","public class Rating {
 public static void main (String[] args) {
  int inputValue = 7;
  int rating = 0;

  if (inputValue >= 8) {
   rating = 10;
  } else if (inputValue >= 5) {
   rating = 7;
  } else {
   rating = 4;
  }

  System.out.println(""Rating: "" + rating);
 }
}","### Instruction: 
 Write a Java program that prints a rating out of 10 based on user input. 
 ### Input: Input value: 7 
 ### Response:
 public class Rating {
 public static void main (String[] args) {
  int inputValue = 7;
  int rating = 0;

  if (inputValue >= 8) {
   rating = 10;
  } else if (inputValue >= 5) {
   rating = 7;
  } else {
   rating = 4;
  }

  System.out.println(""Rating: "" + rating);
 }
}"
16153,Create a Java method that takes two integer arguments and returns their multiplication.,"public static int multiply(int a, int b) {
 return a * b;
}","### Instruction: 
 Create a Java method that takes two integer arguments and returns their multiplication. 
 ### Response:
 public static int multiply(int a, int b) {
 return a * b;
}"
16256,Write a Java program to implement Matrix multiplication,"public class MatrixMultiplication {    
    public static void main(String []args) { 
        int[][] matrix1 = { {1, 1}, 
                            {2, 2} }; 
  
        int[][] matrix2 = { {1, 1}, 
                            {2, 2} 
                        }; 
  
        int rows1 = matrix1.length; 
        int cols1 = matrix1[0].length; 
        int rows2 = matrix2.length; 
        int cols2 = matrix2[0].length; 
  
        int[][] result = new int[rows1][cols2]; 
  
        // multiplying matrix1 and matrix2 
        for(int i = 0; i < rows1; i++) { 
            for(int j = 0; j < cols2; j++) { 
                for(int k = 0; k < rows2; k++) { 
                    result[i][j] += matrix1[i][k]  
                                * matrix2[k][j]; 
                } 
            } 
        } 
  
        // printing the result matrix 
        for(int[] row : result) { 
            for (int element : row){ 
                System.out.print(element + ""\t"" ); 
            } 
            System.out.println(); 
        } 
    } 
}","### Instruction: 
 Write a Java program to implement Matrix multiplication 
 ### Response:
 public class MatrixMultiplication {    
    public static void main(String []args) { 
        int[][] matrix1 = { {1, 1}, 
                            {2, 2} }; 
  
        int[][] matrix2 = { {1, 1}, 
                            {2, 2} 
                        }; 
  
        int rows1 = matrix1.length; 
        int cols1 = matrix1[0].length; 
        int rows2 = matrix2.length; 
        int cols2 = matrix2[0].length; 
  
        int[][] result = new int[rows1][cols2]; 
  
        // multiplying matrix1 and matrix2 
        for(int i = 0; i < rows1; i++) { 
            for(int j = 0; j < cols2; j++) { 
                for(int k = 0; k < rows2; k++) { 
                    result[i][j] += matrix1[i][k]  
                                * matrix2[k][j]; 
                } 
            } 
        } 
  
        // printing the result matrix 
        for(int[] row : result) { 
            for (int element : row){ 
                System.out.print(element + ""\t"" ); 
            } 
            System.out.println(); 
        } 
    } 
}"
16259,"Write a java program to count the number of characters in a sentence without using a loop.
Input: sentence = ""This is a simple sentence""","//using 'split()' method
String[] words = sentence.split(""\\s+"");  //split with regular expression
int count = 0;
for(String word: words){
    count += word.length();
}
System.out.println(""The number of characters in the sentence is : ""+count);

//using 'replaceAll()' method
int count = sentence.replaceAll("" "", """").length();
System.out.println(""The number of characters in the sentence is : ""+count);","### Instruction: 
 Write a java program to count the number of characters in a sentence without using a loop. 
 ### Input: sentence = ""This is a simple sentence"" 
 ### Response:
 //using 'split()' method
String[] words = sentence.split(""\\s+"");  //split with regular expression
int count = 0;
for(String word: words){
    count += word.length();
}
System.out.println(""The number of characters in the sentence is : ""+count);

//using 'replaceAll()' method
int count = sentence.replaceAll("" "", """").length();
System.out.println(""The number of characters in the sentence is : ""+count);"
16289,"Fix the following Java code by replacing the letter ""u"" with ""v"".
Input: String s1 = ""Update"";","String s1 = ""Update"";
String s2 = s1.replace('u','v');","### Instruction: 
 Fix the following Java code by replacing the letter ""u"" with ""v"". 
 ### Input: String s1 = ""Update""; 
 ### Response:
 String s1 = ""Update"";
String s2 = s1.replace('u','v');"
16350,Create a class in Java called Student with two fields called id and name.,"public class Student {
    int id;
    String name;
    
    public Student(int id, String name) {
        this.id = id;
        this.name = name;
    }
    
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }
    
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
}","### Instruction: 
 Create a class in Java called Student with two fields called id and name. 
 ### Response:
 public class Student {
    int id;
    String name;
    
    public Student(int id, String name) {
        this.id = id;
        this.name = name;
    }
    
    public int getId() {
        return this.id;
    }
    
    public void setId(int id) {
        this.id = id;
    }
    
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }
}"
16368,Create a short Java program designed to accept two numbers and find their greatest common divisor (GCD).,"public class GCD {

    public static int getGCD(int x, int y) { 
        // Base case 
        if (x == 0) 
            return y; 
        if (y == 0) 
            return x; 
  
        // If x is greater 
        if (x > y) 
            return getGCD(x%y, y); 
  
        return getGCD(x, y%x); 
    } 
  
    public static void main(String[] args) { 
        int x = 40; 
        int y = 20; 
        System.out.println(""GCD of "" + x +"" and "" + y + "" is "" + getGCD(x, y)); 
    } 
}","### Instruction: 
 Create a short Java program designed to accept two numbers and find their greatest common divisor (GCD). 
 ### Response:
 public class GCD {

    public static int getGCD(int x, int y) { 
        // Base case 
        if (x == 0) 
            return y; 
        if (y == 0) 
            return x; 
  
        // If x is greater 
        if (x > y) 
            return getGCD(x%y, y); 
  
        return getGCD(x, y%x); 
    } 
  
    public static void main(String[] args) { 
        int x = 40; 
        int y = 20; 
        System.out.println(""GCD of "" + x +"" and "" + y + "" is "" + getGCD(x, y)); 
    } 
}"
16372,Construct a class in Java that creates methods for finding the area and circumference of a circle.,"public class Circle {
  double radius;
 
  public Circle(double radius) {
    this.radius = radius;  
  }
 
  public double getArea(){
    return Math.PI * Math.pow(radius, 2);
  }
 
  public double getCircumference(){
    return 2 * Math.PI * radius;
  }
}","### Instruction: 
 Construct a class in Java that creates methods for finding the area and circumference of a circle. 
 ### Response:
 public class Circle {
  double radius;
 
  public Circle(double radius) {
    this.radius = radius;  
  }
 
  public double getArea(){
    return Math.PI * Math.pow(radius, 2);
  }
 
  public double getCircumference(){
    return 2 * Math.PI * radius;
  }
}"
16378,"Write a Java method that checks if a nested integer contains an even number.
Input: [1, 2, [3, 4, [7, 8]]]","public static boolean containsEven(List<Object> list) {  
    for (Object obj : list) {          
        if(obj instanceof Integer){
            if((Integer)obj % 2 == 0){
                return true;                   
            }
        } 
        else if(obj instanceof List<?>){
            if (containsEven((List<?>)obj)){
                return true;
            }
        }
    } 
    return false;
}","### Instruction: 
 Write a Java method that checks if a nested integer contains an even number. 
 ### Input: [1, 2, [3, 4, [7, 8]]] 
 ### Response:
 public static boolean containsEven(List<Object> list) {  
    for (Object obj : list) {          
        if(obj instanceof Integer){
            if((Integer)obj % 2 == 0){
                return true;                   
            }
        } 
        else if(obj instanceof List<?>){
            if (containsEven((List<?>)obj)){
                return true;
            }
        }
    } 
    return false;
}"
16379,"Design a class in Java to represent a stack data structure, and implement operations such as push, pop and size.","public class Stack {
    private int[] arr;
    private int top;
    private int capacity;
  
    public Stack(int capacity) {
        this.arr = new int[capacity];
        this.top = -1;
        this.capacity = capacity;
    }
  
    public boolean isFull() {
        return top == capacity - 1;
    }
  
    public boolean isEmpty() {
        return top == -1;
    }
  
    public int size() {
        return top + 1;
    }
  
    public void push(int x) {
        if(isFull()) {
            return;
        }
        top++;
        arr[top] = x;
    }
  
    public int pop() {
        if(isEmpty()) {
            return -1;
        }
        int popped = arr[top];
        top--;
        return popped;
    }
}","### Instruction: 
 Design a class in Java to represent a stack data structure, and implement operations such as push, pop and size. 
 ### Response:
 public class Stack {
    private int[] arr;
    private int top;
    private int capacity;
  
    public Stack(int capacity) {
        this.arr = new int[capacity];
        this.top = -1;
        this.capacity = capacity;
    }
  
    public boolean isFull() {
        return top == capacity - 1;
    }
  
    public boolean isEmpty() {
        return top == -1;
    }
  
    public int size() {
        return top + 1;
    }
  
    public void push(int x) {
        if(isFull()) {
            return;
        }
        top++;
        arr[top] = x;
    }
  
    public int pop() {
        if(isEmpty()) {
            return -1;
        }
        int popped = arr[top];
        top--;
        return popped;
    }
}"
16435,Create classes in Java to represent a school and its students.,"public class School {
    private String name;
    private List<Student> students;

    //constructor, getters, setters, and other methods
    
    public void addStudent(Student student) {
        students.add(student);
    }
}

public class Student {
    private String name;
    private int age;

    //constructor, getters, setters, and other methods
    
    public void setAge(int age) {
        this.age = age;
    }
}","### Instruction: 
 Create classes in Java to represent a school and its students. 
 ### Response:
 public class School {
    private String name;
    private List<Student> students;

    //constructor, getters, setters, and other methods
    
    public void addStudent(Student student) {
        students.add(student);
    }
}

public class Student {
    private String name;
    private int age;

    //constructor, getters, setters, and other methods
    
    public void setAge(int age) {
        this.age = age;
    }
}"
16444,"Code a function in Java to search an array for a specific element.
Input: array x = [1, 4, 6, 8, 5]
element = 5","public static int linearSearch(int[] x, int element) 
    {
        for (int i = 0; i < x.length; i++) { 
            if (x[i] == element) 
                return i; 
        } 
        return -1; 
    }","### Instruction: 
 Code a function in Java to search an array for a specific element. 
 ### Input: array x = [1, 4, 6, 8, 5]
element = 5 
 ### Response:
 public static int linearSearch(int[] x, int element) 
    {
        for (int i = 0; i < x.length; i++) { 
            if (x[i] == element) 
                return i; 
        } 
        return -1; 
    }"
16448,Create an algorithm in Java to calculate the average of five numbers.,"public static double avgOfFiveNums(int a, int b, int c, int d, int e) {
 
  double avg = (a + b + c + d + e) / 5.0;
 
  return avg;
}","### Instruction: 
 Create an algorithm in Java to calculate the average of five numbers. 
 ### Response:
 public static double avgOfFiveNums(int a, int b, int c, int d, int e) {
 
  double avg = (a + b + c + d + e) / 5.0;
 
  return avg;
}"
16472,Create a Java method that takes three integers as parameters and computes their average.,"public static double threeIntAvg(int a, int b, int c) {
    return (a + b + c) / 3.0;
}","### Instruction: 
 Create a Java method that takes three integers as parameters and computes their average. 
 ### Response:
 public static double threeIntAvg(int a, int b, int c) {
    return (a + b + c) / 3.0;
}"
16516,"Develop a Java program that takes two strings as input and outputs the common characters in both strings.
Input: String A: abcde
String B: defgh","public class CommonChars {
    public static void main(String[] args) {
        String str1 = ""abcde"";
        String str2 = ""defgh"";
       
        //Loop through both strings
        for (int i = 0; i < str1.length(); i++) {
            char ch1 = str1.charAt(i);
            for (int j = 0; j < str2.length(); j++) {
                char ch2 = str2.charAt(j);
                
                // Compare characters
                if (ch1 == ch2) {
                    System.out.println(ch1);
                }
            }
        }
   }
}","### Instruction: 
 Develop a Java program that takes two strings as input and outputs the common characters in both strings. 
 ### Input: String A: abcde
String B: defgh 
 ### Response:
 public class CommonChars {
    public static void main(String[] args) {
        String str1 = ""abcde"";
        String str2 = ""defgh"";
       
        //Loop through both strings
        for (int i = 0; i < str1.length(); i++) {
            char ch1 = str1.charAt(i);
            for (int j = 0; j < str2.length(); j++) {
                char ch2 = str2.charAt(j);
                
                // Compare characters
                if (ch1 == ch2) {
                    System.out.println(ch1);
                }
            }
        }
   }
}"
16519,Generate a class in java to convert Fahrenheit to Celsius,"public class FahrenheitToCelsius { 
  
    // F to C conversion formula 
    public static double fahrenheitToCelsius(double fahrenheit) { 
        return ((fahrenheit - 32) * 5) / 9; 
    } 
  
    public static void main(String[] args) { 
        double fahrenheit = 100; 
        double celsius = fahrenheitToCelsius(fahrenheit); 
        System.out.printf(""%.2f degree Fahrenheit is equal to %.2f degree Celsius"",fahrenheit,celsius); 
    } 
}","### Instruction: 
 Generate a class in java to convert Fahrenheit to Celsius 
 ### Response:
 public class FahrenheitToCelsius { 
  
    // F to C conversion formula 
    public static double fahrenheitToCelsius(double fahrenheit) { 
        return ((fahrenheit - 32) * 5) / 9; 
    } 
  
    public static void main(String[] args) { 
        double fahrenheit = 100; 
        double celsius = fahrenheitToCelsius(fahrenheit); 
        System.out.printf(""%.2f degree Fahrenheit is equal to %.2f degree Celsius"",fahrenheit,celsius); 
    } 
}"
16522,What are the differences between a Java applet and a Java application?,"The main difference between a Java applet and a Java application is that an applet is a client-side application that is downloaded from server and is run in a web browser, while a Java application is a stand-alone program which runs directly on the included JVM. Applet code is able to access resources from the server, like databases and other back-end services, while a Java application runs within its own sandbox. Additionally, a Java applet requires a web browser plug-in in order to run, while a Java application does not.   Another important difference between a Java applet and a Java application is that the code for a Java applet is visible to the end user, while the code for a Java application is hidden from the user. Thus, Java applets cannot be used to secure confidential information or data.  Finally, Java applets are limited by the client system due to the fact that they are displayed and executed in the web browser, while Java applications are platform-independent and can be executed on any operating system.","### Instruction: 
 What are the differences between a Java applet and a Java application? 
 ### Response:
 The main difference between a Java applet and a Java application is that an applet is a client-side application that is downloaded from server and is run in a web browser, while a Java application is a stand-alone program which runs directly on the included JVM. Applet code is able to access resources from the server, like databases and other back-end services, while a Java application runs within its own sandbox. Additionally, a Java applet requires a web browser plug-in in order to run, while a Java application does not.   Another important difference between a Java applet and a Java application is that the code for a Java applet is visible to the end user, while the code for a Java application is hidden from the user. Thus, Java applets cannot be used to secure confidential information or data.  Finally, Java applets are limited by the client system due to the fact that they are displayed and executed in the web browser, while Java applications are platform-independent and can be executed on any operating system."
16523,Write a Java program that prints all integers between 30 & 50 (inclusive).,"public class PrintIntegers 
{
    public static void main(String[] args)
    {
        for(int i=30; i<=50; i++)
        {
            System.out.println(i);    
        }
    }
}","### Instruction: 
 Write a Java program that prints all integers between 30 & 50 (inclusive). 
 ### Response:
 public class PrintIntegers 
{
    public static void main(String[] args)
    {
        for(int i=30; i<=50; i++)
        {
            System.out.println(i);    
        }
    }
}"
16528,"Write a Java method to calculate the total marks of a student given their marks of 5 subjects.
Input: int marks_sub1 = 80;
int marks_sub2 = 90;
int marks_sub3 = 85;
int marks_sub4 = 92;
int marks_sub5 = 87;","public static int calculateTotalMarks(int marks_sub1, int marks_sub2, int marks_sub3, int marks_sub4, int marks_sub5) {
    return marks_sub1 + marks_sub2 + marks_sub3 + marks_sub4 + marks_sub5;
}","### Instruction: 
 Write a Java method to calculate the total marks of a student given their marks of 5 subjects. 
 ### Input: int marks_sub1 = 80;
int marks_sub2 = 90;
int marks_sub3 = 85;
int marks_sub4 = 92;
int marks_sub5 = 87; 
 ### Response:
 public static int calculateTotalMarks(int marks_sub1, int marks_sub2, int marks_sub3, int marks_sub4, int marks_sub5) {
    return marks_sub1 + marks_sub2 + marks_sub3 + marks_sub4 + marks_sub5;
}"
16587,Create a clould-based web application in Java to store financial details.,"import java.io.*; 
import java.util.*; 
import com.amazonaws.services.lambda.*; 
import com.google.gson.Gson;
import com.amazonaws.services.lambda.runtime.Context;
import com.amazonaws.services.lambda.runtime.RequestHandler;
import org.json.simple.*; 
import org.json.simple.JSONObject; 

public class DataStorage implements RequestHandler<JSONObject, JSONObject> { 
  public JSONObject handleRequest(JSONObject input, Context context) { 
    // Read details from the request 
    String userID = (String)input.get(""userID""); 
    String transactionID = (String)input.get(""transactionID""); 
    float amount = ((Number)input.get(""amount"")).floatValue(); 
    String description = (String)input.get(""description""); 
 
    // Store data in database
    // Code for storing data

    return response; 
  } 
}","### Instruction: 
 Create a clould-based web application in Java to store financial details. 
 ### Response:
 import java.io.*; 
import java.util.*; 
import com.amazonaws.services.lambda.*; 
import com.google.gson.Gson;
import com.amazonaws.services.lambda.runtime.Context;
import com.amazonaws.services.lambda.runtime.RequestHandler;
import org.json.simple.*; 
import org.json.simple.JSONObject; 

public class DataStorage implements RequestHandler<JSONObject, JSONObject> { 
  public JSONObject handleRequest(JSONObject input, Context context) { 
    // Read details from the request 
    String userID = (String)input.get(""userID""); 
    String transactionID = (String)input.get(""transactionID""); 
    float amount = ((Number)input.get(""amount"")).floatValue(); 
    String description = (String)input.get(""description""); 
 
    // Store data in database
    // Code for storing data

    return response; 
  } 
}"
16636,Construct a for loop in Java to increment a counter from 0 to 10.,"for (int i = 0; i < 10; i++) { 
   System.out.println(i); 
}","### Instruction: 
 Construct a for loop in Java to increment a counter from 0 to 10. 
 ### Response:
 for (int i = 0; i < 10; i++) { 
   System.out.println(i); 
}"
16644,Use Java to send an HTTP request to an API endpoint with a login form.,"import java.net.*; 
import java.io.*; 

public class HttpClient {

  public static void main(String[] args) {

    try { 
      URL url = new URL(""http://example.com/api/login""); 

      HttpURLConnection con = (HttpURLConnection) url.openConnection(); 

      // Request headers
      con.setRequestMethod(""POST"");
      con.setRequestProperty(""Content-Type"", ""application/json"");

      // Request body
      String body = ""{\""username\"":\""john_doe\"", \""password\"":\""password123\""}"";

      // Send POST request
      con.setDoOutput(true);
      DataOutputStream wr = new DataOutputStream(con.getOutputStream());
      wr.writeBytes(body);
      wr.flush();
      wr.close();

      // Output response 
      int responseCode = con.getResponseCode();
      System.out.println(""Response code: "" + responseCode);
      BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
      String inputLine;
      StringBuffer content = new StringBuffer();
      while ((inputLine = in.readLine()) != null) {
        content.append(inputLine);
      }
      in.close();
      System.out.println(content.toString());
    } 
    catch (Exception ex) { 
      ex.printStackTrace();
    } 
  } 
}","### Instruction: 
 Use Java to send an HTTP request to an API endpoint with a login form. 
 ### Response:
 import java.net.*; 
import java.io.*; 

public class HttpClient {

  public static void main(String[] args) {

    try { 
      URL url = new URL(""http://example.com/api/login""); 

      HttpURLConnection con = (HttpURLConnection) url.openConnection(); 

      // Request headers
      con.setRequestMethod(""POST"");
      con.setRequestProperty(""Content-Type"", ""application/json"");

      // Request body
      String body = ""{\""username\"":\""john_doe\"", \""password\"":\""password123\""}"";

      // Send POST request
      con.setDoOutput(true);
      DataOutputStream wr = new DataOutputStream(con.getOutputStream());
      wr.writeBytes(body);
      wr.flush();
      wr.close();

      // Output response 
      int responseCode = con.getResponseCode();
      System.out.println(""Response code: "" + responseCode);
      BufferedReader in = new BufferedReader(new InputStreamReader(con.getInputStream()));
      String inputLine;
      StringBuffer content = new StringBuffer();
      while ((inputLine = in.readLine()) != null) {
        content.append(inputLine);
      }
      in.close();
      System.out.println(content.toString());
    } 
    catch (Exception ex) { 
      ex.printStackTrace();
    } 
  } 
}"
16645,"Create a Java program that takes a list of integers as an argument and computes the longest increasing subsequence.
Input: [8, 10, 1, 4, 15, 6, 7]","public class LongestIncreasingSubsequence {
  
    public static int longestSubsequence (int[] nums) {
        // Base case
        if (nums.length == 0) {
            return 0;
        }
 
        int[] dp = new int[nums.length];
        dp[0] = 1;
        int maxLength = 1;
 
        for (int i=1; i < nums.length; i++) {
            int temp = 0;
            for (int j=0; j < i; j++) {
                if (nums[j] < nums[i]) {
                    temp = Math.max(dp[j], temp);
                }
            }
 
            dp[i] = temp + 1;
            maxLength = Math.max(dp[i], maxLength);
        }
 
        return maxLength;
    }
}","### Instruction: 
 Create a Java program that takes a list of integers as an argument and computes the longest increasing subsequence. 
 ### Input: [8, 10, 1, 4, 15, 6, 7] 
 ### Response:
 public class LongestIncreasingSubsequence {
  
    public static int longestSubsequence (int[] nums) {
        // Base case
        if (nums.length == 0) {
            return 0;
        }
 
        int[] dp = new int[nums.length];
        dp[0] = 1;
        int maxLength = 1;
 
        for (int i=1; i < nums.length; i++) {
            int temp = 0;
            for (int j=0; j < i; j++) {
                if (nums[j] < nums[i]) {
                    temp = Math.max(dp[j], temp);
                }
            }
 
            dp[i] = temp + 1;
            maxLength = Math.max(dp[i], maxLength);
        }
 
        return maxLength;
    }
}"
16655,"Write a Java program that adds two numbers and checks whether the sum is greater than 5 or not.
Input: int x = 3;
int y = 4;","public class Add {
    public static void main(String[] args) {
        int x = 3;
        int y = 4;

        int sum = x + y;

        if (sum > 5) {
            System.out.println(""Greater than 5"");
        } else {
            System.out.println(""Less than or equal to 5"");
        }
    }
}","### Instruction: 
 Write a Java program that adds two numbers and checks whether the sum is greater than 5 or not. 
 ### Input: int x = 3;
int y = 4; 
 ### Response:
 public class Add {
    public static void main(String[] args) {
        int x = 3;
        int y = 4;

        int sum = x + y;

        if (sum > 5) {
            System.out.println(""Greater than 5"");
        } else {
            System.out.println(""Less than or equal to 5"");
        }
    }
}"
16683,"Rewrite the following code segment using Java 1.8's Lambda Expressions.
Input: BiFunction<Double, Double, Double> bf = new BiFunction<Double, Double, Double>() {

   public Double apply(Double d1, Double d2) { 
      return (d1*d2)/2;
   }
}","BiFunction <Double, Double, Double> bf = (d1, d2) -> (d1*d2)/2;","### Instruction: 
 Rewrite the following code segment using Java 1.8's Lambda Expressions. 
 ### Input: BiFunction<Double, Double, Double> bf = new BiFunction<Double, Double, Double>() {

   public Double apply(Double d1, Double d2) { 
      return (d1*d2)/2;
   }
} 
 ### Response:
 BiFunction <Double, Double, Double> bf = (d1, d2) -> (d1*d2)/2;"
16710,Write a for-loop in Java for printing the numbers from 1 to 10 with a space separating each number.,"for (int i = 1; i <= 10; i++) {
  System.out.print(i + "" "");
}","### Instruction: 
 Write a for-loop in Java for printing the numbers from 1 to 10 with a space separating each number. 
 ### Response:
 for (int i = 1; i <= 10; i++) {
  System.out.print(i + "" "");
}"
16728,"Write a Java program to generate the following patterns using a for loop.

* 
** 
*** 
****","public class Pattern { 
    public static void main(String[] args) { 
        for (int i = 1; i <= 4; i++) { 
            for (int j = 1; j <= i; j++ ) 
            System.out.print(""*""); 
            System.out.println(); 
        } 
    } 
}","### Instruction: 
 Write a Java program to generate the following patterns using a for loop.

* 
** 
*** 
**** 
 ### Response:
 public class Pattern { 
    public static void main(String[] args) { 
        for (int i = 1; i <= 4; i++) { 
            for (int j = 1; j <= i; j++ ) 
            System.out.print(""*""); 
            System.out.println(); 
        } 
    } 
}"
16740,Create a basic Java program that implements a binary search tree.,"class BinarySearchTree { 
    Node root; 
    
    /* Class containing left and right child of current node and key value*/
    class Node { 
        int key; 
        Node left, right; 
  
        public Node(int item) { 
            key = item; 
            left = right = null; 
        } 
    } 
  
    // Constructor 
    BinarySearchTree() {  
        root = null;  
    } 
  
    // This method mainly calls insertRec() 
    void insert(int key) { 
       root = insertRec(root, key); 
    } 
      
    /* A recursive function to insert a new key in BST */
    Node insertRec(Node root, int key) { 
  
        /* If the tree is empty, return a new node */
        if (root == null) { 
            root = new Node(key); 
            return root; 
        } 
  
        /* Otherwise, recur down the tree */
        if (key < root.key) 
            root.left = insertRec(root.left, key); 
        else if (key > root.key) 
            root.right = insertRec(root.right, key); 
  
        /* return the (unchanged) node pointer */
        return root; 
    } 
    
    // This method mainly calls InorderRec() 
    void inorder()  { 
       inorderRec(root); 
    } 
  
    // A utility function to do inorder traversal of BST 
    void inorderRec(Node root) { 
        if (root != null) { 
            inorderRec(root.left); 
            System.out.println(root.key); 
            inorderRec(root.right); 
        } 
    } 
  
    // Driver Program to test above functions
    public static void main(String[] args) { 
        BinarySearchTree tree = new BinarySearchTree(); 
  
        /* Let us create following BST 
              50 
           /     \ 
          30      70 
         /  \    /  \ 
        20   40  60   80 */
        tree.insert(50); 
        tree.insert(30); 
        tree.insert(20); 
        tree.insert(40); 
        tree.insert(70); 
        tree.insert(60); 
        tree.insert(80); 
  
        // print inorder traversal of the BST 
        tree.inorder(); 
    } 
}","### Instruction: 
 Create a basic Java program that implements a binary search tree. 
 ### Response:
 class BinarySearchTree { 
    Node root; 
    
    /* Class containing left and right child of current node and key value*/
    class Node { 
        int key; 
        Node left, right; 
  
        public Node(int item) { 
            key = item; 
            left = right = null; 
        } 
    } 
  
    // Constructor 
    BinarySearchTree() {  
        root = null;  
    } 
  
    // This method mainly calls insertRec() 
    void insert(int key) { 
       root = insertRec(root, key); 
    } 
      
    /* A recursive function to insert a new key in BST */
    Node insertRec(Node root, int key) { 
  
        /* If the tree is empty, return a new node */
        if (root == null) { 
            root = new Node(key); 
            return root; 
        } 
  
        /* Otherwise, recur down the tree */
        if (key < root.key) 
            root.left = insertRec(root.left, key); 
        else if (key > root.key) 
            root.right = insertRec(root.right, key); 
  
        /* return the (unchanged) node pointer */
        return root; 
    } 
    
    // This method mainly calls InorderRec() 
    void inorder()  { 
       inorderRec(root); 
    } 
  
    // A utility function to do inorder traversal of BST 
    void inorderRec(Node root) { 
        if (root != null) { 
            inorderRec(root.left); 
            System.out.println(root.key); 
            inorderRec(root.right); 
        } 
    } 
  
    // Driver Program to test above functions
    public static void main(String[] args) { 
        BinarySearchTree tree = new BinarySearchTree(); 
  
        /* Let us create following BST 
              50 
           /     \ 
          30      70 
         /  \    /  \ 
        20   40  60   80 */
        tree.insert(50); 
        tree.insert(30); 
        tree.insert(20); 
        tree.insert(40); 
        tree.insert(70); 
        tree.insert(60); 
        tree.insert(80); 
  
        // print inorder traversal of the BST 
        tree.inorder(); 
    } 
}"
16742,Write a Java program to print out the lyrics of the song “Mary Had a Little Lamb”.,"public class Lyrics {

    public static void main(String[] args) {
        System.out.println(""Mary had a little lamb,"");
        System.out.println(""Little lamb, little lamb,"");
        System.out.println(""Mary had a little lamb,"");
        System.out.println(""Its fleece was white as snow."");
        System.out.println();
        System.out.println(""And everywhere that Mary went,"");
        System.out.println(""Mary went, Mary went,"");
        System.out.println(""Everywhere that Mary went,"");
        System.out.println(""The lamb was sure to go."");
    }
}","### Instruction: 
 Write a Java program to print out the lyrics of the song “Mary Had a Little Lamb”. 
 ### Response:
 public class Lyrics {

    public static void main(String[] args) {
        System.out.println(""Mary had a little lamb,"");
        System.out.println(""Little lamb, little lamb,"");
        System.out.println(""Mary had a little lamb,"");
        System.out.println(""Its fleece was white as snow."");
        System.out.println();
        System.out.println(""And everywhere that Mary went,"");
        System.out.println(""Mary went, Mary went,"");
        System.out.println(""Everywhere that Mary went,"");
        System.out.println(""The lamb was sure to go."");
    }
}"
16748,"Convert the following enum type expression in Java for days of the week to equivalent C# syntax.
Input: enum Weekday {SUNDAY, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY};","enum Weekday 
{
    Sunday, 
    Monday, 
    Tuesday, 
    Wednesday, 
    Thursday, 
    Friday, 
    Saturday
};","### Instruction: 
 Convert the following enum type expression in Java for days of the week to equivalent C# syntax. 
 ### Input: enum Weekday {SUNDAY, MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY}; 
 ### Response:
 enum Weekday 
{
    Sunday, 
    Monday, 
    Tuesday, 
    Wednesday, 
    Thursday, 
    Friday, 
    Saturday
};"
16750,"Convert the given code in Java to an equivalent expression in Python.
Input: int x = 10;",x = 10,"### Instruction: 
 Convert the given code in Java to an equivalent expression in Python. 
 ### Input: int x = 10; 
 ### Response:
 x = 10"
16755,Implement a Class in Java that creates a new array of two integers and allows the user to set and get the values of the array.,"public class TwoIntegers {
    private int[] twoIntegers;
    
    public TwoIntegers() {
        twoIntegers = new int[2];
    }
    
    public int getFirst() {
        return twoIntegers[0];
    }
    
    public int getSecond() {
        return twoIntegers[1];
    }
    
    public void setFirst(int first) {
        twoIntegers[0] = first;
    }
    
    public void setSecond(int second) {
        twoIntegers[1] = second;
    }
}","### Instruction: 
 Implement a Class in Java that creates a new array of two integers and allows the user to set and get the values of the array. 
 ### Response:
 public class TwoIntegers {
    private int[] twoIntegers;
    
    public TwoIntegers() {
        twoIntegers = new int[2];
    }
    
    public int getFirst() {
        return twoIntegers[0];
    }
    
    public int getSecond() {
        return twoIntegers[1];
    }
    
    public void setFirst(int first) {
        twoIntegers[0] = first;
    }
    
    public void setSecond(int second) {
        twoIntegers[1] = second;
    }
}"
16756,"Design a data structure in Java to store student records which includes Roll Number, Name, and Grade of the student.","public class Student {
    private int rollNumber;
    private String name;
    private int grade;
    
    public Student (int rollNumber, String name, int grade) {
        this.rollNumber = rollNumber;
        this.name = name;
        this.grade = grade;
    }
    
    public int getRollNumber() {
        return this.rollNumber;
    }
    
    public String getName() {
        return this.name;
    }
    
    public int getGrade() {
        return this.grade;
    }
}","### Instruction: 
 Design a data structure in Java to store student records which includes Roll Number, Name, and Grade of the student. 
 ### Response:
 public class Student {
    private int rollNumber;
    private String name;
    private int grade;
    
    public Student (int rollNumber, String name, int grade) {
        this.rollNumber = rollNumber;
        this.name = name;
        this.grade = grade;
    }
    
    public int getRollNumber() {
        return this.rollNumber;
    }
    
    public String getName() {
        return this.name;
    }
    
    public int getGrade() {
        return this.grade;
    }
}"
16768,"Edit the following Java code to round a number to two decimal places.
Input: double num = 3.14159;","double num = 3.14159;
num = Math.round(num * 100.0) / 100.0;
System.out.println(num);
// Output: 3.14","### Instruction: 
 Edit the following Java code to round a number to two decimal places. 
 ### Input: double num = 3.14159; 
 ### Response:
 double num = 3.14159;
num = Math.round(num * 100.0) / 100.0;
System.out.println(num);
// Output: 3.14"
16811,"Deducde whether the following code is a valid Java statement
Input: 345=num;",false,"### Instruction: 
 Deducde whether the following code is a valid Java statement 
 ### Input: 345=num; 
 ### Response:
 false"
16822,Generate a program in Java to find the mean of n numbers.,"public class Mean {

    // Method to calculate the mean of n numbers
    static double mean(int numbers[])
    {
        double sum = 0.0;
        for (int i : numbers)
            sum += i;
        return sum / numbers.length;
    }

    public static void main(String[] args)
    {
        int numbers[] = { 10, 20, 30, 40, 50 };

        // Display the result
        System.out.println(""Mean of numbers is : "" + mean(numbers));
    }
}","### Instruction: 
 Generate a program in Java to find the mean of n numbers. 
 ### Response:
 public class Mean {

    // Method to calculate the mean of n numbers
    static double mean(int numbers[])
    {
        double sum = 0.0;
        for (int i : numbers)
            sum += i;
        return sum / numbers.length;
    }

    public static void main(String[] args)
    {
        int numbers[] = { 10, 20, 30, 40, 50 };

        // Display the result
        System.out.println(""Mean of numbers is : "" + mean(numbers));
    }
}"
16823,"Construct a Java method to convert a string to its equivalent title case format.
Input: String: this is the string to be converted","public static String toTitleCase(String input) {
    StringBuilder titleCase = new StringBuilder();
    boolean nextTitleCase = true;
    for (char c : input.toCharArray()) {
        if (Character.isSpaceChar(c)) {
            nextTitleCase = true;
        } else if (nextTitleCase) {
            c = Character.toTitleCase(c);
            nextTitleCase = false;
        }
        titleCase.append(c);
    }
    return titleCase.toString();","### Instruction: 
 Construct a Java method to convert a string to its equivalent title case format. 
 ### Input: String: this is the string to be converted 
 ### Response:
 public static String toTitleCase(String input) {
    StringBuilder titleCase = new StringBuilder();
    boolean nextTitleCase = true;
    for (char c : input.toCharArray()) {
        if (Character.isSpaceChar(c)) {
            nextTitleCase = true;
        } else if (nextTitleCase) {
            c = Character.toTitleCase(c);
            nextTitleCase = false;
        }
        titleCase.append(c);
    }
    return titleCase.toString();"
16866,"Design a function in Java to output the same string in reverse order.
Input: String: 'Hello World!'","public static String reverseString(String input){
    StringBuilder output = new StringBuilder();
    for (int i = input.length()-1; i >= 0; i--){
        output.append(input.charAt(i));
    }
    return output.toString();
}

System.out.println(reverseString(""Hello World!"")); // Outputs ""!dlroW olleH""","### Instruction: 
 Design a function in Java to output the same string in reverse order. 
 ### Input: String: 'Hello World!' 
 ### Response:
 public static String reverseString(String input){
    StringBuilder output = new StringBuilder();
    for (int i = input.length()-1; i >= 0; i--){
        output.append(input.charAt(i));
    }
    return output.toString();
}

System.out.println(reverseString(""Hello World!"")); // Outputs ""!dlroW olleH"""
16873,Classify the following statement as either true or false. Java and JavaScript are the same language.,"False. Java and JavaScript are two different programming languages. Java is a statically typed, strong-typing, object-oriented language while JavaScript is an interpreted language and is used mainly in web development.","### Instruction: 
 Classify the following statement as either true or false. Java and JavaScript are the same language. 
 ### Response:
 False. Java and JavaScript are two different programming languages. Java is a statically typed, strong-typing, object-oriented language while JavaScript is an interpreted language and is used mainly in web development."
16881,"Write a function in Java that returns a random element from an array.
Input: int[] A = {3, 5, 7, 9, 12};","public static int getRandomElement(int[] A) {
int randomIndex = (int)(Math.random() * A.length); 
return A[randomIndex]; 
}","### Instruction: 
 Write a function in Java that returns a random element from an array. 
 ### Input: int[] A = {3, 5, 7, 9, 12}; 
 ### Response:
 public static int getRandomElement(int[] A) {
int randomIndex = (int)(Math.random() * A.length); 
return A[randomIndex]; 
}"
16887,"Develop a Java function that takes a string and searches for the occurrence of a given character.
Input: string=""Hello World"";
ch='l';","public static int findOccurrence (String string, char ch) 
{ 
    int count = 0; 
    for (int i=0; i<string.length(); i++) 
    { 
        if (string.charAt(i) == ch) 
            count++; 
    } 
    return count; 
}","### Instruction: 
 Develop a Java function that takes a string and searches for the occurrence of a given character. 
 ### Input: string=""Hello World"";
ch='l'; 
 ### Response:
 public static int findOccurrence (String string, char ch) 
{ 
    int count = 0; 
    for (int i=0; i<string.length(); i++) 
    { 
        if (string.charAt(i) == ch) 
            count++; 
    } 
    return count; 
}"
16900,"Edit the Java code below to produce the output ""My name is NAME"".
Input: public class Test { 
 public static void main(String[] args) { 
 System.out.println(""My name is""); 
 } 
}","public class Test { 
 public static void main(String[] args) { 
 System.out.println(""My name is NAME""); 
 } 
}","### Instruction: 
 Edit the Java code below to produce the output ""My name is NAME"". 
 ### Input: public class Test { 
 public static void main(String[] args) { 
 System.out.println(""My name is""); 
 } 
} 
 ### Response:
 public class Test { 
 public static void main(String[] args) { 
 System.out.println(""My name is NAME""); 
 } 
}"
16905,Create a class in Java that represent books in a library.,"public class Book { 
    // Properties 
    private String title; 
    private String author; 
    private int yearPublished; 
    
    // Constructors 
    public Book (String t, String a, int y) 
    { 
        title = t; 
        author = a; 
        yearPublished = y; 
    } 
    
    // Accessor and mutator methods 
    public void setTitle(String newTitle) { title = newTitle; } 
    public void setAuthor(String newAuthor) { author = newAuthor; } 
    public void setYearPublished(int newYear) { yearPublished = newYear; } 
    
    public String getTitle() { return title; } 
    public String getAuthor() { return author; } 
    public int getYearPublished() { return yearPublished; } 
}","### Instruction: 
 Create a class in Java that represent books in a library. 
 ### Response:
 public class Book { 
    // Properties 
    private String title; 
    private String author; 
    private int yearPublished; 
    
    // Constructors 
    public Book (String t, String a, int y) 
    { 
        title = t; 
        author = a; 
        yearPublished = y; 
    } 
    
    // Accessor and mutator methods 
    public void setTitle(String newTitle) { title = newTitle; } 
    public void setAuthor(String newAuthor) { author = newAuthor; } 
    public void setYearPublished(int newYear) { yearPublished = newYear; } 
    
    public String getTitle() { return title; } 
    public String getAuthor() { return author; } 
    public int getYearPublished() { return yearPublished; } 
}"
16908,"Change the following piece of Java code to make sure that the parameter passed is a valid date.
Input: public boolean isValidDate(String date){ 
    // return true if date is valid 
}","public boolean isValidDate(String date){ 
    SimpleDateFormat format = new SimpleDateFormat(""yyyy-MM-dd"");
    try {
        format.parse(date);
        return true;
    } catch (ParseException e) {
        return false;
    }
}","### Instruction: 
 Change the following piece of Java code to make sure that the parameter passed is a valid date. 
 ### Input: public boolean isValidDate(String date){ 
    // return true if date is valid 
} 
 ### Response:
 public boolean isValidDate(String date){ 
    SimpleDateFormat format = new SimpleDateFormat(""yyyy-MM-dd"");
    try {
        format.parse(date);
        return true;
    } catch (ParseException e) {
        return false;
    }
}"
16920,"Create a Java program to count character occurrences in a given string.
Input: String = ""GPT models are a type of machine learning algorithms""","public class CharacterCount {
    public static void main(String[] args) {
        String str = ""GPT models are a type of machine learning algorithms"";
        int[] count = new int[256];

        for (int i = 0; i < str.length(); i++)
            count[str.charAt(i)]++;
        for (int i = 0; i < 256; i++)
            if(count[i] != 0)
                System.out.println((char)i + "": "" + count[i]);
    }
}","### Instruction: 
 Create a Java program to count character occurrences in a given string. 
 ### Input: String = ""GPT models are a type of machine learning algorithms"" 
 ### Response:
 public class CharacterCount {
    public static void main(String[] args) {
        String str = ""GPT models are a type of machine learning algorithms"";
        int[] count = new int[256];

        for (int i = 0; i < str.length(); i++)
            count[str.charAt(i)]++;
        for (int i = 0; i < 256; i++)
            if(count[i] != 0)
                System.out.println((char)i + "": "" + count[i]);
    }
}"
16930,"Update the following Java code to print the difference between two dates in years, months and days
Input: import java.time.LocalDateTime;

public class DateTime {

    public static void main(String[] args) {

        LocalDateTime dateTime1 = LocalDateTime.of(2020,11,5,14,45);
        LocalDateTime dateTime2 = LocalDateTime.of(1999,1,15,9,30);

        // Update code to print the difference
    }
}","import java.time.LocalDateTime;
import java.time.Period;

public class DateTime {

    public static void main(String[] args) {

        LocalDateTime dateTime1 = LocalDateTime.of(2020,11,5,14,45);
        LocalDateTime dateTime2 = LocalDateTime.of(1999,1,15,9,30);

        Period diff = Period.between(dateTime1.toLocalDate(), dateTime2.toLocalDate());

        System.out.printf(""The difference is %d years, %d months and %d days\n""
            , diff.getYears()
            , diff.getMonths()
            , diff.getDays());
    }
}","### Instruction: 
 Update the following Java code to print the difference between two dates in years, months and days 
 ### Input: import java.time.LocalDateTime;

public class DateTime {

    public static void main(String[] args) {

        LocalDateTime dateTime1 = LocalDateTime.of(2020,11,5,14,45);
        LocalDateTime dateTime2 = LocalDateTime.of(1999,1,15,9,30);

        // Update code to print the difference
    }
} 
 ### Response:
 import java.time.LocalDateTime;
import java.time.Period;

public class DateTime {

    public static void main(String[] args) {

        LocalDateTime dateTime1 = LocalDateTime.of(2020,11,5,14,45);
        LocalDateTime dateTime2 = LocalDateTime.of(1999,1,15,9,30);

        Period diff = Period.between(dateTime1.toLocalDate(), dateTime2.toLocalDate());

        System.out.printf(""The difference is %d years, %d months and %d days\n""
            , diff.getYears()
            , diff.getMonths()
            , diff.getDays());
    }
}"
16977,"Create a string object in Java that stores the text ""Hello, World!"".","String hello = ""Hello, World!"";","### Instruction: 
 Create a string object in Java that stores the text ""Hello, World!"". 
 ### Response:
 String hello = ""Hello, World!"";"
16981,"Create a Java program to compute the total price of a customer's order based on item prices and quantities.
Input: item_price = [30, 20, 15], quantity = [2, 4, 1]","public static int computeTotalPrice(int[] item_price, int[] quantity) {
    int sum = 0;
    for (int i = 0; i < item_price.length; i++) {
        sum += item_price[i] * quantity[i];
    }
    return sum;
}

System.out.println(computeTotalPrice(item_price, quantity));","### Instruction: 
 Create a Java program to compute the total price of a customer's order based on item prices and quantities. 
 ### Input: item_price = [30, 20, 15], quantity = [2, 4, 1] 
 ### Response:
 public static int computeTotalPrice(int[] item_price, int[] quantity) {
    int sum = 0;
    for (int i = 0; i < item_price.length; i++) {
        sum += item_price[i] * quantity[i];
    }
    return sum;
}

System.out.println(computeTotalPrice(item_price, quantity));"
17027,Use Java to create a constructor to set the values of instance variables num1 and num2.,"public class Number {
    int num1;
    int num2;
    
    public Number(int num1, int num2) {
        this.num1 = num1;
        this.num2 = num2;
    }
}","### Instruction: 
 Use Java to create a constructor to set the values of instance variables num1 and num2. 
 ### Response:
 public class Number {
    int num1;
    int num2;
    
    public Number(int num1, int num2) {
        this.num1 = num1;
        this.num2 = num2;
    }
}"
17032,Create a Java class Person with instance variables firstName and lastName.,"public class Person {
  private String firstName;
  private String lastName;

  public Person(String firstName, String lastName) {
    this.firstName = firstName;
    this.lastName = lastName;
  }
}","### Instruction: 
 Create a Java class Person with instance variables firstName and lastName. 
 ### Response:
 public class Person {
  private String firstName;
  private String lastName;

  public Person(String firstName, String lastName) {
    this.firstName = firstName;
    this.lastName = lastName;
  }
}"
17050,"Develop a Java program to input a string and reverse the order of words.
Input: I love to code in Java","Java in code to love I 

public class Reverse { 
    
    static void reverseWords(String str)  
    {  
          
        // Specific marker to identify the strings 
        String[] words = str.split(""\\s""); 
          
        String reversedString = """"; 
          
        for (int i = 0; i < words.length; i++)  
        { 
            String word = words[i]; 
            String reverseWord = """"; 
              
            for (int j = word.length()-1; j >= 0; j--) 
            { 
                reverseWord = reverseWord + word.charAt(j); 
            } 
              
            reversedString = reversedString + reverseWord + "" ""; 
        } 
          
        System.out.println(str); 
          
        System.out.println(reversedString); 
    } 
      
    public static void main(String[] args)  
    { 
        reverseWords(""I love to code in Java""); 
    } 
}","### Instruction: 
 Develop a Java program to input a string and reverse the order of words. 
 ### Input: I love to code in Java 
 ### Response:
 Java in code to love I 

public class Reverse { 
    
    static void reverseWords(String str)  
    {  
          
        // Specific marker to identify the strings 
        String[] words = str.split(""\\s""); 
          
        String reversedString = """"; 
          
        for (int i = 0; i < words.length; i++)  
        { 
            String word = words[i]; 
            String reverseWord = """"; 
              
            for (int j = word.length()-1; j >= 0; j--) 
            { 
                reverseWord = reverseWord + word.charAt(j); 
            } 
              
            reversedString = reversedString + reverseWord + "" ""; 
        } 
          
        System.out.println(str); 
          
        System.out.println(reversedString); 
    } 
      
    public static void main(String[] args)  
    { 
        reverseWords(""I love to code in Java""); 
    } 
}"
17053,Create a class in Java to store the information about a user.,"public class User {
    private String name;
    private int age;
    private String address;
    
    
    public User(String name, int age, String address) {
        this.name = name;
        this.age = age;
        this.address = address;
    }
    
    
    public String getName() {
        return name;
    }
    
    public int getAge() {
        return age;
    }
    
    public String getAddress() {
        return address;
    }
    
    
    public void setName(String name) {
        this.name = name;
    }
    
    public void setAge(int age) {
         this.age = age;
    }
    
    public void setAddress(String address) {
        this.address = address;
    } 
}","### Instruction: 
 Create a class in Java to store the information about a user. 
 ### Response:
 public class User {
    private String name;
    private int age;
    private String address;
    
    
    public User(String name, int age, String address) {
        this.name = name;
        this.age = age;
        this.address = address;
    }
    
    
    public String getName() {
        return name;
    }
    
    public int getAge() {
        return age;
    }
    
    public String getAddress() {
        return address;
    }
    
    
    public void setName(String name) {
        this.name = name;
    }
    
    public void setAge(int age) {
         this.age = age;
    }
    
    public void setAddress(String address) {
        this.address = address;
    } 
}"
17117,"Create a class in Java that comprises of a date, a location and temperature reading associated with that location on that particular date.","public class TemperatureReading {
  private Date date;
  private String location;
  private int temperature;

  public TemperatureReading(Date date, String location, int temperature) {
    this.date = date;
    this.location = location;
    this.temperature = temperature;
  }

  public Date getDate() {
    return date;
  }

  public String getLocation() {
    return location;
  }

  public int getTemperature() {
    return temperature;
  }
}","### Instruction: 
 Create a class in Java that comprises of a date, a location and temperature reading associated with that location on that particular date. 
 ### Response:
 public class TemperatureReading {
  private Date date;
  private String location;
  private int temperature;

  public TemperatureReading(Date date, String location, int temperature) {
    this.date = date;
    this.location = location;
    this.temperature = temperature;
  }

  public Date getDate() {
    return date;
  }

  public String getLocation() {
    return location;
  }

  public int getTemperature() {
    return temperature;
  }
}"
17123,"Write a Java code snippet to show the below numbers in a tabular format on the console.
Input: num1 = 8
num2 = 10
num3 = 12","int [] nums = {8, 10, 12};
System.out.println(""Number  \tNumber  \tNumber"");
for(int i=0; i<nums.length; i++) {
    System.out.println(nums[i] + ""\t\t"" + nums[i+1] + ""\t\t"" + nums[i+2]);
    i++;
}","### Instruction: 
 Write a Java code snippet to show the below numbers in a tabular format on the console. 
 ### Input: num1 = 8
num2 = 10
num3 = 12 
 ### Response:
 int [] nums = {8, 10, 12};
System.out.println(""Number  \tNumber  \tNumber"");
for(int i=0; i<nums.length; i++) {
    System.out.println(nums[i] + ""\t\t"" + nums[i+1] + ""\t\t"" + nums[i+2]);
    i++;
}"
17128,"Generate a code snippet in Java to display a message ""Hello World!""","System.out.println(""Hello World!"");","### Instruction: 
 Generate a code snippet in Java to display a message ""Hello World!"" 
 ### Response:
 System.out.println(""Hello World!"");"
17129,"Refactor the given piece of code in Java to make it more concise.
Input: int a = 5;
int b = 10;
int c = a + b;",int c = 5 + 10;,"### Instruction: 
 Refactor the given piece of code in Java to make it more concise. 
 ### Input: int a = 5;
int b = 10;
int c = a + b; 
 ### Response:
 int c = 5 + 10;"
17145,"Change the following Java code so that it only prints the letters at even indices in the string.
Input: String str = ""Hello, World!"";

for (int i = 0; i < str.length(); i++) {
 System.out.print(str.charAt(i));
}","String str = ""Hello, World!"";

for (int i = 0; i < str.length(); i+=2) {
 System.out.print(str.charAt(i));
}","### Instruction: 
 Change the following Java code so that it only prints the letters at even indices in the string. 
 ### Input: String str = ""Hello, World!"";

for (int i = 0; i < str.length(); i++) {
 System.out.print(str.charAt(i));
} 
 ### Response:
 String str = ""Hello, World!"";

for (int i = 0; i < str.length(); i+=2) {
 System.out.print(str.charAt(i));
}"
17161,"Create a short Java program that prints out a word 5 times.
Input: Word: hello","public class HelloWorld {
    public static void main(String[] args) {
        for (int i = 0; i < 5; i++) {
            System.out.println(""hello"");
        }
    }
}","### Instruction: 
 Create a short Java program that prints out a word 5 times. 
 ### Input: Word: hello 
 ### Response:
 public class HelloWorld {
    public static void main(String[] args) {
        for (int i = 0; i < 5; i++) {
            System.out.println(""hello"");
        }
    }
}"
17189,"Write a Java program to convert a character to an int.
Input: 'A'","public class Main {

    public static void main(String[] args) {

        char ch = 'A';
        int asciiCode = (int) ch;
        System.out.println(""ASCII code of 'A' :"" + asciiCode);
    }
}","### Instruction: 
 Write a Java program to convert a character to an int. 
 ### Input: 'A' 
 ### Response:
 public class Main {

    public static void main(String[] args) {

        char ch = 'A';
        int asciiCode = (int) ch;
        System.out.println(""ASCII code of 'A' :"" + asciiCode);
    }
}"
17204,"Write a Java class named ""Shape"" which has an abstract method named ""surfaceArea"".","public abstract class Shape {
    public abstract double surfaceArea();
}","### Instruction: 
 Write a Java class named ""Shape"" which has an abstract method named ""surfaceArea"". 
 ### Response:
 public abstract class Shape {
    public abstract double surfaceArea();
}"
17221,Develop a code snippet in Java to create a thread that runs a simple print statement every 5 seconds.,"public class MyTask implements Runnable { 
    public void run() 
    { 
        while (true) { 
            System.out.println(""This is the task running every 5 seconds.""); 
            try { 
                Thread.sleep(5000); 
            } 
            catch (InterruptedException e) { 
                e.printStackTrace(); 
            } 
        } 
    } 
} 
  
public class Main { 
    public static void main (String[] args) 
    { 
        MyTask task = new MyTask(); 
        Thread thread = new Thread(task); 
        thread.start(); 
    } 
}","### Instruction: 
 Develop a code snippet in Java to create a thread that runs a simple print statement every 5 seconds. 
 ### Response:
 public class MyTask implements Runnable { 
    public void run() 
    { 
        while (true) { 
            System.out.println(""This is the task running every 5 seconds.""); 
            try { 
                Thread.sleep(5000); 
            } 
            catch (InterruptedException e) { 
                e.printStackTrace(); 
            } 
        } 
    } 
} 
  
public class Main { 
    public static void main (String[] args) 
    { 
        MyTask task = new MyTask(); 
        Thread thread = new Thread(task); 
        thread.start(); 
    } 
}"
17231,"Refactor the following Java code to improve readability and dynamism.
Input: public class Movies {
  private int movieCount = 5;
  private String genre = ""action"";
 
  public void printMovieDetails() {
    System.out.println(""The movie count is "" + movieCount);
    System.out.println(""The genre is "" + genre);
  }
}","public class Movies {
  private int movieCount;
  private String genre;
 
  public Movies(int movieCount, String genre) {
    this.movieCount = movieCount;
    this.genre = genre;
  }
 
  public void printMovieDetails() {
    System.out.println(""The movie count is "" + movieCount);
    System.out.println(""The genre is "" + genre);
  }
}","### Instruction: 
 Refactor the following Java code to improve readability and dynamism. 
 ### Input: public class Movies {
  private int movieCount = 5;
  private String genre = ""action"";
 
  public void printMovieDetails() {
    System.out.println(""The movie count is "" + movieCount);
    System.out.println(""The genre is "" + genre);
  }
} 
 ### Response:
 public class Movies {
  private int movieCount;
  private String genre;
 
  public Movies(int movieCount, String genre) {
    this.movieCount = movieCount;
    this.genre = genre;
  }
 
  public void printMovieDetails() {
    System.out.println(""The movie count is "" + movieCount);
    System.out.println(""The genre is "" + genre);
  }
}"
17286,"Write code in Java to find the maximum value of the array.
Input: [1, 4, 6, 8, 9, 4, 2]","public static double maxValue(double[] array) {
    double maxValue = array[0];
    for (int i = 1; i < array.length; i++) {
        if (array[i] > maxValue)
            maxValue = array[i];
    }
    return maxValue;
}","### Instruction: 
 Write code in Java to find the maximum value of the array. 
 ### Input: [1, 4, 6, 8, 9, 4, 2] 
 ### Response:
 public static double maxValue(double[] array) {
    double maxValue = array[0];
    for (int i = 1; i < array.length; i++) {
        if (array[i] > maxValue)
            maxValue = array[i];
    }
    return maxValue;
}"
17288,Write a short piece of code in Java to display the following message.,"System.out.println(""Welcome to the Java programming course!"");","### Instruction: 
 Write a short piece of code in Java to display the following message. 
 ### Response:
 System.out.println(""Welcome to the Java programming course!"");"
17294,"Write a piece of code in Java to check if the following string contains a numeric character.
Input: ""Hello World!""","String str = ""Hello World!"";
boolean isNumeric = false; 
  
for (int i = 0; i < str.length(); i++) 
{ 
    if (Character.isDigit(str.charAt(i))) 
    { 
        isNumeric = true; 
        break; 
    } 
} 

if (isNumeric) 
    System.out.println(""The given string contains a numeric character.""); 
else
    System.out.println(""The given string does not contain a numeric character."");","### Instruction: 
 Write a piece of code in Java to check if the following string contains a numeric character. 
 ### Input: ""Hello World!"" 
 ### Response:
 String str = ""Hello World!"";
boolean isNumeric = false; 
  
for (int i = 0; i < str.length(); i++) 
{ 
    if (Character.isDigit(str.charAt(i))) 
    { 
        isNumeric = true; 
        break; 
    } 
} 

if (isNumeric) 
    System.out.println(""The given string contains a numeric character.""); 
else
    System.out.println(""The given string does not contain a numeric character."");"
17306,"Convert the following SQL query into a Java code using JDBC.
Input: SELECT Employees.Name FROM Employees WHERE Employees.Salary > 50000","String queryString = ""SELECT Employees.Name FROM Employees WHERE Employees.Salary > ?"";
PreparedStatement pstmt = conn.prepareStatement(queryString);
pstmt.setDouble(1, 50000);
ResultSet rs = pstmt.executeQuery();
while (rs.next()) {
    String name = rs.getString(1);
    // Process the name
}","### Instruction: 
 Convert the following SQL query into a Java code using JDBC. 
 ### Input: SELECT Employees.Name FROM Employees WHERE Employees.Salary > 50000 
 ### Response:
 String queryString = ""SELECT Employees.Name FROM Employees WHERE Employees.Salary > ?"";
PreparedStatement pstmt = conn.prepareStatement(queryString);
pstmt.setDouble(1, 50000);
ResultSet rs = pstmt.executeQuery();
while (rs.next()) {
    String name = rs.getString(1);
    // Process the name
}"
17317,"Develop a class in Java to implement a calculator with functions add(), subtract(), multiply(), and divide().","public class Calculator {

    public static double add(double a, double b) {
        return a + b;
    }

    public static double subtract(double a, double b) {
        return a - b;
    }

    public static double multiply(double a, double b) {
        return a * b;
    }

    public static double divide(double a, double b) {
        return a / b;
    }

}","### Instruction: 
 Develop a class in Java to implement a calculator with functions add(), subtract(), multiply(), and divide(). 
 ### Response:
 public class Calculator {

    public static double add(double a, double b) {
        return a + b;
    }

    public static double subtract(double a, double b) {
        return a - b;
    }

    public static double multiply(double a, double b) {
        return a * b;
    }

    public static double divide(double a, double b) {
        return a / b;
    }

}"
17331,Write a Java program to find the sum of two arrays of length 10,"public static int[] sumArrays(int[] arr1, int[] arr2){
        int[] result = new int[arr1.length];
        for(int i=0; i<arr1.length; i++){
            result[i] = arr1[i] + arr2[i];
        }
        return result;
    }","### Instruction: 
 Write a Java program to find the sum of two arrays of length 10 
 ### Response:
 public static int[] sumArrays(int[] arr1, int[] arr2){
        int[] result = new int[arr1.length];
        for(int i=0; i<arr1.length; i++){
            result[i] = arr1[i] + arr2[i];
        }
        return result;
    }"
17337,"Construct a for loop in Java which will iterate through an array and print each item in a new line.
Input: int[] arr = {1, 2, 3, 4, 5};","for (int i = 0; i < arr.length; i++) {
    System.out.println(arr[i]);
}","### Instruction: 
 Construct a for loop in Java which will iterate through an array and print each item in a new line. 
 ### Input: int[] arr = {1, 2, 3, 4, 5}; 
 ### Response:
 for (int i = 0; i < arr.length; i++) {
    System.out.println(arr[i]);
}"
17359,"Create a Java program that reads in a sentence from the user and prints out the lengths of each word in the sentence.
Input: This is a sentence",4 2 1 8,"### Instruction: 
 Create a Java program that reads in a sentence from the user and prints out the lengths of each word in the sentence. 
 ### Input: This is a sentence 
 ### Response:
 4 2 1 8"
17360,"Create a Java program that reads in two strings and outputs their longest common substring.
Input: myCodingSkillzz and AnotherCodingSkill",CodingSkill,"### Instruction: 
 Create a Java program that reads in two strings and outputs their longest common substring. 
 ### Input: myCodingSkillzz and AnotherCodingSkill 
 ### Response:
 CodingSkill"
17382,Write a Java program that reads an integer value N and prints all prime numbers less than N.,"public class PrimeNumbers {
   public static void main(String[] args) {
      int N = 25;
      for (int i = 2; i < N; i++) { 
          int count = 0; 
          for (int j = 2; j <= Math.sqrt(i); j++) {
              if (i % j == 0) {
                  count++; 
                  break; 
              }
          }
          if (count == 0) {
              System.out.print(i + "" ""); 
          }
      }         
   }
}","### Instruction: 
 Write a Java program that reads an integer value N and prints all prime numbers less than N. 
 ### Response:
 public class PrimeNumbers {
   public static void main(String[] args) {
      int N = 25;
      for (int i = 2; i < N; i++) { 
          int count = 0; 
          for (int j = 2; j <= Math.sqrt(i); j++) {
              if (i % j == 0) {
                  count++; 
                  break; 
              }
          }
          if (count == 0) {
              System.out.print(i + "" ""); 
          }
      }         
   }
}"
17388,Write a Java program to convert a given integer value to octal.,"public class Octal { 
   
    public static void main(String[] args) { 
          
        int num = 21; 
        String octal = Integer.toOctalString(num); 
        System.out.println(""Octal: "" + octal); 
    } 
}","### Instruction: 
 Write a Java program to convert a given integer value to octal. 
 ### Response:
 public class Octal { 
   
    public static void main(String[] args) { 
          
        int num = 21; 
        String octal = Integer.toOctalString(num); 
        System.out.println(""Octal: "" + octal); 
    } 
}"
17454,"Generate a JSON response from the following Java object.
Input: User user = new User(""jane"", ""doe"", ""jane.doe@gmail.com"");","{
    ""firstName"": ""jane"",
    ""lastName"": ""doe"",
    ""email"": ""jane.doe@gmail.com""
}","### Instruction: 
 Generate a JSON response from the following Java object. 
 ### Input: User user = new User(""jane"", ""doe"", ""jane.doe@gmail.com""); 
 ### Response:
 {
    ""firstName"": ""jane"",
    ""lastName"": ""doe"",
    ""email"": ""jane.doe@gmail.com""
}"
17466,Code a Java program to find the area of an equilateral triangle.,"import java.util.Scanner;

public class AreaOfTriangle {
    public static void main(String[] args) {
        double s;
        double area;
        Scanner sc = new Scanner(System.in);
        System.out.println(""Enter the side of the equilateral triangle:"");
        s = sc.nextDouble();
        area = (Math.sqrt(3) / 4) * (s * s);
        System.out.println(""Area of equilateral triangle is "" + area);
    }
}","### Instruction: 
 Code a Java program to find the area of an equilateral triangle. 
 ### Response:
 import java.util.Scanner;

public class AreaOfTriangle {
    public static void main(String[] args) {
        double s;
        double area;
        Scanner sc = new Scanner(System.in);
        System.out.println(""Enter the side of the equilateral triangle:"");
        s = sc.nextDouble();
        area = (Math.sqrt(3) / 4) * (s * s);
        System.out.println(""Area of equilateral triangle is "" + area);
    }
}"
17502,"Write a Java program to perform a linear search on a given array to find a given number.
Input: array = [23, 54, 12, 64, 76, 13, 45]
to_find = 45","public class LinearSearch 
{ 
    // This function returns index of element x in arr[] 
    static int search(int arr[], int x) 
    { 
        int n = arr.length; 
        for(int i = 0; i < n; i++) 
        { 
            if(arr[i] == x) 
                return i; 
        } 
        return -1; 
    } 
  
    public static void main(String args[]) 
    { 
        int arr[] = {23, 54, 12, 64, 76, 13, 45}; 
        int x = 45; 
  
        int index = search(arr, x); 
        if (index == -1) 
            System.out.println(""Element not present""); 
        else
            System.out.println(""Element found at index "" + index); 
    } 
}","### Instruction: 
 Write a Java program to perform a linear search on a given array to find a given number. 
 ### Input: array = [23, 54, 12, 64, 76, 13, 45]
to_find = 45 
 ### Response:
 public class LinearSearch 
{ 
    // This function returns index of element x in arr[] 
    static int search(int arr[], int x) 
    { 
        int n = arr.length; 
        for(int i = 0; i < n; i++) 
        { 
            if(arr[i] == x) 
                return i; 
        } 
        return -1; 
    } 
  
    public static void main(String args[]) 
    { 
        int arr[] = {23, 54, 12, 64, 76, 13, 45}; 
        int x = 45; 
  
        int index = search(arr, x); 
        if (index == -1) 
            System.out.println(""Element not present""); 
        else
            System.out.println(""Element found at index "" + index); 
    } 
}"
17503,"Create a HashMap in Java which contains the name of fruits and their corresponding prices.
Input: Mango - $2.4, Orange - $1.4, Apple - $3.2","import java.util.HashMap; 

public class FruitMap 
{ 
    public static void main(String args[]) 
    { 
  
        // Creating a HashMap of fruit name 
        // and their corresponding prices 
        HashMap<String, Double> fruitMap = new HashMap<>(); 
  
        // Mapping string values to double 
        fruitMap.put(""Mango"", 2.4); 
        fruitMap.put(""Orange"", 1.4); 
        fruitMap.put(""Apple"", 3.2); 
  
        // Displaying the HashMap 
        System.out.println(fruitMap); 
    } 
}","### Instruction: 
 Create a HashMap in Java which contains the name of fruits and their corresponding prices. 
 ### Input: Mango - $2.4, Orange - $1.4, Apple - $3.2 
 ### Response:
 import java.util.HashMap; 

public class FruitMap 
{ 
    public static void main(String args[]) 
    { 
  
        // Creating a HashMap of fruit name 
        // and their corresponding prices 
        HashMap<String, Double> fruitMap = new HashMap<>(); 
  
        // Mapping string values to double 
        fruitMap.put(""Mango"", 2.4); 
        fruitMap.put(""Orange"", 1.4); 
        fruitMap.put(""Apple"", 3.2); 
  
        // Displaying the HashMap 
        System.out.println(fruitMap); 
    } 
}"
17523,Write a Java program to accept two integers and find the sum of the two numbers.,"import java.util.Scanner;

public class SumIntegers {

    public static void main(String[] args) {
        
        Scanner scanner = new Scanner(System.in);

        System.out.println(""Enter two integers: "");
        int first = scanner.nextInt();
        int second = scanner.nextInt();

        int sum = first + second;

        System.out.println(""The sum of the two numbers is: "" + sum);
    }
 }","### Instruction: 
 Write a Java program to accept two integers and find the sum of the two numbers. 
 ### Response:
 import java.util.Scanner;

public class SumIntegers {

    public static void main(String[] args) {
        
        Scanner scanner = new Scanner(System.in);

        System.out.println(""Enter two integers: "");
        int first = scanner.nextInt();
        int second = scanner.nextInt();

        int sum = first + second;

        System.out.println(""The sum of the two numbers is: "" + sum);
    }
 }"
17552,"Create a class in Java representing a car with two attributes, color and make.","public class Car {
 
 private String color;
 private String make;
 
 public Car(String color, String make) {
 this.color = color;
 this.make = make;
 }
 
 public String getColor() {
 return color;
 }
 
 
 public String getMake() {
 return make;
 }
 
}","### Instruction: 
 Create a class in Java representing a car with two attributes, color and make. 
 ### Response:
 public class Car {
 
 private String color;
 private String make;
 
 public Car(String color, String make) {
 this.color = color;
 this.make = make;
 }
 
 public String getColor() {
 return color;
 }
 
 
 public String getMake() {
 return make;
 }
 
}"
17563,Write a Java method to convert a given integer to its equivalent English words,"public static String intToEnglish(int input) {
  
        // create an array of string representations of numbers 1 to 19  
        String[] numbers1_19 = {""one"", ""two"", ""three"", ""four"", ""five"", ""six"",  
                ""seven"", ""eight"", ""nine"", ""ten"", ""eleven"", ""twelve"", ""thirteen"",  
                ""fourteen"", ""fifteen"", ""sixteen"", ""seventeen"", ""eighteen"",  
                ""nineteen""};  
       
        // create an array of string representations of multiples of ten  
        // from 20 to 90  
        String[] multiplesOfTen = {"" twenty"", "" thirty"", "" forty"",  
                "" fifty"", "" sixty"", "" seventy"", "" eighty"", "" ninety""};  
      
        String output = """";  
          
        // extract each digit from the input and convert it to its  
        // string representation  
        if (input > 0 && input < 20) {  
            output += numbers1_19[input - 1] + "" "";  
        } else if (input >= 20 && input < 100) {  
            output += multiplesOfTen[input / 10 - 2] + "" "";  
            if (input % 10 != 0) {  
                output += intToEnglish(input % 10);  
            }  
        } else if (input >= 100 && input < 1000) {  
            output += intToEnglish(input / 100) + "" hundred "";  
            if (input % 100 != 0) {  
                output += intToEnglish(input % 100);  
            }  
        }  
        // return the output string  
        return output;
    }","### Instruction: 
 Write a Java method to convert a given integer to its equivalent English words 
 ### Response:
 public static String intToEnglish(int input) {
  
        // create an array of string representations of numbers 1 to 19  
        String[] numbers1_19 = {""one"", ""two"", ""three"", ""four"", ""five"", ""six"",  
                ""seven"", ""eight"", ""nine"", ""ten"", ""eleven"", ""twelve"", ""thirteen"",  
                ""fourteen"", ""fifteen"", ""sixteen"", ""seventeen"", ""eighteen"",  
                ""nineteen""};  
       
        // create an array of string representations of multiples of ten  
        // from 20 to 90  
        String[] multiplesOfTen = {"" twenty"", "" thirty"", "" forty"",  
                "" fifty"", "" sixty"", "" seventy"", "" eighty"", "" ninety""};  
      
        String output = """";  
          
        // extract each digit from the input and convert it to its  
        // string representation  
        if (input > 0 && input < 20) {  
            output += numbers1_19[input - 1] + "" "";  
        } else if (input >= 20 && input < 100) {  
            output += multiplesOfTen[input / 10 - 2] + "" "";  
            if (input % 10 != 0) {  
                output += intToEnglish(input % 10);  
            }  
        } else if (input >= 100 && input < 1000) {  
            output += intToEnglish(input / 100) + "" hundred "";  
            if (input % 100 != 0) {  
                output += intToEnglish(input % 100);  
            }  
        }  
        // return the output string  
        return output;
    }"
17637,Create a Java program for solving quadratic equations.,"import java.lang.Math;

public class QuadraticEquation {

  public static void main(String[] args) {
    double a = 1;
    double b = -2;
    double c = -8;
    double x1, x2;
  
    double discr = b * b - 4 * a * c;
    if (discr > 0)
    {
      x1 = ( - b + Math.sqrt(discr)) / (2 * a);
      x2 = ( - b - Math.sqrt(discr)) / (2 * a);
      System.out.println(""x1 = "" + x1 + "", x2 = "" + x2);
    }
    else if (discr == 0)
    {
      x1 = ( - b + Math.sqrt(discr)) / (2 * a);
      System.out.println(""x1 = x2 ="" + x1);
    }
    else {
      System.out.println(""No real roots"");
    }
  }
}","### Instruction: 
 Create a Java program for solving quadratic equations. 
 ### Response:
 import java.lang.Math;

public class QuadraticEquation {

  public static void main(String[] args) {
    double a = 1;
    double b = -2;
    double c = -8;
    double x1, x2;
  
    double discr = b * b - 4 * a * c;
    if (discr > 0)
    {
      x1 = ( - b + Math.sqrt(discr)) / (2 * a);
      x2 = ( - b - Math.sqrt(discr)) / (2 * a);
      System.out.println(""x1 = "" + x1 + "", x2 = "" + x2);
    }
    else if (discr == 0)
    {
      x1 = ( - b + Math.sqrt(discr)) / (2 * a);
      System.out.println(""x1 = x2 ="" + x1);
    }
    else {
      System.out.println(""No real roots"");
    }
  }
}"
17639,"Design a Java program for computing the average of a given list of numbers.
Input: [1, 2, 4, 5]","public static double computeAverage(int[] numbers){
    int sum = 0;
    for(int i=0; i<numbers.length; i++){
        sum += numbers[i];
    }
    double average =  (double)sum/numbers.length;
    return average;
}","### Instruction: 
 Design a Java program for computing the average of a given list of numbers. 
 ### Input: [1, 2, 4, 5] 
 ### Response:
 public static double computeAverage(int[] numbers){
    int sum = 0;
    for(int i=0; i<numbers.length; i++){
        sum += numbers[i];
    }
    double average =  (double)sum/numbers.length;
    return average;
}"
17642,"Create a Java class to represent a point (x, y) in a two-dimensional space.","public class Point {
    private int x;
    private int y;

    public Point(int x, int y) {
        this.x = x;
        this.y = y;
    }
    
    public int getX() {
        return x;
    }

    public int getY() {
        return y;
    }
}","### Instruction: 
 Create a Java class to represent a point (x, y) in a two-dimensional space. 
 ### Response:
 public class Point {
    private int x;
    private int y;

    public Point(int x, int y) {
        this.x = x;
        this.y = y;
    }
    
    public int getX() {
        return x;
    }

    public int getY() {
        return y;
    }
}"
17674,Create an algorithm in Java to print all the prime numbers between a given range.,"public class PrimeNumber { 
    public static void main(String[] args) {  
        int start = 2;
	    int end = 50;
        for(int i = start; i <= end; i++){
            boolean isPrime = true;
            for(int j=2; j < i; j++){
                if(i % j == 0){
                    isPrime = false;
                    break;
                }
            }
            if(isPrime)
                System.out.print(i + "" "");
        }
    }    
}","### Instruction: 
 Create an algorithm in Java to print all the prime numbers between a given range. 
 ### Response:
 public class PrimeNumber { 
    public static void main(String[] args) {  
        int start = 2;
	    int end = 50;
        for(int i = start; i <= end; i++){
            boolean isPrime = true;
            for(int j=2; j < i; j++){
                if(i % j == 0){
                    isPrime = false;
                    break;
                }
            }
            if(isPrime)
                System.out.print(i + "" "");
        }
    }    
}"
17717,Design a function in Java which takes an integer n as an argument and prints the numbers from one to n.,"public static void printNumbers(int n) {
 for (int i = 1; i <= n; i++) {
 System.out.print(i + "" "");
 }
 System.out.println(); 
}","### Instruction: 
 Design a function in Java which takes an integer n as an argument and prints the numbers from one to n. 
 ### Response:
 public static void printNumbers(int n) {
 for (int i = 1; i <= n; i++) {
 System.out.print(i + "" "");
 }
 System.out.println(); 
}"
17722,Prepare a Java method which takes a string as an argument and returns the number of vowels in it.,"public static int countVowels(String str) { 
	int count = 0; 
	for (int i = 0; i < str.length(); i++) 
		if (str.charAt(i) == 'a' || str.charAt(i) == 'e' || str.charAt(i) == 'i' || 
			str.charAt(i) == 'o' || str.charAt(i) == 'u') 
			count++; 
	return count; 
}","### Instruction: 
 Prepare a Java method which takes a string as an argument and returns the number of vowels in it. 
 ### Response:
 public static int countVowels(String str) { 
	int count = 0; 
	for (int i = 0; i < str.length(); i++) 
		if (str.charAt(i) == 'a' || str.charAt(i) == 'e' || str.charAt(i) == 'i' || 
			str.charAt(i) == 'o' || str.charAt(i) == 'u') 
			count++; 
	return count; 
}"
17751,"Write a Java program to convert a recursively given array of characters to a string.
Input: ['a', 'b', 'c']","String arrayToString(char[] array) {
    String s = """";
    for (char c : array) {
        s += c;
    }
    return s;
}","### Instruction: 
 Write a Java program to convert a recursively given array of characters to a string. 
 ### Input: ['a', 'b', 'c'] 
 ### Response:
 String arrayToString(char[] array) {
    String s = """";
    for (char c : array) {
        s += c;
    }
    return s;
}"
17762,"Create a Java application to calculate the mean stock price of a company in the last 5 days.
Input: [10.25, 11.94, 12.56, 11.13, 11.44]","public class StockPrice {
  public static void main(String[] args) {
    double[] stock_prices = {10.25, 11.94, 12.56, 11.13, 11.44};

    double stock_price_sum = 0;
    for(double stock_price : stock_price) {
      stock_price_sum += stock_price;
    }

    double stock_price_mean = stock_price_sum / stock_prices.length;

    System.out.println(stock_price_mean);
  }
}","### Instruction: 
 Create a Java application to calculate the mean stock price of a company in the last 5 days. 
 ### Input: [10.25, 11.94, 12.56, 11.13, 11.44] 
 ### Response:
 public class StockPrice {
  public static void main(String[] args) {
    double[] stock_prices = {10.25, 11.94, 12.56, 11.13, 11.44};

    double stock_price_sum = 0;
    for(double stock_price : stock_price) {
      stock_price_sum += stock_price;
    }

    double stock_price_mean = stock_price_sum / stock_prices.length;

    System.out.println(stock_price_mean);
  }
}"
17808,"Create an array of strings in Java with three elements - ""apple"", ""banana"" and ""orange"".","String[] arr = {""apple"", ""banana"", ""orange""};","### Instruction: 
 Create an array of strings in Java with three elements - ""apple"", ""banana"" and ""orange"". 
 ### Response:
 String[] arr = {""apple"", ""banana"", ""orange""};"
17817,Design a class in Java that creates an Employee record.,"public class Employee {
    private String name;
    private int age;
    private String position;

    public Employee(String name, int age, String position) {
        this.name = name;
        this.age = age;
        this.position = position;
    }

    public String getName() {
        return name;
    }

    public int getAge() {
        return age;
    }

    public String getPosition() {
        return position;
    }
}","### Instruction: 
 Design a class in Java that creates an Employee record. 
 ### Response:
 public class Employee {
    private String name;
    private int age;
    private String position;

    public Employee(String name, int age, String position) {
        this.name = name;
        this.age = age;
        this.position = position;
    }

    public String getName() {
        return name;
    }

    public int getAge() {
        return age;
    }

    public String getPosition() {
        return position;
    }
}"
17873,"Write a Java code that prints out all the even numbers in a given list.
Input: list = [2, 3, 4, 5, 6, 7, 8]","for (int num : list) { 
   if (num % 2 == 0) { 
      System.out.println(num); 
   } 
}","### Instruction: 
 Write a Java code that prints out all the even numbers in a given list. 
 ### Input: list = [2, 3, 4, 5, 6, 7, 8] 
 ### Response:
 for (int num : list) { 
   if (num % 2 == 0) { 
      System.out.println(num); 
   } 
}"
17886,Construct a function in Java that takes a sequence of numbers and finds the maximum value in the sequence.,"public static int findMax(int[] sequence) {
    int maxVal = Integer.MIN_VALUE;
    for (int val : sequence) {
        if (val > maxVal) {
            maxVal = val;
        }
    }
    return maxVal;
}","### Instruction: 
 Construct a function in Java that takes a sequence of numbers and finds the maximum value in the sequence. 
 ### Response:
 public static int findMax(int[] sequence) {
    int maxVal = Integer.MIN_VALUE;
    for (int val : sequence) {
        if (val > maxVal) {
            maxVal = val;
        }
    }
    return maxVal;
}"
17967,"Edit the following Java program to sort a given array.
Input: int[] array={16, 5, 1, 8, 10};","public static void sortArray(int[] array) {
    int temp;
    for (int i = 0; i < array.length; i++) { 
        for (int j = i + 1; j < array.length; j++) {  
            if (array[i] > array[j]) { 
                temp = array[i]; 
                array[i] = array[j]; 
                array[j] = temp; 
            } 
        } 
    }
}","### Instruction: 
 Edit the following Java program to sort a given array. 
 ### Input: int[] array={16, 5, 1, 8, 10}; 
 ### Response:
 public static void sortArray(int[] array) {
    int temp;
    for (int i = 0; i < array.length; i++) { 
        for (int j = i + 1; j < array.length; j++) {  
            if (array[i] > array[j]) { 
                temp = array[i]; 
                array[i] = array[j]; 
                array[j] = temp; 
            } 
        } 
    }
}"
17973,"Write a Java program to find the element that appears maximum number of times in an array.
Input: int [] arr1 = {2, 8, 7, 2, 8, 2, 6}","public class MaxElement 
{
    public static void main(String[] args) 
    {
        int[] arr1 = {2, 8, 7, 2, 8, 2, 6};

        int count = 1;
        int max_element=arr1[0];
        int temp_count;
        for (int i = 0; i < arr1.length; i++)
        {
            temp_count = 1;
            for (int j = i+1; j < arr1.length; j++)
            {
                if(arr1[i] == arr1[j]){
                    temp_count++;
                }
            }

            if(temp_count > count){
                count = temp_count;
                max_element=arr1[i];
            }
        }
        
        System.out.println(""Max Element : ""+max_element);
    }
}","### Instruction: 
 Write a Java program to find the element that appears maximum number of times in an array. 
 ### Input: int [] arr1 = {2, 8, 7, 2, 8, 2, 6} 
 ### Response:
 public class MaxElement 
{
    public static void main(String[] args) 
    {
        int[] arr1 = {2, 8, 7, 2, 8, 2, 6};

        int count = 1;
        int max_element=arr1[0];
        int temp_count;
        for (int i = 0; i < arr1.length; i++)
        {
            temp_count = 1;
            for (int j = i+1; j < arr1.length; j++)
            {
                if(arr1[i] == arr1[j]){
                    temp_count++;
                }
            }

            if(temp_count > count){
                count = temp_count;
                max_element=arr1[i];
            }
        }
        
        System.out.println(""Max Element : ""+max_element);
    }
}"
18018,"Create a Java program to count and print the distinct elements in an array.
Input: int[] arr = {1, 2, 3, 2, 1, 4, 3, 2}","public class DistinctElements { 
    public static void main(String[] args) { 
        int[] arr = {1, 2, 3, 2, 1, 4, 3, 2}; 
  
        // Initialize all element with the value 0. 
        int[] temp = new int[arr.length]; 
        int visited = -1; 
  
        for (int i = 0; i < arr.length; i++) { 
            int count = 1; 
            for (int j = i + 1; j < arr.length; j++) { 
                if (arr[i] == arr[j]) { 
                    count++; 
                    temp[j] = visited; 
                } 
            } 
            if (temp[i] != visited) { 
                temp[i] = count; 
            } 
        } 
        for (int i = 0; i < temp.length; i++) { 
            if (temp[i] != visited) { 
                System.out.println(arr[i] + ""->"" + temp[i]); 
            } 
        } 
    } 
}","### Instruction: 
 Create a Java program to count and print the distinct elements in an array. 
 ### Input: int[] arr = {1, 2, 3, 2, 1, 4, 3, 2} 
 ### Response:
 public class DistinctElements { 
    public static void main(String[] args) { 
        int[] arr = {1, 2, 3, 2, 1, 4, 3, 2}; 
  
        // Initialize all element with the value 0. 
        int[] temp = new int[arr.length]; 
        int visited = -1; 
  
        for (int i = 0; i < arr.length; i++) { 
            int count = 1; 
            for (int j = i + 1; j < arr.length; j++) { 
                if (arr[i] == arr[j]) { 
                    count++; 
                    temp[j] = visited; 
                } 
            } 
            if (temp[i] != visited) { 
                temp[i] = count; 
            } 
        } 
        for (int i = 0; i < temp.length; i++) { 
            if (temp[i] != visited) { 
                System.out.println(arr[i] + ""->"" + temp[i]); 
            } 
        } 
    } 
}"
18036,Generate a Java code snippet for declaring an empty list,List list = new ArrayList<>();,"### Instruction: 
 Generate a Java code snippet for declaring an empty list 
 ### Response:
 List list = new ArrayList<>();"
18038,"Create an expression statement in Java to check if a given number is between 10 and 20
Input: 15","if (num >= 10 && num <= 20) {
  // code
}","### Instruction: 
 Create an expression statement in Java to check if a given number is between 10 and 20 
 ### Input: 15 
 ### Response:
 if (num >= 10 && num <= 20) {
  // code
}"
18057,Write a class in Java to calculate the perimeter and area of a rectangle.,"public class Rectangle { 
    int length, width; 
  
    // Constructor 
    public Rectangle(int length, int width) 
    { 
        this.length = length; 
        this.width = width; 
    }

    public int getPerimeter() 
    { 
        // Calculate perimeter 
        return 2*(length + width); 
    } 
  
    public int getArea() 
    { 
        // Calculate area 
        return length*width; 
    } 
}","### Instruction: 
 Write a class in Java to calculate the perimeter and area of a rectangle. 
 ### Response:
 public class Rectangle { 
    int length, width; 
  
    // Constructor 
    public Rectangle(int length, int width) 
    { 
        this.length = length; 
        this.width = width; 
    }

    public int getPerimeter() 
    { 
        // Calculate perimeter 
        return 2*(length + width); 
    } 
  
    public int getArea() 
    { 
        // Calculate area 
        return length*width; 
    } 
}"
18066,"Create a Java class that prints ""Welcome to my program"" when initialized.","public class Welcome {
    public Welcome() {
        System.out.println(""Welcome to my program"");
    }
}","### Instruction: 
 Create a Java class that prints ""Welcome to my program"" when initialized. 
 ### Response:
 public class Welcome {
    public Welcome() {
        System.out.println(""Welcome to my program"");
    }
}"
18068,"Compile the following Java program using javac in command line.
Input: public class MyClass {
   public static void main(String[] args) {
      System.out.println(""Hello World"");
   }
}",javac MyClass.java,"### Instruction: 
 Compile the following Java program using javac in command line. 
 ### Input: public class MyClass {
   public static void main(String[] args) {
      System.out.println(""Hello World"");
   }
} 
 ### Response:
 javac MyClass.java"
18087,Generate an appropriate function in Java to check if a given number is an Armstrong number.,"public static boolean isArmstrongNumber(int number) 
{ 
    int originalNumber, remainder, result = 0;
    originalNumber = number;

    while (originalNumber != 0) 
    { 
        remainder = originalNumber % 10;
        result += Math.pow(remainder, 3);
        originalNumber /= 10;
    } 
    if(result == number) 
        return true; 
    else
        return false; 
}","### Instruction: 
 Generate an appropriate function in Java to check if a given number is an Armstrong number. 
 ### Response:
 public static boolean isArmstrongNumber(int number) 
{ 
    int originalNumber, remainder, result = 0;
    originalNumber = number;

    while (originalNumber != 0) 
    { 
        remainder = originalNumber % 10;
        result += Math.pow(remainder, 3);
        originalNumber /= 10;
    } 
    if(result == number) 
        return true; 
    else
        return false; 
}"
18090,Generate a Java program for comparing two strings for equality.,"public static boolean compareStrings(String str1, String str2) { 
    int str1Length = str1.length();
    int str2Length = str2.length();
   
    if (str1Length != str2Length)
       return false; 

    for (int i=0; i<str1Length; i++){
        if (str1.charAt(i) != str2.charAt(i))
            return false;
    }
    return true;
}","### Instruction: 
 Generate a Java program for comparing two strings for equality. 
 ### Response:
 public static boolean compareStrings(String str1, String str2) { 
    int str1Length = str1.length();
    int str2Length = str2.length();
   
    if (str1Length != str2Length)
       return false; 

    for (int i=0; i<str1Length; i++){
        if (str1.charAt(i) != str2.charAt(i))
            return false;
    }
    return true;
}"
18157,Create a random number generator in Java that produces a random integer between 1 and 10.,"public class RandomNumberGenerator { 
  public static int generateNumber() {
        Random rand = new Random(); 

        return rand.nextInt(10) + 1; 
    } 
}","### Instruction: 
 Create a random number generator in Java that produces a random integer between 1 and 10. 
 ### Response:
 public class RandomNumberGenerator { 
  public static int generateNumber() {
        Random rand = new Random(); 

        return rand.nextInt(10) + 1; 
    } 
}"
18171,Create a new Java thread.,"Creating a new thread in Java is quite simple. The new thread can be created by extending the Thread class and overriding the run() method.

Example:

public class MyThread extends Thread {
   @Override
   public void run() {
      // logic to be executed in the new thread
   }
}
 
// Create the new thread
 MyThread thread = new MyThread();
 // Start the new thread
 thread.start();","### Instruction: 
 Create a new Java thread. 
 ### Response:
 Creating a new thread in Java is quite simple. The new thread can be created by extending the Thread class and overriding the run() method.

Example:

public class MyThread extends Thread {
   @Override
   public void run() {
      // logic to be executed in the new thread
   }
}
 
// Create the new thread
 MyThread thread = new MyThread();
 // Start the new thread
 thread.start();"
18182,"Given a dataset containing multiple columns (Name, Class, and Subject) of 2,000 students, write a Java program to output a new dataset that only contains the ""Name"" and ""Class"" columns.
Input: Name | Class | Subject
Adam | 1A | Math
Jane | 2B | Physics
Tom | 3A | English","String[][] newdataset = new String[2000][2];
for(int i=0; i< 2000; i++){
  newdataset[i][0] = dataset[i][0]; //Name 
  newdataset[i][1] = dataset[i][1]; //Class
}","### Instruction: 
 Given a dataset containing multiple columns (Name, Class, and Subject) of 2,000 students, write a Java program to output a new dataset that only contains the ""Name"" and ""Class"" columns. 
 ### Input: Name | Class | Subject
Adam | 1A | Math
Jane | 2B | Physics
Tom | 3A | English 
 ### Response:
 String[][] newdataset = new String[2000][2];
for(int i=0; i< 2000; i++){
  newdataset[i][0] = dataset[i][0]; //Name 
  newdataset[i][1] = dataset[i][1]; //Class
}"
18237,"Update the following code in Java for sorting an array
Input: int arr[] = {10, 7, 8, 9, 1, 5};","for (int i = 0; i < arr.length; i++) 
    {
        for (int j = i + 1; j < arr.length; j++) 
        {
            if (arr[i] > arr[j]) 
            {
                int temp = arr[i]; 
                arr[i] = arr[j]; 
                arr[j] = temp; 
            } 
        }
    }","### Instruction: 
 Update the following code in Java for sorting an array 
 ### Input: int arr[] = {10, 7, 8, 9, 1, 5}; 
 ### Response:
 for (int i = 0; i < arr.length; i++) 
    {
        for (int j = i + 1; j < arr.length; j++) 
        {
            if (arr[i] > arr[j]) 
            {
                int temp = arr[i]; 
                arr[i] = arr[j]; 
                arr[j] = temp; 
            } 
        }
    }"
18240,Develop an algorithm in Java to compute the Fibonacci sequence,"static int Fibonacci(int a)
  { 
    if (a <= 1) return a; 
    return Fibonacci(a - 1) + Fibonacci(a - 2); 
  }","### Instruction: 
 Develop an algorithm in Java to compute the Fibonacci sequence 
 ### Response:
 static int Fibonacci(int a)
  { 
    if (a <= 1) return a; 
    return Fibonacci(a - 1) + Fibonacci(a - 2); 
  }"
18270,"Rewrite the following line of code in a Java syntax.
Input: console.log(""Hello World!"");","System.out.println(""Hello World!"");","### Instruction: 
 Rewrite the following line of code in a Java syntax. 
 ### Input: console.log(""Hello World!""); 
 ### Response:
 System.out.println(""Hello World!"");"
18277,Construct a declaration in Java to store the coordinates of a point in 3D space.,"public class point3D {
    int x;
    int y;
    int z;
}","### Instruction: 
 Construct a declaration in Java to store the coordinates of a point in 3D space. 
 ### Response:
 public class point3D {
    int x;
    int y;
    int z;
}"
18289,Write a Java program to print out all possible combinations of the numbers from 0 to 9,"public class Combinations {
    static void printCombinations(int[] arr, int index, int num, int reducedNum) 
    { 
        if (reducedNum < 0) 
            return; 
         if (reducedNum == 0) { 
            for (int i = 0; i < index; i++) 
                System.out.print(arr[i] + "" ""); 
            System.out.println(); 
            return; 
        } 
  
        // One by one replace the digit with all  
        // possible digits 
        int digit = 0; 
        while (digit <= 9) { 
  
            // if the digit is not used then replace 
            // it with the digit 
            if (arr[index] == -1) { 
                arr[index] = digit; 
                printCombinations(arr, index + 1,  
                                    num, reducedNum - digit); 
            } 
            digit++; 
        } 
  
        // replace the last digit with -1 
        arr[index] = -1; 
    } 
  
    // Driver code 
    public static void main(String[] args) 
    { 
        int[] arr = new int[10];; 
        for (int i = 0; i < 10; i++) 
            arr[i] = -1; 
  
        printCombinations(arr, 0, 10, 10); 
    } 
}","### Instruction: 
 Write a Java program to print out all possible combinations of the numbers from 0 to 9 
 ### Response:
 public class Combinations {
    static void printCombinations(int[] arr, int index, int num, int reducedNum) 
    { 
        if (reducedNum < 0) 
            return; 
         if (reducedNum == 0) { 
            for (int i = 0; i < index; i++) 
                System.out.print(arr[i] + "" ""); 
            System.out.println(); 
            return; 
        } 
  
        // One by one replace the digit with all  
        // possible digits 
        int digit = 0; 
        while (digit <= 9) { 
  
            // if the digit is not used then replace 
            // it with the digit 
            if (arr[index] == -1) { 
                arr[index] = digit; 
                printCombinations(arr, index + 1,  
                                    num, reducedNum - digit); 
            } 
            digit++; 
        } 
  
        // replace the last digit with -1 
        arr[index] = -1; 
    } 
  
    // Driver code 
    public static void main(String[] args) 
    { 
        int[] arr = new int[10];; 
        for (int i = 0; i < 10; i++) 
            arr[i] = -1; 
  
        printCombinations(arr, 0, 10, 10); 
    } 
}"
18415,"Compile this Java code to run on a JVM.
Input: public class HelloWorld {
    public static void main(String[] args) {
        System.out.println(""Hello world!"");
    }
}",javac HelloWorld.java,"### Instruction: 
 Compile this Java code to run on a JVM. 
 ### Input: public class HelloWorld {
    public static void main(String[] args) {
        System.out.println(""Hello world!"");
    }
} 
 ### Response:
 javac HelloWorld.java"
18417,"Debug this Java program and make the output print ""The answer is 3"".
Input: public class Debugging {
    public static void main(String[] args) {
        int x = 5;
        int y = 2;
        System.out.println(""The answer is "" + (x - y));
    }
}","public class Debugging {
    public static void main(String[] args) {
        int x = 5;
        int y = 2;
        System.out.println(""The answer is "" + (x - y + 1));
    }
}","### Instruction: 
 Debug this Java program and make the output print ""The answer is 3"". 
 ### Input: public class Debugging {
    public static void main(String[] args) {
        int x = 5;
        int y = 2;
        System.out.println(""The answer is "" + (x - y));
    }
} 
 ### Response:
 public class Debugging {
    public static void main(String[] args) {
        int x = 5;
        int y = 2;
        System.out.println(""The answer is "" + (x - y + 1));
    }
}"
18437,"Create a Java program that divides two integers and rounds the result to the nearest integer.
Input: int a = 8;
int b = 2;","public class Division {

 public static void main(String[] args) {
 
 int a = 8;
 int b = 2;
 
 double result = (double) a / b;
 int roundedResult = (int) Math.round(result);
 
 System.out.println(roundedResult);
 }
}","### Instruction: 
 Create a Java program that divides two integers and rounds the result to the nearest integer. 
 ### Input: int a = 8;
int b = 2; 
 ### Response:
 public class Division {

 public static void main(String[] args) {
 
 int a = 8;
 int b = 2;
 
 double result = (double) a / b;
 int roundedResult = (int) Math.round(result);
 
 System.out.println(roundedResult);
 }
}"
18492,Create a program in Java for displaying all prime numbers between 1 and 100.,"public class PrimeNumbers {

	public static void main(String[] args) {
		System.out.println(""All prime numbers between 1 and 100:"");
		int counter;
		for (int i = 2; i <= 100; i++) {
			counter = 0;
			for (int num = i; num >= 1; num--) {
				if (i % num == 0) {
					counter = counter + 1;
				}
			}
			if (counter == 2) {
				System.out.println(i);
			}
		}
	}

}","### Instruction: 
 Create a program in Java for displaying all prime numbers between 1 and 100. 
 ### Response:
 public class PrimeNumbers {

	public static void main(String[] args) {
		System.out.println(""All prime numbers between 1 and 100:"");
		int counter;
		for (int i = 2; i <= 100; i++) {
			counter = 0;
			for (int num = i; num >= 1; num--) {
				if (i % num == 0) {
					counter = counter + 1;
				}
			}
			if (counter == 2) {
				System.out.println(i);
			}
		}
	}

}"
18516,Create an algorithm in Java to search for a given value in a sorted array of integers.,"public class BinarySearch {

    public static double search(int[] arr, int target) {
        int low = 0;
        int high = arr.length - 1;
 
        while (low <= high) {
            int mid = (low + high) / 2;
 
            if (target == arr[mid]) {
                return mid;
            }
            else if (target < arr[mid]) {
                high = mid - 1;
            }
            else {
                low = mid + 1;
            }
        }
        return -1;
    }

}","### Instruction: 
 Create an algorithm in Java to search for a given value in a sorted array of integers. 
 ### Response:
 public class BinarySearch {

    public static double search(int[] arr, int target) {
        int low = 0;
        int high = arr.length - 1;
 
        while (low <= high) {
            int mid = (low + high) / 2;
 
            if (target == arr[mid]) {
                return mid;
            }
            else if (target < arr[mid]) {
                high = mid - 1;
            }
            else {
                low = mid + 1;
            }
        }
        return -1;
    }

}"
18518,"Write a Java program to sum the elements of an array except for the maximum and minimum.
Input: Array: [1, 2, 3, 4, 5]","class Sum {
    public static void main(String[] args) {
        int[] arr = {1,2,3,4,5};
        int max = arr[0];
        int min = arr[0]; 
  
        int sum = 0; 
        for (int i = 0; i < arr.length; i++) { 
            sum += arr[i]; 

            if (arr[i] > max) { 
                max = arr[i]; 
            } 
            if (arr[i] < min) { 
                min = arr[i]; 
            } 
        } 

        int res = sum - (max + min); 
  
        System.out.println(res); 
    } 
}","### Instruction: 
 Write a Java program to sum the elements of an array except for the maximum and minimum. 
 ### Input: Array: [1, 2, 3, 4, 5] 
 ### Response:
 class Sum {
    public static void main(String[] args) {
        int[] arr = {1,2,3,4,5};
        int max = arr[0];
        int min = arr[0]; 
  
        int sum = 0; 
        for (int i = 0; i < arr.length; i++) { 
            sum += arr[i]; 

            if (arr[i] > max) { 
                max = arr[i]; 
            } 
            if (arr[i] < min) { 
                min = arr[i]; 
            } 
        } 

        int res = sum - (max + min); 
  
        System.out.println(res); 
    } 
}"
18521,"Write a Java program to calculate the compound interest.
Input: Principal (P): 1000
Time (T): 2
Rate of Interest (R): 10
Number of Compounds (N): 4","class CompoundInterest { 
    static double compoundInterest(double principal, double time, double rate, double n) 
    { 
        return principal * (Math.pow((1 + rate / n), n * time)); 
    } 

    public static void main(String[] args) 
    { 
        double principal = 1000; 
        double time = 2; 
        double rate = 10; 
        double n = 4; 
        System.out.println(""Compound Interest is "" + compoundInterest(principal, time, rate, n)); 
    } 
}","### Instruction: 
 Write a Java program to calculate the compound interest. 
 ### Input: Principal (P): 1000
Time (T): 2
Rate of Interest (R): 10
Number of Compounds (N): 4 
 ### Response:
 class CompoundInterest { 
    static double compoundInterest(double principal, double time, double rate, double n) 
    { 
        return principal * (Math.pow((1 + rate / n), n * time)); 
    } 

    public static void main(String[] args) 
    { 
        double principal = 1000; 
        double time = 2; 
        double rate = 10; 
        double n = 4; 
        System.out.println(""Compound Interest is "" + compoundInterest(principal, time, rate, n)); 
    } 
}"
18585,Write a Java code snippet to create an array of integers of length 5.,int[] intArray = new int[5];,"### Instruction: 
 Write a Java code snippet to create an array of integers of length 5. 
 ### Response:
 int[] intArray = new int[5];"
18590,"Create a Java program to read in a number n, and print out the first n lines of Pascal's triangle.
Input: n = 5","import java.util.Scanner;

public class PascalTriangle {

	public static void main(String[] args) {

		// Read in the number of lines
		System.out.println(""Enter the number of lines: "");
		Scanner scan = new Scanner(System.in);
		int n = scan.nextInt();
		
		// Print out pascal triangle
		for(int line = 0; line < n; line++) {
			
			// Print out white spaces
			for(int i = 0; i < (n - (line+1)); i++) {
				System.out.print("" "");
			}
			
			// Create row for pascal triangle
			long num = 1;
			for(int i = 0; i <= line ; i++) {
				System.out.print(num + "" "");
				num = num * (line - i) / (i + 1);
			}
			System.out.println();
		}
	}

}","### Instruction: 
 Create a Java program to read in a number n, and print out the first n lines of Pascal's triangle. 
 ### Input: n = 5 
 ### Response:
 import java.util.Scanner;

public class PascalTriangle {

	public static void main(String[] args) {

		// Read in the number of lines
		System.out.println(""Enter the number of lines: "");
		Scanner scan = new Scanner(System.in);
		int n = scan.nextInt();
		
		// Print out pascal triangle
		for(int line = 0; line < n; line++) {
			
			// Print out white spaces
			for(int i = 0; i < (n - (line+1)); i++) {
				System.out.print("" "");
			}
			
			// Create row for pascal triangle
			long num = 1;
			for(int i = 0; i <= line ; i++) {
				System.out.print(num + "" "");
				num = num * (line - i) / (i + 1);
			}
			System.out.println();
		}
	}

}"
18597,"Write a Java statement to convert an int to float.
Input: int x = 10;",float y = (float)x;,"### Instruction: 
 Write a Java statement to convert an int to float. 
 ### Input: int x = 10; 
 ### Response:
 float y = (float)x;"
18631,"Write a Java program to calculate the average of the following array elements [2, 5, 7, 8, 9, 10].","public class AverageCalculation 
{
    public static void main(String[] args) 
    {
        int[] inputArray = {2, 5, 7, 8, 9, 10};
        double sum = 0.0;
        // calculate the sum of elements
        for(int i = 0; i < inputArray.length; i++) {
            sum += inputArray[i];
        }
        // calculate the average
        double average = sum / inputArray.length;
        System.out.println(""Average of Array Elements is: "" + average); 
    }
}","### Instruction: 
 Write a Java program to calculate the average of the following array elements [2, 5, 7, 8, 9, 10]. 
 ### Response:
 public class AverageCalculation 
{
    public static void main(String[] args) 
    {
        int[] inputArray = {2, 5, 7, 8, 9, 10};
        double sum = 0.0;
        // calculate the sum of elements
        for(int i = 0; i < inputArray.length; i++) {
            sum += inputArray[i];
        }
        // calculate the average
        double average = sum / inputArray.length;
        System.out.println(""Average of Array Elements is: "" + average); 
    }
}"
18642,"Take two numbers as input and calculate the sum of them using a Java program.
Input: x = 3
y = 4","int sum = x + y;
System.out.println(""The sum of the two numbers is: "" + sum);","### Instruction: 
 Take two numbers as input and calculate the sum of them using a Java program. 
 ### Input: x = 3
y = 4 
 ### Response:
 int sum = x + y;
System.out.println(""The sum of the two numbers is: "" + sum);"
18649,Create a Java program to print the value of the mathematical expression sin(60),"public class PrintSinValue {
    public static void main(String[] args) {
      double angleInDegrees = 60;
      double result = Math.sin(Math.toRadians(angleInDegrees));
      System.out.println(result);
    }
}","### Instruction: 
 Create a Java program to print the value of the mathematical expression sin(60) 
 ### Response:
 public class PrintSinValue {
    public static void main(String[] args) {
      double angleInDegrees = 60;
      double result = Math.sin(Math.toRadians(angleInDegrees));
      System.out.println(result);
    }
}"
18665,Create a boolean function in Java to check if a year is a leap year.,"public boolean isLeapYear(int year)
{
    if(year % 4 == 0 && (year % 100 != 0 || year % 400 == 0))
        return true;
    else
        return false;
}","### Instruction: 
 Create a boolean function in Java to check if a year is a leap year. 
 ### Response:
 public boolean isLeapYear(int year)
{
    if(year % 4 == 0 && (year % 100 != 0 || year % 400 == 0))
        return true;
    else
        return false;
}"
18680,"Change the following Java code to Swift.
Input: public static int addTwoIntegers(int a, int b) {
    return a+b;
}","func addTwoIntegers(a: Int, b: Int) -> Int {
    return a + b
}","### Instruction: 
 Change the following Java code to Swift. 
 ### Input: public static int addTwoIntegers(int a, int b) {
    return a+b;
} 
 ### Response:
 func addTwoIntegers(a: Int, b: Int) -> Int {
    return a + b
}"
18681,Create an array in Java to store 5 integer values.,int [] numArray = new int[5];,"### Instruction: 
 Create an array in Java to store 5 integer values. 
 ### Response:
 int [] numArray = new int[5];"
18685,Create a switch statement in Java to determine a given character type.,"switch (characterType) {
  case ‘A’ :
    // do something
    break;
  case ‘B’ :
    // do something
    break;
  case ‘C’ :
    // do something
    break;
}","### Instruction: 
 Create a switch statement in Java to determine a given character type. 
 ### Response:
 switch (characterType) {
  case ‘A’ :
    // do something
    break;
  case ‘B’ :
    // do something
    break;
  case ‘C’ :
    // do something
    break;
}"
18689,"Sort the given array in Java [4, 9, 3, 6, 2, 1].","int[] arr = {4, 9, 3, 6, 2, 1}; 

Arrays.sort(arr); 

System.out.println(Arrays.toString(arr));

// Output: [1, 2, 3, 4, 6, 9]","### Instruction: 
 Sort the given array in Java [4, 9, 3, 6, 2, 1]. 
 ### Response:
 int[] arr = {4, 9, 3, 6, 2, 1}; 

Arrays.sort(arr); 

System.out.println(Arrays.toString(arr));

// Output: [1, 2, 3, 4, 6, 9]"
18702,Write a Java method to remove repeated elements from an array.,"public static int[] removeDuplicates(int[] arr) { 
      
    int n = arr.length; 
    int[] temp = new int[n]; 
      
    int j = 0; 
    for (int i=0; i<n-1; i++){ 
        if (arr[i] != arr[i+1]) 
            temp[j++] = arr[i]; 
    } 
      
    temp[j++] = arr[n-1];     
      
    int[] res = new int[j];   
    for (int i=0; i<j; i++){ 
        res[i] = temp[i]; 
    } 
      
    return res; 
}","### Instruction: 
 Write a Java method to remove repeated elements from an array. 
 ### Response:
 public static int[] removeDuplicates(int[] arr) { 
      
    int n = arr.length; 
    int[] temp = new int[n]; 
      
    int j = 0; 
    for (int i=0; i<n-1; i++){ 
        if (arr[i] != arr[i+1]) 
            temp[j++] = arr[i]; 
    } 
      
    temp[j++] = arr[n-1];     
      
    int[] res = new int[j];   
    for (int i=0; i<j; i++){ 
        res[i] = temp[i]; 
    } 
      
    return res; 
}"
18703,"Using the Java collections API, create a data structure such as a HashMap to store key-value pairs.","import java.util.HashMap;

HashMap<String, Integer> myMap = new HashMap<>();
// adding key-value pairs to the HashMap
myMap.put(""Key1"", 5);
myMap.put(""Key2"", 8);
myMap.put(""Key3"", 10);
// retrieving values by keys
int val1 = myMap.get(""Key1""); 
int val2 = myMap.get(""Key2""); 
int val3 = myMap.get(""Key3"");
// etc.","### Instruction: 
 Using the Java collections API, create a data structure such as a HashMap to store key-value pairs. 
 ### Response:
 import java.util.HashMap;

HashMap<String, Integer> myMap = new HashMap<>();
// adding key-value pairs to the HashMap
myMap.put(""Key1"", 5);
myMap.put(""Key2"", 8);
myMap.put(""Key3"", 10);
// retrieving values by keys
int val1 = myMap.get(""Key1""); 
int val2 = myMap.get(""Key2""); 
int val3 = myMap.get(""Key3"");
// etc."
18741,"Write a Java method to return the largest element from an array of integers.
Input: [4, 8, 3, 10, 6]","public static int getLargestElement(int[] nums){
  int largest = nums[0];
  for(int i = 1; i < nums.length; i++){
    if(nums[i] > largest){
      largest = nums[i];
    }
  }
  return largest;
}","### Instruction: 
 Write a Java method to return the largest element from an array of integers. 
 ### Input: [4, 8, 3, 10, 6] 
 ### Response:
 public static int getLargestElement(int[] nums){
  int largest = nums[0];
  for(int i = 1; i < nums.length; i++){
    if(nums[i] > largest){
      largest = nums[i];
    }
  }
  return largest;
}"
18742,"Create a data structure in Java to store books and their associated information like ISBN, authors, etc.","class Book {
   private int ISBN;
   private String title;
   private List<String> authors;
   private int year;
 
   public Book(int ISBN, String title, List<String> authors, int year) {
     this.ISBN = ISBN;
     this.title = title;
     this.authors = authors;
     this.year = year;
   }
   //getters and setters
 }","### Instruction: 
 Create a data structure in Java to store books and their associated information like ISBN, authors, etc. 
 ### Response:
 class Book {
   private int ISBN;
   private String title;
   private List<String> authors;
   private int year;
 
   public Book(int ISBN, String title, List<String> authors, int year) {
     this.ISBN = ISBN;
     this.title = title;
     this.authors = authors;
     this.year = year;
   }
   //getters and setters
 }"
18776,"Create a class in Java for a Person object with two fields, name and age.","public class Person {
    private String name;
    private int age;
    
    public Person(String name, int age) {
        this.name = name;
        this.age = age;
    }
    
    public String getName() {
        return name;
    }

    public int getAge() {
        return age;
    }
}","### Instruction: 
 Create a class in Java for a Person object with two fields, name and age. 
 ### Response:
 public class Person {
    private String name;
    private int age;
    
    public Person(String name, int age) {
        this.name = name;
        this.age = age;
    }
    
    public String getName() {
        return name;
    }

    public int getAge() {
        return age;
    }
}"
18795,"Create a Java class called ""Dog"" with a constructor and a bark() method that prints ""Woof!"".","public class Dog {

public Dog() {

}

public void bark() {
 System.out.println(""Woof!"");
}

}","### Instruction: 
 Create a Java class called ""Dog"" with a constructor and a bark() method that prints ""Woof!"". 
 ### Response:
 public class Dog {

public Dog() {

}

public void bark() {
 System.out.println(""Woof!"");
}

}"
18798,"Create a Java class to find all substrings of a given string.
Input: String str = ""Hello World""","public class SubstringFinder {

    public static List<String> findSubstrings(String str) {
        List<String> substrings = new ArrayList<>();

        for (int i = 0; i < str.length(); i++) {
            for (int j = i + 1; j <= str.length(); j++) {
                String substr = str.substring(i, j);
                substrings.add(substr);
            }
        }
        return substrings;
    }
}

String str = ""Hello World"";
SubstringFinder.findSubstrings(str);","### Instruction: 
 Create a Java class to find all substrings of a given string. 
 ### Input: String str = ""Hello World"" 
 ### Response:
 public class SubstringFinder {

    public static List<String> findSubstrings(String str) {
        List<String> substrings = new ArrayList<>();

        for (int i = 0; i < str.length(); i++) {
            for (int j = i + 1; j <= str.length(); j++) {
                String substr = str.substring(i, j);
                substrings.add(substr);
            }
        }
        return substrings;
    }
}

String str = ""Hello World"";
SubstringFinder.findSubstrings(str);"
18805,"Create a class in Java that creates a simple calculator which will add, subtract, multiply, divide and take square root of two numbers.","public class SimpleCalculator {
    public SimpleCalculator() {}

    public double add(double a, double b) {
        return a + b;
    }

    public double subtract(double a, double b) {
        return a - b;
    }

    public double multiply(double a, double b) {
        return a * b;
    }

    public double divide(double a, double b) {
        return a / b;
    }

    public double sqrt(double a) {
        return Math.sqrt(a);
    }
}","### Instruction: 
 Create a class in Java that creates a simple calculator which will add, subtract, multiply, divide and take square root of two numbers. 
 ### Response:
 public class SimpleCalculator {
    public SimpleCalculator() {}

    public double add(double a, double b) {
        return a + b;
    }

    public double subtract(double a, double b) {
        return a - b;
    }

    public double multiply(double a, double b) {
        return a * b;
    }

    public double divide(double a, double b) {
        return a / b;
    }

    public double sqrt(double a) {
        return Math.sqrt(a);
    }
}"
18816,"Edit the following Java program to add a method printMyName. The method should print your name.
Input: public class HelloWorld {
    public static void main(String[] args) {
        System.out.println(""Hello, World!"");
    }
 }","public class HelloWorld {
    public static void main(String[] args) {
        System.out.println(""Hello, World!"");
        printMyName();
    }
    public static void printMyName(){
        System.out.println(""John Doe"");
    }
 }","### Instruction: 
 Edit the following Java program to add a method printMyName. The method should print your name. 
 ### Input: public class HelloWorld {
    public static void main(String[] args) {
        System.out.println(""Hello, World!"");
    }
 } 
 ### Response:
 public class HelloWorld {
    public static void main(String[] args) {
        System.out.println(""Hello, World!"");
        printMyName();
    }
    public static void printMyName(){
        System.out.println(""John Doe"");
    }
 }"
18822,Write a Java program to produce Fibonacci numbers up to a given number,"public class Fibonacci {
    public static void main(String[] args) {
        int limit = 10;
        System.out.print(""Fibonacci Series of ""+limit+"" numbers: "");
        for(int i=0; i<limit; i++){
            System.out.print(fibonacci(i)+"" "");
        }
    }
 
    public static int fibonacci(int number){
        if(number==0 || number==1){
            return number;
        }
 
        return fibonacci(number-1) + fibonacci(number-2);
    }
}","### Instruction: 
 Write a Java program to produce Fibonacci numbers up to a given number 
 ### Response:
 public class Fibonacci {
    public static void main(String[] args) {
        int limit = 10;
        System.out.print(""Fibonacci Series of ""+limit+"" numbers: "");
        for(int i=0; i<limit; i++){
            System.out.print(fibonacci(i)+"" "");
        }
    }
 
    public static int fibonacci(int number){
        if(number==0 || number==1){
            return number;
        }
 
        return fibonacci(number-1) + fibonacci(number-2);
    }
}"
18826,"Rewrite the following Java for loop for producing the same results in a more efficient way.
Input: int total = 0;

for (int i = 0; i < 100000000; i++) {
   total += i;
}","int total = 0;

for (int i = 0; i <= 100000000-1; i+=2){
    total += (i + (i + 1));
}","### Instruction: 
 Rewrite the following Java for loop for producing the same results in a more efficient way. 
 ### Input: int total = 0;

for (int i = 0; i < 100000000; i++) {
   total += i;
} 
 ### Response:
 int total = 0;

for (int i = 0; i <= 100000000-1; i+=2){
    total += (i + (i + 1));
}"
18878,"Create a program in Java that sort a given array using bubble sort algorithm.
Input: Array: [4, 3, 5, 2, 1]","public static void bubbleSort(int[] arr) {
  int n = arr.length;
  int temp = 0;
  for(int i=0; i < n; i++){
      for(int j=1; j < (n-i); j++){
           if(arr[j-1] > arr[j]){
                temp = arr[j-1];
                arr[j-1] = arr[j];
                arr[j] = temp;
           }
      }
  }
}","### Instruction: 
 Create a program in Java that sort a given array using bubble sort algorithm. 
 ### Input: Array: [4, 3, 5, 2, 1] 
 ### Response:
 public static void bubbleSort(int[] arr) {
  int n = arr.length;
  int temp = 0;
  for(int i=0; i < n; i++){
      for(int j=1; j < (n-i); j++){
           if(arr[j-1] > arr[j]){
                temp = arr[j-1];
                arr[j-1] = arr[j];
                arr[j] = temp;
           }
      }
  }
}"
18907,"Create a String variable in Java and assign the value ""Computer Science"".","String subject = ""Computer Science"";","### Instruction: 
 Create a String variable in Java and assign the value ""Computer Science"". 
 ### Response:
 String subject = ""Computer Science"";"
18911,"Write a Java program to print the following output: ""This is a test statement"".","public class Test {
    public static void main(String[] args) {
        System.out.println(""This is a test statement"");
    }
}","### Instruction: 
 Write a Java program to print the following output: ""This is a test statement"". 
 ### Response:
 public class Test {
    public static void main(String[] args) {
        System.out.println(""This is a test statement"");
    }
}"
18916,"How would you create a class in Java and add a field, constructor and method?","public class MyClass {
    private String field;
    
    public MyClass(String field) {
        this.field = field;
    }
    
    public void sayHello() {
        System.out.println(""Hello, "" + field + ""!"");
    }
}","### Instruction: 
 How would you create a class in Java and add a field, constructor and method? 
 ### Response:
 public class MyClass {
    private String field;
    
    public MyClass(String field) {
        this.field = field;
    }
    
    public void sayHello() {
        System.out.println(""Hello, "" + field + ""!"");
    }
}"
18932,Design a Java class to store user information.,"public class User {
    private String name;
    private int age;
    private String email;
  
    // getters and setters
  
    public User(String name, int age, String email) {
        this.name = name;
        this.age = age;
        this.email = email;
    }
}","### Instruction: 
 Design a Java class to store user information. 
 ### Response:
 public class User {
    private String name;
    private int age;
    private String email;
  
    // getters and setters
  
    public User(String name, int age, String email) {
        this.name = name;
        this.age = age;
        this.email = email;
    }
}"
18956,Implement a function in Java that finds the average of two given integers.,"public static int averageOfTwoIntegers(int a, int b) { 
    return (a + b) / 2; 
}","### Instruction: 
 Implement a function in Java that finds the average of two given integers. 
 ### Response:
 public static int averageOfTwoIntegers(int a, int b) { 
    return (a + b) / 2; 
}"
18957,"Compile this Java program and output the result.
Input: public class HelloWorld
{
 public static void main(String[] args)
 {
  System.out.println(""Hello World"");
 }
}","$ javac HelloWorld.java
$ java HelloWorld
HelloWorld","### Instruction: 
 Compile this Java program and output the result. 
 ### Input: public class HelloWorld
{
 public static void main(String[] args)
 {
  System.out.println(""Hello World"");
 }
} 
 ### Response:
 $ javac HelloWorld.java
$ java HelloWorld
HelloWorld"
18983,"Debug the given Java program to make it print out the value of x.
Input: public class DebugBug {
    public static void main(String[] args) {
        int x = 10;
        print(x);
    }
    public static void print(int x) {
    }
}","public class DebugBug {
    public static void main(String[] args) {
        int x = 10;
        print(x);
    }
    public static void print(int x) {
        System.out.println(x);
    }
}","### Instruction: 
 Debug the given Java program to make it print out the value of x. 
 ### Input: public class DebugBug {
    public static void main(String[] args) {
        int x = 10;
        print(x);
    }
    public static void print(int x) {
    }
} 
 ### Response:
 public class DebugBug {
    public static void main(String[] args) {
        int x = 10;
        print(x);
    }
    public static void print(int x) {
        System.out.println(x);
    }
}"
18986,Create a Java class called 'Rectangle' that has two properties: length and width.,"public class Rectangle { 

    // length and width parameters 
    private double length; 
    private double width; 
  
    //Empty constructor 
    public Rectangle(){
    }
  
    //Initialized constructor
    public Rectangle(double length, double width) { 
        this.length = length; 
        this.width = width; 
    } 
  
    // setters and getters 
    public void setLength(double length) { 
        this.length = length;
    } 
    public double getLength() { 
        return length; 
    } 
  
    public void setWidth(double width) { 
        this.width = width; 
    } 
    public double getWidth() { 
        return width; 
    }    
}","### Instruction: 
 Create a Java class called 'Rectangle' that has two properties: length and width. 
 ### Response:
 public class Rectangle { 

    // length and width parameters 
    private double length; 
    private double width; 
  
    //Empty constructor 
    public Rectangle(){
    }
  
    //Initialized constructor
    public Rectangle(double length, double width) { 
        this.length = length; 
        this.width = width; 
    } 
  
    // setters and getters 
    public void setLength(double length) { 
        this.length = length;
    } 
    public double getLength() { 
        return length; 
    } 
  
    public void setWidth(double width) { 
        this.width = width; 
    } 
    public double getWidth() { 
        return width; 
    }    
}"
19052,Write a Java program to define a class for a Dice object.,"class Dice {
    private int number;
    private int roll_count = 0;
    Random random = new Random();

    public int roll() {
        roll_count++;
        number = random.nextInt(6) + 1;
        return number;
    }

    public int getNumber() {
        return number;
    }

    public int getRollCount() {
        return roll_count;
    }
}","### Instruction: 
 Write a Java program to define a class for a Dice object. 
 ### Response:
 class Dice {
    private int number;
    private int roll_count = 0;
    Random random = new Random();

    public int roll() {
        roll_count++;
        number = random.nextInt(6) + 1;
        return number;
    }

    public int getNumber() {
        return number;
    }

    public int getRollCount() {
        return roll_count;
    }
}"
19076,"Create a Java class named ""Card"" to represent a standard playing card. The class should contain a constructor which takes the card's suit and number as parameters. It should also contain two getter methods to get the suit and number of the card.
Input: < noinput >","public class Card {
    private String suit;
    private int number;

    public Card(String suit, int number) {
        this.suit = suit;
        this.number = number;
    }

    public String getSuit() {
        return suit;
    }
    public int getNumber() {
        return number;
    }
}","### Instruction: 
 Create a Java class named ""Card"" to represent a standard playing card. The class should contain a constructor which takes the card's suit and number as parameters. It should also contain two getter methods to get the suit and number of the card. 
 ### Input: < noinput > 
 ### Response:
 public class Card {
    private String suit;
    private int number;

    public Card(String suit, int number) {
        this.suit = suit;
        this.number = number;
    }

    public String getSuit() {
        return suit;
    }
    public int getNumber() {
        return number;
    }
}"
19167,"Construct a for loop in Java using the following parameters: Initial value of i set to one, condition as i is less than or equal to 5, and iteration of i as subtraction of two.","for (int i = 1; i <= 5; i = i-2){
  // Code to be executed
}","### Instruction: 
 Construct a for loop in Java using the following parameters: Initial value of i set to one, condition as i is less than or equal to 5, and iteration of i as subtraction of two. 
 ### Response:
 for (int i = 1; i <= 5; i = i-2){
  // Code to be executed
}"
19174,Develop a function in Java that takes a string argument and returns it with the first letter capitalized.,"public class StringCapitalizer {
    public static String capitalize(String string) {
        return string.substring(0,1).toUpperCase() + string.substring(1);
    }
 
    public static void main(String[] args) {
        System.out.println(capitalize(""hello""));  // Output : Hello
    }
}","### Instruction: 
 Develop a function in Java that takes a string argument and returns it with the first letter capitalized. 
 ### Response:
 public class StringCapitalizer {
    public static String capitalize(String string) {
        return string.substring(0,1).toUpperCase() + string.substring(1);
    }
 
    public static void main(String[] args) {
        System.out.println(capitalize(""hello""));  // Output : Hello
    }
}"
19223,Write a Java method to swap of two integer values.,"public static void swap(int x, int y){
    int temp = x;
    x = y;
    y = temp;
}","### Instruction: 
 Write a Java method to swap of two integer values. 
 ### Response:
 public static void swap(int x, int y){
    int temp = x;
    x = y;
    y = temp;
}"
19236,"Provide a Java program for searching for a certain element in an array.
Input: [1, 2, 3, 4, 5], element=4","public class SearchInArray { 
  
    static int search(int arr[], int n, int x) { 
        for (int i = 0; i < n; i++) { 
            if (arr[i] == x) 
                return i;
        }
        return -1;
    }
 
    public static void main(String args[]) { 
        int arr[] = { 1, 2, 3, 4, 5 }; 
        int x = 4; 
        int n = arr.length; 
        System.out.println(""Element found at position: "" + search(arr, n, x));
    } 
}","### Instruction: 
 Provide a Java program for searching for a certain element in an array. 
 ### Input: [1, 2, 3, 4, 5], element=4 
 ### Response:
 public class SearchInArray { 
  
    static int search(int arr[], int n, int x) { 
        for (int i = 0; i < n; i++) { 
            if (arr[i] == x) 
                return i;
        }
        return -1;
    }
 
    public static void main(String args[]) { 
        int arr[] = { 1, 2, 3, 4, 5 }; 
        int x = 4; 
        int n = arr.length; 
        System.out.println(""Element found at position: "" + search(arr, n, x));
    } 
}"
19245,Create a class in Java which computes the sum of squares of even numbers between k and n.,"public class SumSquares {
    public static int sumSquares(int k, int n) {
        int sum = 0;
        for(int i = k; i <= n; i++) {
            if (i % 2 == 0) {
                sum += (i * i);
            }
        }
        return sum;
    }
}","### Instruction: 
 Create a class in Java which computes the sum of squares of even numbers between k and n. 
 ### Response:
 public class SumSquares {
    public static int sumSquares(int k, int n) {
        int sum = 0;
        for(int i = k; i <= n; i++) {
            if (i % 2 == 0) {
                sum += (i * i);
            }
        }
        return sum;
    }
}"
19262,"Using the provided snippet of code below, create a function in Java to convert a given array of strings to lowercase.","public static String[] toLowerCase(String[] words) {
    String[] lowerWords = new String[words.length];
    for (int i = 0; i < words.length; i++) 
        lowerWords[i] = words[i].toLowerCase();
    return lowerWords; 
}","### Instruction: 
 Using the provided snippet of code below, create a function in Java to convert a given array of strings to lowercase. 
 ### Response:
 public static String[] toLowerCase(String[] words) {
    String[] lowerWords = new String[words.length];
    for (int i = 0; i < words.length; i++) 
        lowerWords[i] = words[i].toLowerCase();
    return lowerWords; 
}"
19276,"Write a function in Java to check if the length of a string is greater than 5.
Input: String str = ""Hello World!""","public static boolean isStringLongerThan5(String str) {
  return str.length() > 5;
}","### Instruction: 
 Write a function in Java to check if the length of a string is greater than 5. 
 ### Input: String str = ""Hello World!"" 
 ### Response:
 public static boolean isStringLongerThan5(String str) {
  return str.length() > 5;
}"
19290,Write a Java program that passes an array to a method and prints its length.,"public class TestArrayLength {
    public static void printLength(int[] array) {
        System.out.println(""The length of the array is: "" + array.length);
    }
    public static void main(String[] args) {
        int[] numbers = {1, 2, 3, 4, 5};
        printLength(numbers);
    }
}","### Instruction: 
 Write a Java program that passes an array to a method and prints its length. 
 ### Response:
 public class TestArrayLength {
    public static void printLength(int[] array) {
        System.out.println(""The length of the array is: "" + array.length);
    }
    public static void main(String[] args) {
        int[] numbers = {1, 2, 3, 4, 5};
        printLength(numbers);
    }
}"
19298,Construct a program in Java for solving the Tower of Hanoi puzzle.,"import java.util.Stack;
 
public class TowerOfHanoi 
{
    public static void towersOfHanoi(int disks) 
    {
        Stack<Integer> source = new Stack<Integer>();
        Stack<Integer> destination = new Stack<Integer>();
        Stack<Integer> auxillary = new Stack<Integer>();
        int i, total_moves;
         
        System.out.println(""Source:"" + source);
        System.out.println(""Destination:"" + destination);
        System.out.println(""Auxillary:"" + auxillary);
 
        // Put all disks onto source
        for (i = disks; i > 0; i--) 
        {
            source.push(i);
        }  
         
        // Calculate total moves
        total_moves = (int) (Math.pow(2, disks) - 1); 
         
        for (i = 1; i <= total_moves; i++) 
        {
            moveDisk(source, destination, auxillary, disks);
        } 
        System.out.println(""Source:"" + source);
        System.out.println(""Destination:"" + destination);
        System.out.println(""Auxillary:"" + auxillary);
    }
 
    public static void moveDisk(Stack<Integer> source, Stack<Integer> destination, 
                                Stack<Integer> auxillary, int disks) 
    {
        int i;
        if (disks == 1) 
        {
            destination.push(source.pop());
            return;
        }        
        moveDisk(source, auxillary, destination, disks - 1); 
         
        destination.push(source.pop());
        moveDisk(auxillary, destination, source, disks - 1);
    }
    
    public static void main (String[] args) 
    {
        int disks = 3;
        towersOfHanoi(disks);
    }
}","### Instruction: 
 Construct a program in Java for solving the Tower of Hanoi puzzle. 
 ### Response:
 import java.util.Stack;
 
public class TowerOfHanoi 
{
    public static void towersOfHanoi(int disks) 
    {
        Stack<Integer> source = new Stack<Integer>();
        Stack<Integer> destination = new Stack<Integer>();
        Stack<Integer> auxillary = new Stack<Integer>();
        int i, total_moves;
         
        System.out.println(""Source:"" + source);
        System.out.println(""Destination:"" + destination);
        System.out.println(""Auxillary:"" + auxillary);
 
        // Put all disks onto source
        for (i = disks; i > 0; i--) 
        {
            source.push(i);
        }  
         
        // Calculate total moves
        total_moves = (int) (Math.pow(2, disks) - 1); 
         
        for (i = 1; i <= total_moves; i++) 
        {
            moveDisk(source, destination, auxillary, disks);
        } 
        System.out.println(""Source:"" + source);
        System.out.println(""Destination:"" + destination);
        System.out.println(""Auxillary:"" + auxillary);
    }
 
    public static void moveDisk(Stack<Integer> source, Stack<Integer> destination, 
                                Stack<Integer> auxillary, int disks) 
    {
        int i;
        if (disks == 1) 
        {
            destination.push(source.pop());
            return;
        }        
        moveDisk(source, auxillary, destination, disks - 1); 
         
        destination.push(source.pop());
        moveDisk(auxillary, destination, source, disks - 1);
    }
    
    public static void main (String[] args) 
    {
        int disks = 3;
        towersOfHanoi(disks);
    }
}"
19301,"Create a program using Java to print the sum of the following five numbers.
Input: int a = 2;
int b = 5;
int c = 8;
int d = 10;
int e = 13;","public class Sum{ 
    public static void main(String args[]) 
    {  
        int a = 2;
        int b = 5;
        int c = 8;
        int d = 10;   
        int e = 13;
        int sum = a + b + c + d + e; 
        System.out.println(""Sum = "" + sum); 
    } 
}","### Instruction: 
 Create a program using Java to print the sum of the following five numbers. 
 ### Input: int a = 2;
int b = 5;
int c = 8;
int d = 10;
int e = 13; 
 ### Response:
 public class Sum{ 
    public static void main(String args[]) 
    {  
        int a = 2;
        int b = 5;
        int c = 8;
        int d = 10;   
        int e = 13;
        int sum = a + b + c + d + e; 
        System.out.println(""Sum = "" + sum); 
    } 
}"
19312,"Modify the following Java code to debug and execute properly.
Input: public class HelloWorld {
 public static void main(String[] args) {
   System.out.print(""Hello world);
 }
}","public class HelloWorld {
 public static void main(String[] args) {
   System.out.println(""Hello world);
 }
}","### Instruction: 
 Modify the following Java code to debug and execute properly. 
 ### Input: public class HelloWorld {
 public static void main(String[] args) {
   System.out.print(""Hello world);
 }
} 
 ### Response:
 public class HelloWorld {
 public static void main(String[] args) {
   System.out.println(""Hello world);
 }
}"
19313,Generate a class in Java for retrieving data from a database.,"import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class DatabaseRetrieve {

    private Connection connection;
    private String query;

    public DatabaseRetrieve(Connection connection, String query) {
        this.connection = connection;
        this.query = query;
    }

    public ResultSet getData() throws SQLException {
        Statement stmt = connection.createStatement();
        ResultSet rs = stmt.executeQuery(query);
        return rs;
    }

}","### Instruction: 
 Generate a class in Java for retrieving data from a database. 
 ### Response:
 import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class DatabaseRetrieve {

    private Connection connection;
    private String query;

    public DatabaseRetrieve(Connection connection, String query) {
        this.connection = connection;
        this.query = query;
    }

    public ResultSet getData() throws SQLException {
        Statement stmt = connection.createStatement();
        ResultSet rs = stmt.executeQuery(query);
        return rs;
    }

}"
19375,"Write a Java method using the given parameters.
Input: methodName: sum
parameters: int number1, int number2","public static int sum(int number1, int number2) { 
    return number1 + number2; 
}","### Instruction: 
 Write a Java method using the given parameters. 
 ### Input: methodName: sum
parameters: int number1, int number2 
 ### Response:
 public static int sum(int number1, int number2) { 
    return number1 + number2; 
}"
19396,Create a class in Java that performs the following task: print out all characters of a given string along with their position in the string.,"public class PrintPosition {
    public static void printPosition(String str) {
        for (int i = 0; i < str.length(); i++) {
            System.out.println(""Character '"" + str.charAt(i) + ""' is at position "" + i);
        }
    }
}","### Instruction: 
 Create a class in Java that performs the following task: print out all characters of a given string along with their position in the string. 
 ### Response:
 public class PrintPosition {
    public static void printPosition(String str) {
        for (int i = 0; i < str.length(); i++) {
            System.out.println(""Character '"" + str.charAt(i) + ""' is at position "" + i);
        }
    }
}"
19458,Write a class in Java to convert a decimal number to its binary equivalent.,"public class DecToBin { 
    // function to convert from Decimal to binary 
    public static String decToBin(int n) 
    { 
        String res = """"; 
        while (n > 0) { 
            res = (n % 2) + res; 
            n = n / 2; 
        } 
        return res; 
    } 
  
    // Driver code 
    public static void main (String[] args) 
    { 
        int num = 8; 
        System.out.println(""Binary equivalent of "" +num+ "" is :"" + decToBin(num)); 
    } 
}
# Output: Binary equivalent of 8 is :1000","### Instruction: 
 Write a class in Java to convert a decimal number to its binary equivalent. 
 ### Response:
 public class DecToBin { 
    // function to convert from Decimal to binary 
    public static String decToBin(int n) 
    { 
        String res = """"; 
        while (n > 0) { 
            res = (n % 2) + res; 
            n = n / 2; 
        } 
        return res; 
    } 
  
    // Driver code 
    public static void main (String[] args) 
    { 
        int num = 8; 
        System.out.println(""Binary equivalent of "" +num+ "" is :"" + decToBin(num)); 
    } 
}
# Output: Binary equivalent of 8 is :1000"
19462,"Select the correct answer from the following options to complete the Java code:

int a = 12, b = 6;
int result = ________",a * b;,"### Instruction: 
 Select the correct answer from the following options to complete the Java code:

int a = 12, b = 6;
int result = ________ 
 ### Response:
 a * b;"
19478,"Write a Java code to encrypt a password using `sha1` hash.
Input: String password = ""password123"";","String hash = MessageDigest.getInstance(""SHA-1"").digest(password.getBytes(StandardCharsets.UTF_8));","### Instruction: 
 Write a Java code to encrypt a password using `sha1` hash. 
 ### Input: String password = ""password123""; 
 ### Response:
 String hash = MessageDigest.getInstance(""SHA-1"").digest(password.getBytes(StandardCharsets.UTF_8));"
19499,"Compile a Java class named ""Example"".",javac Example.java,"### Instruction: 
 Compile a Java class named ""Example"". 
 ### Response:
 javac Example.java"
19506,"Create an object-oriented programming class in Java named ""Car"" with three private instance variables ""make"", ""speed"" and ""color"".","public class Car { 
    private String make; 
    private int speed; 
    private String color; 
 
    public Car() { 
        this.make = ""default""; 
        this.speed = 100; 
        this.color = ""black""; 
    } 
 
    public Car(String make, int speed, String color) { 
        this.make = make; 
        this.speed = speed; 
        this.color = color; 
    } 
 
    // getter methods 
    public String getMake() { 
        return this.make; 
    } 
 
    public int getSpeed() { 
        return this.speed; 
    } 
 
    public String getColor() { 
        return this.color; 
    } 
 
    // setter methods 
    public void setMake(String make) { 
        this.make = make; 
    } 
 
    public void setSpeed(int speed) { 
        this.speed = speed; 
    } 
 
    public void setColor(String color) { 
        this.color = color; 
    } 
}","### Instruction: 
 Create an object-oriented programming class in Java named ""Car"" with three private instance variables ""make"", ""speed"" and ""color"". 
 ### Response:
 public class Car { 
    private String make; 
    private int speed; 
    private String color; 
 
    public Car() { 
        this.make = ""default""; 
        this.speed = 100; 
        this.color = ""black""; 
    } 
 
    public Car(String make, int speed, String color) { 
        this.make = make; 
        this.speed = speed; 
        this.color = color; 
    } 
 
    // getter methods 
    public String getMake() { 
        return this.make; 
    } 
 
    public int getSpeed() { 
        return this.speed; 
    } 
 
    public String getColor() { 
        return this.color; 
    } 
 
    // setter methods 
    public void setMake(String make) { 
        this.make = make; 
    } 
 
    public void setSpeed(int speed) { 
        this.speed = speed; 
    } 
 
    public void setColor(String color) { 
        this.color = color; 
    } 
}"
19518,"Create a function in Java to take a sentence as input and return a list of all the words in the sentence.
Input: I am a student","# Using Java:
public static List<String> getWords(String sentence) {
    List<String> words = new ArrayList<>();
    String[] wordsArray = sentence.split(""\\s+"");
    for (String word : wordsArray) {
        words.add(word);
    }
    return words;
}","### Instruction: 
 Create a function in Java to take a sentence as input and return a list of all the words in the sentence. 
 ### Input: I am a student 
 ### Response:
 # Using Java:
public static List<String> getWords(String sentence) {
    List<String> words = new ArrayList<>();
    String[] wordsArray = sentence.split(""\\s+"");
    for (String word : wordsArray) {
        words.add(word);
    }
    return words;
}"
19527,"Create a program in Java that takes an array with two integers as input and prints the multiplication of those two input integers.
Input: arr = [3, 4]","public class Main {
  public static void main(String[] args) {
    int[] arr = {3,4};
    
    int num1 = arr[0];
    int num2 = arr[1];
    int result = num1 * num2;
    
    System.out.println(result);
  }
}","### Instruction: 
 Create a program in Java that takes an array with two integers as input and prints the multiplication of those two input integers. 
 ### Input: arr = [3, 4] 
 ### Response:
 public class Main {
  public static void main(String[] args) {
    int[] arr = {3,4};
    
    int num1 = arr[0];
    int num2 = arr[1];
    int result = num1 * num2;
    
    System.out.println(result);
  }
}"
19547,"Create a class Employee in Java which contains the name, age and salary of the employee.","public class Employee {
    private String name;
    private int age;
    private double salary;
    
    public Employee() { }
    
    public Employee(String name, int age, double salary) {
        this.name = name;
        this.age = age;
        this.salary = salary;
    }
    
    public String getName() {
        return this.name;
    }
    
    public int getAge() {
        return this.age;
    }
    
    public double getSalary() {
        return this.salary;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    public void setAge(int age) {
        this.age = age;
    }
    
    public void setSalary(double salary) {
        this.salary = salary;
    }
}","### Instruction: 
 Create a class Employee in Java which contains the name, age and salary of the employee. 
 ### Response:
 public class Employee {
    private String name;
    private int age;
    private double salary;
    
    public Employee() { }
    
    public Employee(String name, int age, double salary) {
        this.name = name;
        this.age = age;
        this.salary = salary;
    }
    
    public String getName() {
        return this.name;
    }
    
    public int getAge() {
        return this.age;
    }
    
    public double getSalary() {
        return this.salary;
    }
    
    public void setName(String name) {
        this.name = name;
    }
    
    public void setAge(int age) {
        this.age = age;
    }
    
    public void setSalary(double salary) {
        this.salary = salary;
    }
}"
19614,Create a series of nested for loops in Java to print the numbers from 1 to 10 in descending order on a single line.,"for (int i = 10; i >= 1; i--) 
    System.out.print(i + "" "");","### Instruction: 
 Create a series of nested for loops in Java to print the numbers from 1 to 10 in descending order on a single line. 
 ### Response:
 for (int i = 10; i >= 1; i--) 
    System.out.print(i + "" "");"
19617,"Write an algorithm in Java to reverse an array.
Input: [1, 2, 3, 4, 5]","int[] reverse = new int[arr.length]; 
 
int j = arr.length; 
  
// Initializing the index of reverse array 
int i; 
  
for (i = 0; i < arr.length; i++)  
{ 
    reverse[j - 1] = arr[i]; 
  
    j--; 
}","### Instruction: 
 Write an algorithm in Java to reverse an array. 
 ### Input: [1, 2, 3, 4, 5] 
 ### Response:
 int[] reverse = new int[arr.length]; 
 
int j = arr.length; 
  
// Initializing the index of reverse array 
int i; 
  
for (i = 0; i < arr.length; i++)  
{ 
    reverse[j - 1] = arr[i]; 
  
    j--; 
}"
19622,Compose a for loop in Java to print the numbers from 4 to 1 one line.,"for (int i = 4; i > 0; i--) {
    System.out.print(i + "" "");
}","### Instruction: 
 Compose a for loop in Java to print the numbers from 4 to 1 one line. 
 ### Response:
 for (int i = 4; i > 0; i--) {
    System.out.print(i + "" "");
}"
19632,Write a Java program that prompts the user to enter two strings and outputs whether the two strings are anagrams.,"import java.util.HashMap;

public class Anagram { 

    // Utility method to check whether two strings are anagram or not 
    static boolean areAnagram(String A, String B) { 
  
        // If length of both strings is not same, then they can't be anagram
        if (A.length() != B.length()) 
            return false; 
  
        // Make a copy of string
        A = A.toLowerCase(); 
        B = B.toLowerCase(); 
  
        // Create a hash map
        HashMap<Character, Integer> map = new HashMap<>(); 
  
        // Iterate through both strings and increment count
        // in hash map 
        for (int i = 0; i < A.length(); i++) { 
            char ch = A.charAt(i); 
  
            if (map.containsKey(ch)) {
                int f = map.get(ch); 
                f++; 
                map.put(ch, f); 
            } else {
                map.put(ch, 1); 
            }
        } 
  
        for (int i = 0; i < B.length(); i++) {
            char ch = B.charAt(i); 
            if (map.containsKey(ch)) {
                int f = map.get(ch); 

                // If char is not present, then by default 
                // f would be 0
                if (f == 0) 
                    return false; 
  
                f--; 
                map.put(ch, f); 
            } else {
                return false; 
            }
        }
        return true;
    } 
  
    // Driver code 
    public static void main (String[] args) throws java.lang.Exception { 
        String A = ""listen"";
        String B = ""silent"";
        if (areAnagram(A, B)) {
            System.out.println(""The two strings are anagrams of each other."");
        } else {
            System.out.println(""The two strings are not anagrams of each other."");
        }
    } 
}","### Instruction: 
 Write a Java program that prompts the user to enter two strings and outputs whether the two strings are anagrams. 
 ### Response:
 import java.util.HashMap;

public class Anagram { 

    // Utility method to check whether two strings are anagram or not 
    static boolean areAnagram(String A, String B) { 
  
        // If length of both strings is not same, then they can't be anagram
        if (A.length() != B.length()) 
            return false; 
  
        // Make a copy of string
        A = A.toLowerCase(); 
        B = B.toLowerCase(); 
  
        // Create a hash map
        HashMap<Character, Integer> map = new HashMap<>(); 
  
        // Iterate through both strings and increment count
        // in hash map 
        for (int i = 0; i < A.length(); i++) { 
            char ch = A.charAt(i); 
  
            if (map.containsKey(ch)) {
                int f = map.get(ch); 
                f++; 
                map.put(ch, f); 
            } else {
                map.put(ch, 1); 
            }
        } 
  
        for (int i = 0; i < B.length(); i++) {
            char ch = B.charAt(i); 
            if (map.containsKey(ch)) {
                int f = map.get(ch); 

                // If char is not present, then by default 
                // f would be 0
                if (f == 0) 
                    return false; 
  
                f--; 
                map.put(ch, f); 
            } else {
                return false; 
            }
        }
        return true;
    } 
  
    // Driver code 
    public static void main (String[] args) throws java.lang.Exception { 
        String A = ""listen"";
        String B = ""silent"";
        if (areAnagram(A, B)) {
            System.out.println(""The two strings are anagrams of each other."");
        } else {
            System.out.println(""The two strings are not anagrams of each other."");
        }
    } 
}"
19663,"Create a set in Java from a given array of numbers.
Input: Array: [2, 3, 5, 4, 2, 3]","int[] arr = {2, 3, 5, 4, 2, 3};
Set<Integer> set = new HashSet<Integer>();
for (int i : arr) {
    set.add(i);
}","### Instruction: 
 Create a set in Java from a given array of numbers. 
 ### Input: Array: [2, 3, 5, 4, 2, 3] 
 ### Response:
 int[] arr = {2, 3, 5, 4, 2, 3};
Set<Integer> set = new HashSet<Integer>();
for (int i : arr) {
    set.add(i);
}"
19694,"Construct an if-else block in Java to determine if the number 15 is an even number or an odd number.
Input: Integer: 15","int num = 15;

if(num % 2 == 0)
{
  System.out.println(""Even"");
}
else
{
  System.out.println(""Odd"");
}","### Instruction: 
 Construct an if-else block in Java to determine if the number 15 is an even number or an odd number. 
 ### Input: Integer: 15 
 ### Response:
 int num = 15;

if(num % 2 == 0)
{
  System.out.println(""Even"");
}
else
{
  System.out.println(""Odd"");
}"
19702,Write a code in Java that will get all the elements from an array that are greater than the given number.,"public static List<Integer> getElementsGreaterThan(int[] array, int number) {
    List<Integer> result = new ArrayList<>();
    for (int element : array) {
        if (element > number) {
            result.add(element);
        }
    }
    return result;
}","### Instruction: 
 Write a code in Java that will get all the elements from an array that are greater than the given number. 
 ### Response:
 public static List<Integer> getElementsGreaterThan(int[] array, int number) {
    List<Integer> result = new ArrayList<>();
    for (int element : array) {
        if (element > number) {
            result.add(element);
        }
    }
    return result;
}"
19738,"With a Java program, convert a string to all lowercase letters.
Input: myString = ""HeLlO WoRlD""","String lowerString = myString.toLowerCase(); 
System.out.println(lowerString); // Outputs ""hello world""","### Instruction: 
 With a Java program, convert a string to all lowercase letters. 
 ### Input: myString = ""HeLlO WoRlD"" 
 ### Response:
 String lowerString = myString.toLowerCase(); 
System.out.println(lowerString); // Outputs ""hello world"""
19806,"Develop a Java program that prints all the leap years up to a given year.
Input: Year = 2020","public class LeapYear {  
    public static void main(String[] args) {  
      
	      int year = 2020;  
	
        System.out.println(""Leap years up to ""+year+"" are :"");     
        for (int i = 1; i <= year; i++) {  
            if (i % 4 == 0) {  
                if (i % 100 == 0) {  
                    if (i % 400 == 0) {  
                        System.out.print(i + "" "");  
                    }  
                } else {  
                    System.out.print(i + "" "");  
                }  
            }  
        }  
    }  
}","### Instruction: 
 Develop a Java program that prints all the leap years up to a given year. 
 ### Input: Year = 2020 
 ### Response:
 public class LeapYear {  
    public static void main(String[] args) {  
      
	      int year = 2020;  
	
        System.out.println(""Leap years up to ""+year+"" are :"");     
        for (int i = 1; i <= year; i++) {  
            if (i % 4 == 0) {  
                if (i % 100 == 0) {  
                    if (i % 400 == 0) {  
                        System.out.print(i + "" "");  
                    }  
                } else {  
                    System.out.print(i + "" "");  
                }  
            }  
        }  
    }  
}"
19841,"Create a method in Java that takes in a string and prints its contents in reverse.
Input: String s= ""Hello World!""","public class ReverseString {
public void printReverseString(String s) {
 for(int i= s.length()-1; i>=0; i--) {
 char c = s.charAt(i);
 System.out.print(c);
 }
 System.out.println();
 }
}","### Instruction: 
 Create a method in Java that takes in a string and prints its contents in reverse. 
 ### Input: String s= ""Hello World!"" 
 ### Response:
 public class ReverseString {
public void printReverseString(String s) {
 for(int i= s.length()-1; i>=0; i--) {
 char c = s.charAt(i);
 System.out.print(c);
 }
 System.out.println();
 }
}"
19874,"Create a function in Java that filters a given array by a specific number.
Input: int[] arr = {4, 2, 10, 15, 8, 7}; 
int K = 9;","public static int[] filterArrayByK(int[] arr, int k) { 
	int i, j, index = 0; 
	int[] filteredArray = new int[arr.length]; 

	for (i = 0; i < arr.length; i++) { 
		if (arr[i] <= k) { 
			filteredArray[index] = arr[i]; 
			index++; 
		} 
	} 

	int[] result = new int[index]; 
	for (j = 0; j < index; j++) { 
		result[j] = filteredArray[j]; 
	} 

	return result; 
}","### Instruction: 
 Create a function in Java that filters a given array by a specific number. 
 ### Input: int[] arr = {4, 2, 10, 15, 8, 7}; 
int K = 9; 
 ### Response:
 public static int[] filterArrayByK(int[] arr, int k) { 
	int i, j, index = 0; 
	int[] filteredArray = new int[arr.length]; 

	for (i = 0; i < arr.length; i++) { 
		if (arr[i] <= k) { 
			filteredArray[index] = arr[i]; 
			index++; 
		} 
	} 

	int[] result = new int[index]; 
	for (j = 0; j < index; j++) { 
		result[j] = filteredArray[j]; 
	} 

	return result; 
}"
19900,Develop a Java program to check if an input number is an Armstrong number.,"public class ArmstrongNumber {
 	public static void main(String[] args) {
 		int number = 407; 
 		// sample input
 
 		// calculate the length of the number
 		int lengthOfNumber = String.valueOf(number).length();
 
 		int tempNumber = number;
 
 		int sum = 0; 
 
 		while (tempNumber != 0) {
 			int digit = tempNumber % 10;
 			sum = sum + (int) Math.pow(digit, lengthOfNumber);
 			tempNumber = tempNumber / 10;
 		}
 
 		if (sum == number)
 			System.out.println(number + "" is an Armstrong number."");
 		else
 			System.out.println(number + "" is not an Armstrong number."");
 	}
 }","### Instruction: 
 Develop a Java program to check if an input number is an Armstrong number. 
 ### Response:
 public class ArmstrongNumber {
 	public static void main(String[] args) {
 		int number = 407; 
 		// sample input
 
 		// calculate the length of the number
 		int lengthOfNumber = String.valueOf(number).length();
 
 		int tempNumber = number;
 
 		int sum = 0; 
 
 		while (tempNumber != 0) {
 			int digit = tempNumber % 10;
 			sum = sum + (int) Math.pow(digit, lengthOfNumber);
 			tempNumber = tempNumber / 10;
 		}
 
 		if (sum == number)
 			System.out.println(number + "" is an Armstrong number."");
 		else
 			System.out.println(number + "" is not an Armstrong number."");
 	}
 }"
19902,Generate a for loop in Java for printing integers from 0 to 10.,"for (int i = 0; i <= 10; i++) {
    System.out.println(i);
}","### Instruction: 
 Generate a for loop in Java for printing integers from 0 to 10. 
 ### Response:
 for (int i = 0; i <= 10; i++) {
    System.out.println(i);
}"
19975,"Write an algorithm in Java to reverse the words in a string.
Input: The quick brown fox","String[] words = input.split(""\\s"");
String reversedString = """";
 
for (int i = words.length - 1; i >= 0; i--) 
{
   reversedString += words[i] + "" "";
}

System.out.println(reversedString);","### Instruction: 
 Write an algorithm in Java to reverse the words in a string. 
 ### Input: The quick brown fox 
 ### Response:
 String[] words = input.split(""\\s"");
String reversedString = """";
 
for (int i = words.length - 1; i >= 0; i--) 
{
   reversedString += words[i] + "" "";
}

System.out.println(reversedString);"
19981,Create a Java web application that displays a welcome message.,"import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet(""/welcome"")
public class WelcomeServlet extends HttpServlet {
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.setContentType(""text/html"");
		PrintWriter out=response.getWriter(); 
		String title=""Welcome to Website"";
		String docType=""<!doctype html"";
		out.println(docType +
				""<html>\n"" +
				""<head><title>"" + title + ""</title></head>\n"" +
				""<body bgcolor=\""#f0f0f0\"">\n"" +
				""<h1>Welcome to My Website!</h1>\n"" +
				""</body></html>"");
	}
}","### Instruction: 
 Create a Java web application that displays a welcome message. 
 ### Response:
 import java.io.IOException;
import java.io.PrintWriter;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@WebServlet(""/welcome"")
public class WelcomeServlet extends HttpServlet {
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		response.setContentType(""text/html"");
		PrintWriter out=response.getWriter(); 
		String title=""Welcome to Website"";
		String docType=""<!doctype html"";
		out.println(docType +
				""<html>\n"" +
				""<head><title>"" + title + ""</title></head>\n"" +
				""<body bgcolor=\""#f0f0f0\"">\n"" +
				""<h1>Welcome to My Website!</h1>\n"" +
				""</body></html>"");
	}
}"
19999,Write a method in Java to return a reversed version of a given string.,"public static String reverseString(String s) {
  StringBuilder sb = new StringBuilder();
  for (int i = s.length() - 1; i >= 0; i--) {
    sb.append(s.charAt(i));
  }
  return sb.toString();
}","### Instruction: 
 Write a method in Java to return a reversed version of a given string. 
 ### Response:
 public static String reverseString(String s) {
  StringBuilder sb = new StringBuilder();
  for (int i = s.length() - 1; i >= 0; i--) {
    sb.append(s.charAt(i));
  }
  return sb.toString();
}"
